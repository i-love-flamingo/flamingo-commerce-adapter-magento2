// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GiftCardAccountDataGiftCardAccountInterface Gift Card Account data
// swagger:model gift-card-account-data-gift-card-account-interface
type GiftCardAccountDataGiftCardAccountInterface struct {

	// Cards amount in base currency
	// Required: true
	BaseGiftCardsAmount *float64 `json:"base_gift_cards_amount"`

	// Cards amount used in base currency
	// Required: true
	BaseGiftCardsAmountUsed *float64 `json:"base_gift_cards_amount_used"`

	// extension attributes
	ExtensionAttributes GiftCardAccountDataGiftCardAccountExtensionInterface `json:"extension_attributes,omitempty"`

	// Cards codes
	// Required: true
	GiftCards []string `json:"gift_cards"`

	// Cards amount in quote currency
	// Required: true
	GiftCardsAmount *float64 `json:"gift_cards_amount"`

	// Cards amount used in quote currency
	// Required: true
	GiftCardsAmountUsed *float64 `json:"gift_cards_amount_used"`
}

// Validate validates this gift card account data gift card account interface
func (m *GiftCardAccountDataGiftCardAccountInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBaseGiftCardsAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBaseGiftCardsAmountUsed(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGiftCards(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGiftCardsAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGiftCardsAmountUsed(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GiftCardAccountDataGiftCardAccountInterface) validateBaseGiftCardsAmount(formats strfmt.Registry) error {

	if err := validate.Required("base_gift_cards_amount", "body", m.BaseGiftCardsAmount); err != nil {
		return err
	}

	return nil
}

func (m *GiftCardAccountDataGiftCardAccountInterface) validateBaseGiftCardsAmountUsed(formats strfmt.Registry) error {

	if err := validate.Required("base_gift_cards_amount_used", "body", m.BaseGiftCardsAmountUsed); err != nil {
		return err
	}

	return nil
}

func (m *GiftCardAccountDataGiftCardAccountInterface) validateGiftCards(formats strfmt.Registry) error {

	if err := validate.Required("gift_cards", "body", m.GiftCards); err != nil {
		return err
	}

	return nil
}

func (m *GiftCardAccountDataGiftCardAccountInterface) validateGiftCardsAmount(formats strfmt.Registry) error {

	if err := validate.Required("gift_cards_amount", "body", m.GiftCardsAmount); err != nil {
		return err
	}

	return nil
}

func (m *GiftCardAccountDataGiftCardAccountInterface) validateGiftCardsAmountUsed(formats strfmt.Registry) error {

	if err := validate.Required("gift_cards_amount_used", "body", m.GiftCardsAmountUsed); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GiftCardAccountDataGiftCardAccountInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GiftCardAccountDataGiftCardAccountInterface) UnmarshalBinary(b []byte) error {
	var res GiftCardAccountDataGiftCardAccountInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
