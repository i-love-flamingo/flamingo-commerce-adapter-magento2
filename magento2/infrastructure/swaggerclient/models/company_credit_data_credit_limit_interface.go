// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CompanyCreditDataCreditLimitInterface Credit Limit data transfer object interface.
// swagger:model company-credit-data-credit-limit-interface
type CompanyCreditDataCreditLimitInterface struct {

	// Available Limit.
	AvailableLimit float64 `json:"available_limit,omitempty"`

	// Balance.
	Balance float64 `json:"balance,omitempty"`

	// Company id.
	CompanyID int64 `json:"company_id,omitempty"`

	// Credit comment for company credit history.
	CreditComment string `json:"credit_comment,omitempty"`

	// Credit Limit.
	CreditLimit float64 `json:"credit_limit,omitempty"`

	// Currency Code.
	CurrencyCode string `json:"currency_code,omitempty"`

	// Exceed Limit.
	// Required: true
	ExceedLimit *bool `json:"exceed_limit"`

	// extension attributes
	ExtensionAttributes CompanyCreditDataCreditLimitExtensionInterface `json:"extension_attributes,omitempty"`

	// ID.
	ID int64 `json:"id,omitempty"`
}

// Validate validates this company credit data credit limit interface
func (m *CompanyCreditDataCreditLimitInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExceedLimit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CompanyCreditDataCreditLimitInterface) validateExceedLimit(formats strfmt.Registry) error {

	if err := validate.Required("exceed_limit", "body", m.ExceedLimit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CompanyCreditDataCreditLimitInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CompanyCreditDataCreditLimitInterface) UnmarshalBinary(b []byte) error {
	var res CompanyCreditDataCreditLimitInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
