// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DownloadableDataLinkInterface downloadable data link interface
// swagger:model downloadable-data-link-interface
type DownloadableDataLinkInterface struct {

	// extension attributes
	ExtensionAttributes DownloadableDataLinkExtensionInterface `json:"extension_attributes,omitempty"`

	// Sample(or link) id
	ID int64 `json:"id,omitempty"`

	// Shareable status
	// Required: true
	IsShareable *int64 `json:"is_shareable"`

	// relative file path
	LinkFile string `json:"link_file,omitempty"`

	// link file content
	LinkFileContent *DownloadableDataFileContentInterface `json:"link_file_content,omitempty"`

	// link type
	// Required: true
	LinkType *string `json:"link_type"`

	// Link url or null when type is 'file'
	LinkURL string `json:"link_url,omitempty"`

	// Of downloads per user
	NumberOfDownloads int64 `json:"number_of_downloads,omitempty"`

	// Price
	// Required: true
	Price *float64 `json:"price"`

	// relative file path
	SampleFile string `json:"sample_file,omitempty"`

	// sample file content
	SampleFileContent *DownloadableDataFileContentInterface `json:"sample_file_content,omitempty"`

	// sample type
	// Required: true
	SampleType *string `json:"sample_type"`

	// file URL
	SampleURL string `json:"sample_url,omitempty"`

	// sort order
	// Required: true
	SortOrder *int64 `json:"sort_order"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this downloadable data link interface
func (m *DownloadableDataLinkInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsShareable(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkFileContent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSampleFileContent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSampleType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSortOrder(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DownloadableDataLinkInterface) validateIsShareable(formats strfmt.Registry) error {

	if err := validate.Required("is_shareable", "body", m.IsShareable); err != nil {
		return err
	}

	return nil
}

func (m *DownloadableDataLinkInterface) validateLinkFileContent(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkFileContent) { // not required
		return nil
	}

	if m.LinkFileContent != nil {
		if err := m.LinkFileContent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("link_file_content")
			}
			return err
		}
	}

	return nil
}

func (m *DownloadableDataLinkInterface) validateLinkType(formats strfmt.Registry) error {

	if err := validate.Required("link_type", "body", m.LinkType); err != nil {
		return err
	}

	return nil
}

func (m *DownloadableDataLinkInterface) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("price", "body", m.Price); err != nil {
		return err
	}

	return nil
}

func (m *DownloadableDataLinkInterface) validateSampleFileContent(formats strfmt.Registry) error {

	if swag.IsZero(m.SampleFileContent) { // not required
		return nil
	}

	if m.SampleFileContent != nil {
		if err := m.SampleFileContent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sample_file_content")
			}
			return err
		}
	}

	return nil
}

func (m *DownloadableDataLinkInterface) validateSampleType(formats strfmt.Registry) error {

	if err := validate.Required("sample_type", "body", m.SampleType); err != nil {
		return err
	}

	return nil
}

func (m *DownloadableDataLinkInterface) validateSortOrder(formats strfmt.Registry) error {

	if err := validate.Required("sort_order", "body", m.SortOrder); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DownloadableDataLinkInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DownloadableDataLinkInterface) UnmarshalBinary(b []byte) error {
	var res DownloadableDataLinkInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
