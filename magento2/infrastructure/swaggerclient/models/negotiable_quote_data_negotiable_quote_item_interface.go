// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NegotiableQuoteDataNegotiableQuoteItemInterface Interface CompanyQuoteConfigInterface
// swagger:model negotiable-quote-data-negotiable-quote-item-interface
type NegotiableQuoteDataNegotiableQuoteItemInterface struct {

	// extension attributes
	ExtensionAttributes NegotiableQuoteDataNegotiableQuoteItemExtensionInterface `json:"extension_attributes,omitempty"`

	// Quote item id
	// Required: true
	ItemID *int64 `json:"item_id"`

	// Quote item original discount amount
	// Required: true
	OriginalDiscountAmount *float64 `json:"original_discount_amount"`

	// Quote item original price
	// Required: true
	OriginalPrice *float64 `json:"original_price"`

	// Quote item original tax amount
	// Required: true
	OriginalTaxAmount *float64 `json:"original_tax_amount"`
}

// Validate validates this negotiable quote data negotiable quote item interface
func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItemID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalDiscountAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalPrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOriginalTaxAmount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) validateItemID(formats strfmt.Registry) error {

	if err := validate.Required("item_id", "body", m.ItemID); err != nil {
		return err
	}

	return nil
}

func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) validateOriginalDiscountAmount(formats strfmt.Registry) error {

	if err := validate.Required("original_discount_amount", "body", m.OriginalDiscountAmount); err != nil {
		return err
	}

	return nil
}

func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) validateOriginalPrice(formats strfmt.Registry) error {

	if err := validate.Required("original_price", "body", m.OriginalPrice); err != nil {
		return err
	}

	return nil
}

func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) validateOriginalTaxAmount(formats strfmt.Registry) error {

	if err := validate.Required("original_tax_amount", "body", m.OriginalTaxAmount); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NegotiableQuoteDataNegotiableQuoteItemInterface) UnmarshalBinary(b []byte) error {
	var res NegotiableQuoteDataNegotiableQuoteItemInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
