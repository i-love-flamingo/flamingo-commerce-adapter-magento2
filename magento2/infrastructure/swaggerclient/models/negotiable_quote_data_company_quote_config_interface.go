// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NegotiableQuoteDataCompanyQuoteConfigInterface Interface CompanyQuoteConfigInterface
// swagger:model negotiable-quote-data-company-quote-config-interface
type NegotiableQuoteDataCompanyQuoteConfigInterface struct {

	// Company id
	CompanyID string `json:"company_id,omitempty"`

	// extension attributes
	ExtensionAttributes NegotiableQuoteDataCompanyQuoteConfigExtensionInterface `json:"extension_attributes,omitempty"`

	// Quote enabled for company
	// Required: true
	IsQuoteEnabled *bool `json:"is_quote_enabled"`
}

// Validate validates this negotiable quote data company quote config interface
func (m *NegotiableQuoteDataCompanyQuoteConfigInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsQuoteEnabled(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NegotiableQuoteDataCompanyQuoteConfigInterface) validateIsQuoteEnabled(formats strfmt.Registry) error {

	if err := validate.Required("is_quote_enabled", "body", m.IsQuoteEnabled); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NegotiableQuoteDataCompanyQuoteConfigInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NegotiableQuoteDataCompanyQuoteConfigInterface) UnmarshalBinary(b []byte) error {
	var res NegotiableQuoteDataCompanyQuoteConfigInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
