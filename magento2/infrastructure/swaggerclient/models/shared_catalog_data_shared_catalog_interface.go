// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SharedCatalogDataSharedCatalogInterface SharedCatalogInterface interface.
// swagger:model shared-catalog-data-shared-catalog-interface
type SharedCatalogDataSharedCatalogInterface struct {

	// Created time for Shared Catalog.
	// Required: true
	CreatedAt *string `json:"created_at"`

	// Admin id for Shared Catalog.
	// Required: true
	CreatedBy *int64 `json:"created_by"`

	// Customer Group Id.
	// Required: true
	CustomerGroupID *int64 `json:"customer_group_id"`

	// Shared Catalog description.
	// Required: true
	Description *string `json:"description"`

	// ID.
	ID int64 `json:"id,omitempty"`

	// Shared Catalog name.
	// Required: true
	Name *string `json:"name"`

	// Store id for Shared Catalog.
	// Required: true
	StoreID *int64 `json:"store_id"`

	// Tax class id.
	// Required: true
	TaxClassID *int64 `json:"tax_class_id"`

	// Shared Catalog type.
	// Required: true
	Type *int64 `json:"type"`
}

// Validate validates this shared catalog data shared catalog interface
func (m *SharedCatalogDataSharedCatalogInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedBy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustomerGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStoreID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTaxClassID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateCreatedBy(formats strfmt.Registry) error {

	if err := validate.Required("created_by", "body", m.CreatedBy); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateCustomerGroupID(formats strfmt.Registry) error {

	if err := validate.Required("customer_group_id", "body", m.CustomerGroupID); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateStoreID(formats strfmt.Registry) error {

	if err := validate.Required("store_id", "body", m.StoreID); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateTaxClassID(formats strfmt.Registry) error {

	if err := validate.Required("tax_class_id", "body", m.TaxClassID); err != nil {
		return err
	}

	return nil
}

func (m *SharedCatalogDataSharedCatalogInterface) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SharedCatalogDataSharedCatalogInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SharedCatalogDataSharedCatalogInterface) UnmarshalBinary(b []byte) error {
	var res SharedCatalogDataSharedCatalogInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
