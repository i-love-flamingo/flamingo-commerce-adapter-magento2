// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CatalogDataProductInterface catalog data product interface
// swagger:model catalog-data-product-interface
type CatalogDataProductInterface struct {

	// Attribute set id
	AttributeSetID int64 `json:"attribute_set_id,omitempty"`

	// Created date
	CreatedAt string `json:"created_at,omitempty"`

	// Custom attributes values.
	CustomAttributes []*FrameworkAttributeInterface `json:"custom_attributes"`

	// extension attributes
	ExtensionAttributes *CatalogDataProductExtensionInterface `json:"extension_attributes,omitempty"`

	// Id
	ID int64 `json:"id,omitempty"`

	// Media gallery entries
	MediaGalleryEntries []*CatalogDataProductAttributeMediaGalleryEntryInterface `json:"media_gallery_entries"`

	// Name
	Name string `json:"name,omitempty"`

	// List of product options
	Options []*CatalogDataProductCustomOptionInterface `json:"options"`

	// Price
	Price float64 `json:"price,omitempty"`

	// Product links info
	ProductLinks []*CatalogDataProductLinkInterface `json:"product_links"`

	// Sku
	// Required: true
	Sku *string `json:"sku"`

	// Status
	Status int64 `json:"status,omitempty"`

	// List of product tier prices
	TierPrices []*CatalogDataProductTierPriceInterface `json:"tier_prices"`

	// Type id
	TypeID string `json:"type_id,omitempty"`

	// Updated date
	UpdatedAt string `json:"updated_at,omitempty"`

	// Visibility
	Visibility int64 `json:"visibility,omitempty"`

	// Weight
	Weight float64 `json:"weight,omitempty"`
}

// Validate validates this catalog data product interface
func (m *CatalogDataProductInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExtensionAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMediaGalleryEntries(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProductLinks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSku(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTierPrices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CatalogDataProductInterface) validateCustomAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomAttributes) { // not required
		return nil
	}

	for i := 0; i < len(m.CustomAttributes); i++ {
		if swag.IsZero(m.CustomAttributes[i]) { // not required
			continue
		}

		if m.CustomAttributes[i] != nil {
			if err := m.CustomAttributes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("custom_attributes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CatalogDataProductInterface) validateExtensionAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.ExtensionAttributes) { // not required
		return nil
	}

	if m.ExtensionAttributes != nil {
		if err := m.ExtensionAttributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("extension_attributes")
			}
			return err
		}
	}

	return nil
}

func (m *CatalogDataProductInterface) validateMediaGalleryEntries(formats strfmt.Registry) error {

	if swag.IsZero(m.MediaGalleryEntries) { // not required
		return nil
	}

	for i := 0; i < len(m.MediaGalleryEntries); i++ {
		if swag.IsZero(m.MediaGalleryEntries[i]) { // not required
			continue
		}

		if m.MediaGalleryEntries[i] != nil {
			if err := m.MediaGalleryEntries[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("media_gallery_entries" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CatalogDataProductInterface) validateOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.Options) { // not required
		return nil
	}

	for i := 0; i < len(m.Options); i++ {
		if swag.IsZero(m.Options[i]) { // not required
			continue
		}

		if m.Options[i] != nil {
			if err := m.Options[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("options" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CatalogDataProductInterface) validateProductLinks(formats strfmt.Registry) error {

	if swag.IsZero(m.ProductLinks) { // not required
		return nil
	}

	for i := 0; i < len(m.ProductLinks); i++ {
		if swag.IsZero(m.ProductLinks[i]) { // not required
			continue
		}

		if m.ProductLinks[i] != nil {
			if err := m.ProductLinks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("product_links" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *CatalogDataProductInterface) validateSku(formats strfmt.Registry) error {

	if err := validate.Required("sku", "body", m.Sku); err != nil {
		return err
	}

	return nil
}

func (m *CatalogDataProductInterface) validateTierPrices(formats strfmt.Registry) error {

	if swag.IsZero(m.TierPrices) { // not required
		return nil
	}

	for i := 0; i < len(m.TierPrices); i++ {
		if swag.IsZero(m.TierPrices[i]) { // not required
			continue
		}

		if m.TierPrices[i] != nil {
			if err := m.TierPrices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tier_prices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *CatalogDataProductInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CatalogDataProductInterface) UnmarshalBinary(b []byte) error {
	var res CatalogDataProductInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
