// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BundleDataLinkInterface Interface LinkInterface
// swagger:model bundle-data-link-interface
type BundleDataLinkInterface struct {

	// Whether quantity could be changed
	CanChangeQuantity int64 `json:"can_change_quantity,omitempty"`

	// extension attributes
	ExtensionAttributes BundleDataLinkExtensionInterface `json:"extension_attributes,omitempty"`

	// The identifier
	ID string `json:"id,omitempty"`

	// Is default
	// Required: true
	IsDefault *bool `json:"is_default"`

	// Option id
	OptionID int64 `json:"option_id,omitempty"`

	// Position
	Position int64 `json:"position,omitempty"`

	// Price
	// Required: true
	Price *float64 `json:"price"`

	// Price type
	// Required: true
	PriceType *int64 `json:"price_type"`

	// Qty
	Qty float64 `json:"qty,omitempty"`

	// Linked product sku
	Sku string `json:"sku,omitempty"`
}

// Validate validates this bundle data link interface
func (m *BundleDataLinkInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsDefault(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriceType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BundleDataLinkInterface) validateIsDefault(formats strfmt.Registry) error {

	if err := validate.Required("is_default", "body", m.IsDefault); err != nil {
		return err
	}

	return nil
}

func (m *BundleDataLinkInterface) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("price", "body", m.Price); err != nil {
		return err
	}

	return nil
}

func (m *BundleDataLinkInterface) validatePriceType(formats strfmt.Registry) error {

	if err := validate.Required("price_type", "body", m.PriceType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BundleDataLinkInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BundleDataLinkInterface) UnmarshalBinary(b []byte) error {
	var res BundleDataLinkInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
