// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BundleDataBundleOptionInterface Interface BundleOptionInterface
// swagger:model bundle-data-bundle-option-interface
type BundleDataBundleOptionInterface struct {

	// extension attributes
	ExtensionAttributes BundleDataBundleOptionExtensionInterface `json:"extension_attributes,omitempty"`

	// Bundle option id.
	// Required: true
	OptionID *int64 `json:"option_id"`

	// Bundle option quantity.
	// Required: true
	OptionQty *int64 `json:"option_qty"`

	// Bundle option selection ids.
	// Required: true
	OptionSelections []int64 `json:"option_selections"`
}

// Validate validates this bundle data bundle option interface
func (m *BundleDataBundleOptionInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOptionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptionQty(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOptionSelections(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BundleDataBundleOptionInterface) validateOptionID(formats strfmt.Registry) error {

	if err := validate.Required("option_id", "body", m.OptionID); err != nil {
		return err
	}

	return nil
}

func (m *BundleDataBundleOptionInterface) validateOptionQty(formats strfmt.Registry) error {

	if err := validate.Required("option_qty", "body", m.OptionQty); err != nil {
		return err
	}

	return nil
}

func (m *BundleDataBundleOptionInterface) validateOptionSelections(formats strfmt.Registry) error {

	if err := validate.Required("option_selections", "body", m.OptionSelections); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BundleDataBundleOptionInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BundleDataBundleOptionInterface) UnmarshalBinary(b []byte) error {
	var res BundleDataBundleOptionInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
