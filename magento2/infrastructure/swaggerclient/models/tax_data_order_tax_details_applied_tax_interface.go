// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaxDataOrderTaxDetailsAppliedTaxInterface Interface OrderTaxDetailsAppliedTaxInterface
// swagger:model tax-data-order-tax-details-applied-tax-interface
type TaxDataOrderTaxDetailsAppliedTaxInterface struct {

	// Tax amount
	// Required: true
	Amount *float64 `json:"amount"`

	// Tax amount in base currency
	// Required: true
	BaseAmount *float64 `json:"base_amount"`

	// Code
	Code string `json:"code,omitempty"`

	// extension attributes
	ExtensionAttributes *TaxDataOrderTaxDetailsAppliedTaxExtensionInterface `json:"extension_attributes,omitempty"`

	// Tax Percent
	Percent float64 `json:"percent,omitempty"`

	// Title
	Title string `json:"title,omitempty"`
}

// Validate validates this tax data order tax details applied tax interface
func (m *TaxDataOrderTaxDetailsAppliedTaxInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBaseAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateExtensionAttributes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaxDataOrderTaxDetailsAppliedTaxInterface) validateAmount(formats strfmt.Registry) error {

	if err := validate.Required("amount", "body", m.Amount); err != nil {
		return err
	}

	return nil
}

func (m *TaxDataOrderTaxDetailsAppliedTaxInterface) validateBaseAmount(formats strfmt.Registry) error {

	if err := validate.Required("base_amount", "body", m.BaseAmount); err != nil {
		return err
	}

	return nil
}

func (m *TaxDataOrderTaxDetailsAppliedTaxInterface) validateExtensionAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.ExtensionAttributes) { // not required
		return nil
	}

	if m.ExtensionAttributes != nil {
		if err := m.ExtensionAttributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("extension_attributes")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaxDataOrderTaxDetailsAppliedTaxInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaxDataOrderTaxDetailsAppliedTaxInterface) UnmarshalBinary(b []byte) error {
	var res TaxDataOrderTaxDetailsAppliedTaxInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
