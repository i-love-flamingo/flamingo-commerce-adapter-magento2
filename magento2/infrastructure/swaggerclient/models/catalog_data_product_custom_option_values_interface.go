// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CatalogDataProductCustomOptionValuesInterface catalog data product custom option values interface
// swagger:model catalog-data-product-custom-option-values-interface
type CatalogDataProductCustomOptionValuesInterface struct {

	// Option type id
	OptionTypeID int64 `json:"option_type_id,omitempty"`

	// Price
	// Required: true
	Price *float64 `json:"price"`

	// Price type
	// Required: true
	PriceType *string `json:"price_type"`

	// Sku
	Sku string `json:"sku,omitempty"`

	// Sort order
	// Required: true
	SortOrder *int64 `json:"sort_order"`

	// Option title
	// Required: true
	Title *string `json:"title"`
}

// Validate validates this catalog data product custom option values interface
func (m *CatalogDataProductCustomOptionValuesInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriceType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSortOrder(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitle(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CatalogDataProductCustomOptionValuesInterface) validatePrice(formats strfmt.Registry) error {

	if err := validate.Required("price", "body", m.Price); err != nil {
		return err
	}

	return nil
}

func (m *CatalogDataProductCustomOptionValuesInterface) validatePriceType(formats strfmt.Registry) error {

	if err := validate.Required("price_type", "body", m.PriceType); err != nil {
		return err
	}

	return nil
}

func (m *CatalogDataProductCustomOptionValuesInterface) validateSortOrder(formats strfmt.Registry) error {

	if err := validate.Required("sort_order", "body", m.SortOrder); err != nil {
		return err
	}

	return nil
}

func (m *CatalogDataProductCustomOptionValuesInterface) validateTitle(formats strfmt.Registry) error {

	if err := validate.Required("title", "body", m.Title); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CatalogDataProductCustomOptionValuesInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CatalogDataProductCustomOptionValuesInterface) UnmarshalBinary(b []byte) error {
	var res CatalogDataProductCustomOptionValuesInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
