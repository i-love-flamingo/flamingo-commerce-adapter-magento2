// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SalesDataShipmentCommentInterface Shipment comment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A shipment document can contain comments.
// swagger:model sales-data-shipment-comment-interface
type SalesDataShipmentCommentInterface struct {

	// Comment.
	// Required: true
	Comment *string `json:"comment"`

	// Created-at timestamp.
	CreatedAt string `json:"created_at,omitempty"`

	// Invoice ID.
	EntityID int64 `json:"entity_id,omitempty"`

	// extension attributes
	ExtensionAttributes SalesDataShipmentCommentExtensionInterface `json:"extension_attributes,omitempty"`

	// Is-customer-notified flag value.
	// Required: true
	IsCustomerNotified *int64 `json:"is_customer_notified"`

	// Is-visible-on-storefront flag value.
	// Required: true
	IsVisibleOnFront *int64 `json:"is_visible_on_front"`

	// Parent ID.
	// Required: true
	ParentID *int64 `json:"parent_id"`
}

// Validate validates this sales data shipment comment interface
func (m *SalesDataShipmentCommentInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateComment(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsCustomerNotified(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsVisibleOnFront(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParentID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SalesDataShipmentCommentInterface) validateComment(formats strfmt.Registry) error {

	if err := validate.Required("comment", "body", m.Comment); err != nil {
		return err
	}

	return nil
}

func (m *SalesDataShipmentCommentInterface) validateIsCustomerNotified(formats strfmt.Registry) error {

	if err := validate.Required("is_customer_notified", "body", m.IsCustomerNotified); err != nil {
		return err
	}

	return nil
}

func (m *SalesDataShipmentCommentInterface) validateIsVisibleOnFront(formats strfmt.Registry) error {

	if err := validate.Required("is_visible_on_front", "body", m.IsVisibleOnFront); err != nil {
		return err
	}

	return nil
}

func (m *SalesDataShipmentCommentInterface) validateParentID(formats strfmt.Registry) error {

	if err := validate.Required("parent_id", "body", m.ParentID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SalesDataShipmentCommentInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesDataShipmentCommentInterface) UnmarshalBinary(b []byte) error {
	var res SalesDataShipmentCommentInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
