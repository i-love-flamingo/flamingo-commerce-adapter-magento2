// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GiftWrappingDataWrappingInterface Interface WrappingInterface
// swagger:model gift-wrapping-data-wrapping-interface
type GiftWrappingDataWrappingInterface struct {

	// base currency code
	BaseCurrencyCode string `json:"base_currency_code,omitempty"`

	// base price
	// Required: true
	BasePrice *float64 `json:"base_price"`

	// design
	// Required: true
	Design *string `json:"design"`

	// extension attributes
	ExtensionAttributes GiftWrappingDataWrappingExtensionInterface `json:"extension_attributes,omitempty"`

	// image base64 content
	ImageBase64Content string `json:"image_base64_content,omitempty"`

	// image name
	ImageName string `json:"image_name,omitempty"`

	// Wrapping image URL.
	ImageURL string `json:"image_url,omitempty"`

	// status
	// Required: true
	Status *int64 `json:"status"`

	// website ids
	WebsiteIds []int64 `json:"website_ids"`

	// wrapping id
	WrappingID int64 `json:"wrapping_id,omitempty"`
}

// Validate validates this gift wrapping data wrapping interface
func (m *GiftWrappingDataWrappingInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBasePrice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDesign(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GiftWrappingDataWrappingInterface) validateBasePrice(formats strfmt.Registry) error {

	if err := validate.Required("base_price", "body", m.BasePrice); err != nil {
		return err
	}

	return nil
}

func (m *GiftWrappingDataWrappingInterface) validateDesign(formats strfmt.Registry) error {

	if err := validate.Required("design", "body", m.Design); err != nil {
		return err
	}

	return nil
}

func (m *GiftWrappingDataWrappingInterface) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *GiftWrappingDataWrappingInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GiftWrappingDataWrappingInterface) UnmarshalBinary(b []byte) error {
	var res GiftWrappingDataWrappingInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
