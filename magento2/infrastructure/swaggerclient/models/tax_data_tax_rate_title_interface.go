// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaxDataTaxRateTitleInterface Tax rate title interface.
// swagger:model tax-data-tax-rate-title-interface
type TaxDataTaxRateTitleInterface struct {

	// extension attributes
	ExtensionAttributes TaxDataTaxRateTitleExtensionInterface `json:"extension_attributes,omitempty"`

	// Store id
	// Required: true
	StoreID *string `json:"store_id"`

	// Title value
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this tax data tax rate title interface
func (m *TaxDataTaxRateTitleInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStoreID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaxDataTaxRateTitleInterface) validateStoreID(formats strfmt.Registry) error {

	if err := validate.Required("store_id", "body", m.StoreID); err != nil {
		return err
	}

	return nil
}

func (m *TaxDataTaxRateTitleInterface) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaxDataTaxRateTitleInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaxDataTaxRateTitleInterface) UnmarshalBinary(b []byte) error {
	var res TaxDataTaxRateTitleInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
