// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomerDataRegionInterface Customer address region interface.
// swagger:model customer-data-region-interface
type CustomerDataRegionInterface struct {

	// extension attributes
	ExtensionAttributes CustomerDataRegionExtensionInterface `json:"extension_attributes,omitempty"`

	// Region
	// Required: true
	Region *string `json:"region"`

	// Region code
	// Required: true
	RegionCode *string `json:"region_code"`

	// Region id
	// Required: true
	RegionID *int64 `json:"region_id"`
}

// Validate validates this customer data region interface
func (m *CustomerDataRegionInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRegion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegionCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomerDataRegionInterface) validateRegion(formats strfmt.Registry) error {

	if err := validate.Required("region", "body", m.Region); err != nil {
		return err
	}

	return nil
}

func (m *CustomerDataRegionInterface) validateRegionCode(formats strfmt.Registry) error {

	if err := validate.Required("region_code", "body", m.RegionCode); err != nil {
		return err
	}

	return nil
}

func (m *CustomerDataRegionInterface) validateRegionID(formats strfmt.Registry) error {

	if err := validate.Required("region_id", "body", m.RegionID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerDataRegionInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerDataRegionInterface) UnmarshalBinary(b []byte) error {
	var res CustomerDataRegionInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
