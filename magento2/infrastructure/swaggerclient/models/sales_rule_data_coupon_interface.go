// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SalesRuleDataCouponInterface Interface CouponInterface
// swagger:model sales-rule-data-coupon-interface
type SalesRuleDataCouponInterface struct {

	// Coupon code
	Code string `json:"code,omitempty"`

	// Coupon id
	CouponID int64 `json:"coupon_id,omitempty"`

	// When the coupon is created
	CreatedAt string `json:"created_at,omitempty"`

	// Expiration date
	ExpirationDate string `json:"expiration_date,omitempty"`

	// extension attributes
	ExtensionAttributes SalesRuleDataCouponExtensionInterface `json:"extension_attributes,omitempty"`

	// The coupon is primary coupon for the rule that it's associated with
	// Required: true
	IsPrimary *bool `json:"is_primary"`

	// The id of the rule associated with the coupon
	// Required: true
	RuleID *int64 `json:"rule_id"`

	// The number of times the coupon has been used
	// Required: true
	TimesUsed *int64 `json:"times_used"`

	// Of coupon
	Type int64 `json:"type,omitempty"`

	// Usage limit
	UsageLimit int64 `json:"usage_limit,omitempty"`

	// Usage limit per customer
	UsagePerCustomer int64 `json:"usage_per_customer,omitempty"`
}

// Validate validates this sales rule data coupon interface
func (m *SalesRuleDataCouponInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsPrimary(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuleID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimesUsed(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SalesRuleDataCouponInterface) validateIsPrimary(formats strfmt.Registry) error {

	if err := validate.Required("is_primary", "body", m.IsPrimary); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataCouponInterface) validateRuleID(formats strfmt.Registry) error {

	if err := validate.Required("rule_id", "body", m.RuleID); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataCouponInterface) validateTimesUsed(formats strfmt.Registry) error {

	if err := validate.Required("times_used", "body", m.TimesUsed); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SalesRuleDataCouponInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesRuleDataCouponInterface) UnmarshalBinary(b []byte) error {
	var res SalesRuleDataCouponInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
