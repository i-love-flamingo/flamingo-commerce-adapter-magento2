// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SalesDataOrderItemInterface Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
// swagger:model sales-data-order-item-interface
type SalesDataOrderItemInterface struct {

	// Additional data.
	AdditionalData string `json:"additional_data,omitempty"`

	// Amount refunded.
	AmountRefunded float64 `json:"amount_refunded,omitempty"`

	// Applied rule IDs.
	AppliedRuleIds string `json:"applied_rule_ids,omitempty"`

	// Base amount refunded.
	BaseAmountRefunded float64 `json:"base_amount_refunded,omitempty"`

	// Base cost.
	BaseCost float64 `json:"base_cost,omitempty"`

	// Base discount amount.
	BaseDiscountAmount float64 `json:"base_discount_amount,omitempty"`

	// Base discount invoiced.
	BaseDiscountInvoiced float64 `json:"base_discount_invoiced,omitempty"`

	// Base discount refunded.
	BaseDiscountRefunded float64 `json:"base_discount_refunded,omitempty"`

	// Base discount tax compensation amount.
	BaseDiscountTaxCompensationAmount float64 `json:"base_discount_tax_compensation_amount,omitempty"`

	// Base discount tax compensation invoiced.
	BaseDiscountTaxCompensationInvoiced float64 `json:"base_discount_tax_compensation_invoiced,omitempty"`

	// Base discount tax compensation refunded.
	BaseDiscountTaxCompensationRefunded float64 `json:"base_discount_tax_compensation_refunded,omitempty"`

	// Base original price.
	BaseOriginalPrice float64 `json:"base_original_price,omitempty"`

	// Base price.
	BasePrice float64 `json:"base_price,omitempty"`

	// Base price including tax.
	BasePriceInclTax float64 `json:"base_price_incl_tax,omitempty"`

	// Base row invoiced.
	BaseRowInvoiced float64 `json:"base_row_invoiced,omitempty"`

	// Base row total.
	BaseRowTotal float64 `json:"base_row_total,omitempty"`

	// Base row total including tax.
	BaseRowTotalInclTax float64 `json:"base_row_total_incl_tax,omitempty"`

	// Base tax amount.
	BaseTaxAmount float64 `json:"base_tax_amount,omitempty"`

	// Base tax before discount.
	BaseTaxBeforeDiscount float64 `json:"base_tax_before_discount,omitempty"`

	// Base tax invoiced.
	BaseTaxInvoiced float64 `json:"base_tax_invoiced,omitempty"`

	// Base tax refunded.
	BaseTaxRefunded float64 `json:"base_tax_refunded,omitempty"`

	// Base WEEE tax applied amount.
	BaseWeeeTaxAppliedAmount float64 `json:"base_weee_tax_applied_amount,omitempty"`

	// Base WEEE tax applied row amount.
	BaseWeeeTaxAppliedRowAmnt float64 `json:"base_weee_tax_applied_row_amnt,omitempty"`

	// Base WEEE tax disposition.
	BaseWeeeTaxDisposition float64 `json:"base_weee_tax_disposition,omitempty"`

	// Base WEEE tax row disposition.
	BaseWeeeTaxRowDisposition float64 `json:"base_weee_tax_row_disposition,omitempty"`

	// Created-at timestamp.
	CreatedAt string `json:"created_at,omitempty"`

	// Description.
	Description string `json:"description,omitempty"`

	// Discount amount.
	DiscountAmount float64 `json:"discount_amount,omitempty"`

	// Discount invoiced.
	DiscountInvoiced float64 `json:"discount_invoiced,omitempty"`

	// Discount percent.
	DiscountPercent float64 `json:"discount_percent,omitempty"`

	// Discount refunded.
	DiscountRefunded float64 `json:"discount_refunded,omitempty"`

	// Discount tax compensation amount.
	DiscountTaxCompensationAmount float64 `json:"discount_tax_compensation_amount,omitempty"`

	// Discount tax compensation canceled.
	DiscountTaxCompensationCanceled float64 `json:"discount_tax_compensation_canceled,omitempty"`

	// Discount tax compensation invoiced.
	DiscountTaxCompensationInvoiced float64 `json:"discount_tax_compensation_invoiced,omitempty"`

	// Discount tax compensation refunded.
	DiscountTaxCompensationRefunded float64 `json:"discount_tax_compensation_refunded,omitempty"`

	// Event ID.
	EventID int64 `json:"event_id,omitempty"`

	// External order item ID.
	ExtOrderItemID string `json:"ext_order_item_id,omitempty"`

	// extension attributes
	ExtensionAttributes *SalesDataOrderItemExtensionInterface `json:"extension_attributes,omitempty"`

	// Free-shipping flag value.
	FreeShipping int64 `json:"free_shipping,omitempty"`

	// GW base price.
	GwBasePrice float64 `json:"gw_base_price,omitempty"`

	// GW base price invoiced.
	GwBasePriceInvoiced float64 `json:"gw_base_price_invoiced,omitempty"`

	// GW base price refunded.
	GwBasePriceRefunded float64 `json:"gw_base_price_refunded,omitempty"`

	// GW base tax amount.
	GwBaseTaxAmount float64 `json:"gw_base_tax_amount,omitempty"`

	// GW base tax amount invoiced.
	GwBaseTaxAmountInvoiced float64 `json:"gw_base_tax_amount_invoiced,omitempty"`

	// GW base tax amount refunded.
	GwBaseTaxAmountRefunded float64 `json:"gw_base_tax_amount_refunded,omitempty"`

	// GW ID.
	GwID int64 `json:"gw_id,omitempty"`

	// GW price.
	GwPrice float64 `json:"gw_price,omitempty"`

	// GW price invoiced.
	GwPriceInvoiced float64 `json:"gw_price_invoiced,omitempty"`

	// GW price refunded.
	GwPriceRefunded float64 `json:"gw_price_refunded,omitempty"`

	// GW tax amount.
	GwTaxAmount float64 `json:"gw_tax_amount,omitempty"`

	// GW tax amount invoiced.
	GwTaxAmountInvoiced float64 `json:"gw_tax_amount_invoiced,omitempty"`

	// GW tax amount refunded.
	GwTaxAmountRefunded float64 `json:"gw_tax_amount_refunded,omitempty"`

	// Is-quantity-decimal flag value.
	IsQtyDecimal int64 `json:"is_qty_decimal,omitempty"`

	// Is-virtual flag value.
	IsVirtual int64 `json:"is_virtual,omitempty"`

	// Item ID.
	ItemID int64 `json:"item_id,omitempty"`

	// Locked DO invoice flag value.
	LockedDoInvoice int64 `json:"locked_do_invoice,omitempty"`

	// Locked DO ship flag value.
	LockedDoShip int64 `json:"locked_do_ship,omitempty"`

	// Name.
	Name string `json:"name,omitempty"`

	// No-discount flag value.
	NoDiscount int64 `json:"no_discount,omitempty"`

	// Order ID.
	OrderID int64 `json:"order_id,omitempty"`

	// Original price.
	OriginalPrice float64 `json:"original_price,omitempty"`

	// parent item
	ParentItem *SalesDataOrderItemInterface `json:"parent_item,omitempty"`

	// Parent item ID.
	ParentItemID int64 `json:"parent_item_id,omitempty"`

	// Price.
	Price float64 `json:"price,omitempty"`

	// Price including tax.
	PriceInclTax float64 `json:"price_incl_tax,omitempty"`

	// Product ID.
	ProductID int64 `json:"product_id,omitempty"`

	// product option
	ProductOption *CatalogDataProductOptionInterface `json:"product_option,omitempty"`

	// Product type.
	ProductType string `json:"product_type,omitempty"`

	// Quantity backordered.
	QtyBackordered float64 `json:"qty_backordered,omitempty"`

	// Quantity canceled.
	QtyCanceled float64 `json:"qty_canceled,omitempty"`

	// Quantity invoiced.
	QtyInvoiced float64 `json:"qty_invoiced,omitempty"`

	// Quantity ordered.
	QtyOrdered float64 `json:"qty_ordered,omitempty"`

	// Quantity refunded.
	QtyRefunded float64 `json:"qty_refunded,omitempty"`

	// Quantity returned.
	QtyReturned float64 `json:"qty_returned,omitempty"`

	// Quantity shipped.
	QtyShipped float64 `json:"qty_shipped,omitempty"`

	// Quote item ID.
	QuoteItemID int64 `json:"quote_item_id,omitempty"`

	// Row invoiced.
	RowInvoiced float64 `json:"row_invoiced,omitempty"`

	// Row total.
	RowTotal float64 `json:"row_total,omitempty"`

	// Row total including tax.
	RowTotalInclTax float64 `json:"row_total_incl_tax,omitempty"`

	// Row weight.
	RowWeight float64 `json:"row_weight,omitempty"`

	// SKU.
	// Required: true
	Sku *string `json:"sku"`

	// Store ID.
	StoreID int64 `json:"store_id,omitempty"`

	// Tax amount.
	TaxAmount float64 `json:"tax_amount,omitempty"`

	// Tax before discount.
	TaxBeforeDiscount float64 `json:"tax_before_discount,omitempty"`

	// Tax canceled.
	TaxCanceled float64 `json:"tax_canceled,omitempty"`

	// Tax invoiced.
	TaxInvoiced float64 `json:"tax_invoiced,omitempty"`

	// Tax percent.
	TaxPercent float64 `json:"tax_percent,omitempty"`

	// Tax refunded.
	TaxRefunded float64 `json:"tax_refunded,omitempty"`

	// Updated-at timestamp.
	UpdatedAt string `json:"updated_at,omitempty"`

	// WEEE tax applied.
	WeeeTaxApplied string `json:"weee_tax_applied,omitempty"`

	// WEEE tax applied amount.
	WeeeTaxAppliedAmount float64 `json:"weee_tax_applied_amount,omitempty"`

	// WEEE tax applied row amount.
	WeeeTaxAppliedRowAmount float64 `json:"weee_tax_applied_row_amount,omitempty"`

	// WEEE tax disposition.
	WeeeTaxDisposition float64 `json:"weee_tax_disposition,omitempty"`

	// WEEE tax row disposition.
	WeeeTaxRowDisposition float64 `json:"weee_tax_row_disposition,omitempty"`

	// Weight.
	Weight float64 `json:"weight,omitempty"`
}

// Validate validates this sales data order item interface
func (m *SalesDataOrderItemInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExtensionAttributes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParentItem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProductOption(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSku(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SalesDataOrderItemInterface) validateExtensionAttributes(formats strfmt.Registry) error {

	if swag.IsZero(m.ExtensionAttributes) { // not required
		return nil
	}

	if m.ExtensionAttributes != nil {
		if err := m.ExtensionAttributes.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("extension_attributes")
			}
			return err
		}
	}

	return nil
}

func (m *SalesDataOrderItemInterface) validateParentItem(formats strfmt.Registry) error {

	if swag.IsZero(m.ParentItem) { // not required
		return nil
	}

	if m.ParentItem != nil {
		if err := m.ParentItem.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("parent_item")
			}
			return err
		}
	}

	return nil
}

func (m *SalesDataOrderItemInterface) validateProductOption(formats strfmt.Registry) error {

	if swag.IsZero(m.ProductOption) { // not required
		return nil
	}

	if m.ProductOption != nil {
		if err := m.ProductOption.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("product_option")
			}
			return err
		}
	}

	return nil
}

func (m *SalesDataOrderItemInterface) validateSku(formats strfmt.Registry) error {

	if err := validate.Required("sku", "body", m.Sku); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SalesDataOrderItemInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesDataOrderItemInterface) UnmarshalBinary(b []byte) error {
	var res SalesDataOrderItemInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
