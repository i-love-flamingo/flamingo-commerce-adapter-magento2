// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MsrpDataProductRenderMsrpPriceInfoInterface Price interface.
// swagger:model msrp-data-product-render-msrp-price-info-interface
type MsrpDataProductRenderMsrpPriceInfoInterface struct {

	// explanation message
	// Required: true
	ExplanationMessage *string `json:"explanation_message"`

	// extension attributes
	ExtensionAttributes MsrpDataProductRenderMsrpPriceInfoExtensionInterface `json:"extension_attributes,omitempty"`

	// is applicable
	// Required: true
	IsApplicable *string `json:"is_applicable"`

	// is shown price on gesture
	// Required: true
	IsShownPriceOnGesture *string `json:"is_shown_price_on_gesture"`

	// msrp message
	// Required: true
	MsrpMessage *string `json:"msrp_message"`

	// msrp price
	// Required: true
	MsrpPrice *string `json:"msrp_price"`
}

// Validate validates this msrp data product render msrp price info interface
func (m *MsrpDataProductRenderMsrpPriceInfoInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExplanationMessage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsApplicable(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsShownPriceOnGesture(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMsrpMessage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMsrpPrice(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MsrpDataProductRenderMsrpPriceInfoInterface) validateExplanationMessage(formats strfmt.Registry) error {

	if err := validate.Required("explanation_message", "body", m.ExplanationMessage); err != nil {
		return err
	}

	return nil
}

func (m *MsrpDataProductRenderMsrpPriceInfoInterface) validateIsApplicable(formats strfmt.Registry) error {

	if err := validate.Required("is_applicable", "body", m.IsApplicable); err != nil {
		return err
	}

	return nil
}

func (m *MsrpDataProductRenderMsrpPriceInfoInterface) validateIsShownPriceOnGesture(formats strfmt.Registry) error {

	if err := validate.Required("is_shown_price_on_gesture", "body", m.IsShownPriceOnGesture); err != nil {
		return err
	}

	return nil
}

func (m *MsrpDataProductRenderMsrpPriceInfoInterface) validateMsrpMessage(formats strfmt.Registry) error {

	if err := validate.Required("msrp_message", "body", m.MsrpMessage); err != nil {
		return err
	}

	return nil
}

func (m *MsrpDataProductRenderMsrpPriceInfoInterface) validateMsrpPrice(formats strfmt.Registry) error {

	if err := validate.Required("msrp_price", "body", m.MsrpPrice); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MsrpDataProductRenderMsrpPriceInfoInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MsrpDataProductRenderMsrpPriceInfoInterface) UnmarshalBinary(b []byte) error {
	var res MsrpDataProductRenderMsrpPriceInfoInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
