// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// QuoteDataTotalSegmentExtensionInterface ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalSegmentInterface
// swagger:model quote-data-total-segment-extension-interface
type QuoteDataTotalSegmentExtensionInterface struct {

	// gift cards
	GiftCards string `json:"gift_cards,omitempty"`

	// gw add card
	GwAddCard string `json:"gw_add_card,omitempty"`

	// gw allow gift receipt
	GwAllowGiftReceipt string `json:"gw_allow_gift_receipt,omitempty"`

	// gw base price
	GwBasePrice string `json:"gw_base_price,omitempty"`

	// gw base price incl tax
	GwBasePriceInclTax string `json:"gw_base_price_incl_tax,omitempty"`

	// gw base tax amount
	GwBaseTaxAmount string `json:"gw_base_tax_amount,omitempty"`

	// gw card base price
	GwCardBasePrice string `json:"gw_card_base_price,omitempty"`

	// gw card base price incl tax
	GwCardBasePriceInclTax string `json:"gw_card_base_price_incl_tax,omitempty"`

	// gw card base tax amount
	GwCardBaseTaxAmount string `json:"gw_card_base_tax_amount,omitempty"`

	// gw card price
	GwCardPrice string `json:"gw_card_price,omitempty"`

	// gw card price incl tax
	GwCardPriceInclTax string `json:"gw_card_price_incl_tax,omitempty"`

	// gw card tax amount
	GwCardTaxAmount string `json:"gw_card_tax_amount,omitempty"`

	// gw item ids
	GwItemIds []string `json:"gw_item_ids"`

	// gw items base price
	GwItemsBasePrice string `json:"gw_items_base_price,omitempty"`

	// gw items base price incl tax
	GwItemsBasePriceInclTax string `json:"gw_items_base_price_incl_tax,omitempty"`

	// gw items base tax amount
	GwItemsBaseTaxAmount string `json:"gw_items_base_tax_amount,omitempty"`

	// gw items price
	GwItemsPrice string `json:"gw_items_price,omitempty"`

	// gw items price incl tax
	GwItemsPriceInclTax string `json:"gw_items_price_incl_tax,omitempty"`

	// gw items tax amount
	GwItemsTaxAmount string `json:"gw_items_tax_amount,omitempty"`

	// gw order id
	GwOrderID string `json:"gw_order_id,omitempty"`

	// gw price
	GwPrice string `json:"gw_price,omitempty"`

	// gw price incl tax
	GwPriceInclTax string `json:"gw_price_incl_tax,omitempty"`

	// gw tax amount
	GwTaxAmount string `json:"gw_tax_amount,omitempty"`

	// tax grandtotal details
	TaxGrandtotalDetails []*TaxDataGrandTotalDetailsInterface `json:"tax_grandtotal_details"`
}

// Validate validates this quote data total segment extension interface
func (m *QuoteDataTotalSegmentExtensionInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTaxGrandtotalDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QuoteDataTotalSegmentExtensionInterface) validateTaxGrandtotalDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.TaxGrandtotalDetails) { // not required
		return nil
	}

	for i := 0; i < len(m.TaxGrandtotalDetails); i++ {
		if swag.IsZero(m.TaxGrandtotalDetails[i]) { // not required
			continue
		}

		if m.TaxGrandtotalDetails[i] != nil {
			if err := m.TaxGrandtotalDetails[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("tax_grandtotal_details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *QuoteDataTotalSegmentExtensionInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QuoteDataTotalSegmentExtensionInterface) UnmarshalBinary(b []byte) error {
	var res QuoteDataTotalSegmentExtensionInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
