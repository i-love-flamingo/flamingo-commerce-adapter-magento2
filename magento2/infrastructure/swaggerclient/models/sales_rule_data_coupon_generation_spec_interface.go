// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SalesRuleDataCouponGenerationSpecInterface CouponGenerationSpecInterface
// swagger:model sales-rule-data-coupon-generation-spec-interface
type SalesRuleDataCouponGenerationSpecInterface struct {

	// The delimiter
	Delimiter string `json:"delimiter,omitempty"`

	// The spacing where the delimiter should exist
	DelimiterAtEvery int64 `json:"delimiter_at_every,omitempty"`

	// extension attributes
	ExtensionAttributes SalesRuleDataCouponGenerationSpecExtensionInterface `json:"extension_attributes,omitempty"`

	// Format of generated coupon code
	// Required: true
	Format *string `json:"format"`

	// Length of coupon code
	// Required: true
	Length *int64 `json:"length"`

	// The prefix
	Prefix string `json:"prefix,omitempty"`

	// Of coupons to generate
	// Required: true
	Quantity *int64 `json:"quantity"`

	// The id of the rule associated with the coupon
	// Required: true
	RuleID *int64 `json:"rule_id"`

	// The suffix
	Suffix string `json:"suffix,omitempty"`
}

// Validate validates this sales rule data coupon generation spec interface
func (m *SalesRuleDataCouponGenerationSpecInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLength(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRuleID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SalesRuleDataCouponGenerationSpecInterface) validateFormat(formats strfmt.Registry) error {

	if err := validate.Required("format", "body", m.Format); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataCouponGenerationSpecInterface) validateLength(formats strfmt.Registry) error {

	if err := validate.Required("length", "body", m.Length); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataCouponGenerationSpecInterface) validateQuantity(formats strfmt.Registry) error {

	if err := validate.Required("quantity", "body", m.Quantity); err != nil {
		return err
	}

	return nil
}

func (m *SalesRuleDataCouponGenerationSpecInterface) validateRuleID(formats strfmt.Registry) error {

	if err := validate.Required("rule_id", "body", m.RuleID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SalesRuleDataCouponGenerationSpecInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SalesRuleDataCouponGenerationSpecInterface) UnmarshalBinary(b []byte) error {
	var res SalesRuleDataCouponGenerationSpecInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
