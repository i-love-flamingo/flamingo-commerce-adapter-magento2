// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CompanyCreditDataCreditBalanceOptionsInterface Credit balance data transfer object interface.
// swagger:model company-credit-data-credit-balance-options-interface
type CompanyCreditDataCreditBalanceOptionsInterface struct {

	// Currency base.
	// Required: true
	CurrencyBase *string `json:"currency_base"`

	// Currency display.
	// Required: true
	CurrencyDisplay *string `json:"currency_display"`

	// Order increment.
	// Required: true
	OrderIncrement *string `json:"order_increment"`

	// Purchase order number.
	// Required: true
	PurchaseOrder *string `json:"purchase_order"`
}

// Validate validates this company credit data credit balance options interface
func (m *CompanyCreditDataCreditBalanceOptionsInterface) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrencyBase(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCurrencyDisplay(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrderIncrement(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePurchaseOrder(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CompanyCreditDataCreditBalanceOptionsInterface) validateCurrencyBase(formats strfmt.Registry) error {

	if err := validate.Required("currency_base", "body", m.CurrencyBase); err != nil {
		return err
	}

	return nil
}

func (m *CompanyCreditDataCreditBalanceOptionsInterface) validateCurrencyDisplay(formats strfmt.Registry) error {

	if err := validate.Required("currency_display", "body", m.CurrencyDisplay); err != nil {
		return err
	}

	return nil
}

func (m *CompanyCreditDataCreditBalanceOptionsInterface) validateOrderIncrement(formats strfmt.Registry) error {

	if err := validate.Required("order_increment", "body", m.OrderIncrement); err != nil {
		return err
	}

	return nil
}

func (m *CompanyCreditDataCreditBalanceOptionsInterface) validatePurchaseOrder(formats strfmt.Registry) error {

	if err := validate.Required("purchase_order", "body", m.PurchaseOrder); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CompanyCreditDataCreditBalanceOptionsInterface) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CompanyCreditDataCreditBalanceOptionsInterface) UnmarshalBinary(b []byte) error {
	var res CompanyCreditDataCreditBalanceOptionsInterface
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
