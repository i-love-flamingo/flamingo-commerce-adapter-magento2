// Code generated by go-swagger; DO NOT EDIT.

package reward_reward_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// RewardRewardManagementV1SetPostReader is a Reader for the RewardRewardManagementV1SetPost structure.
type RewardRewardManagementV1SetPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RewardRewardManagementV1SetPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRewardRewardManagementV1SetPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewRewardRewardManagementV1SetPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewRewardRewardManagementV1SetPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRewardRewardManagementV1SetPostOK creates a RewardRewardManagementV1SetPostOK with default headers values
func NewRewardRewardManagementV1SetPostOK() *RewardRewardManagementV1SetPostOK {
	return &RewardRewardManagementV1SetPostOK{}
}

/*RewardRewardManagementV1SetPostOK handles this case with default header values.

200 Success.
*/
type RewardRewardManagementV1SetPostOK struct {
	Payload bool
}

func (o *RewardRewardManagementV1SetPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/reward/mine/use-reward][%d] rewardRewardManagementV1SetPostOK  %+v", 200, o.Payload)
}

func (o *RewardRewardManagementV1SetPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRewardRewardManagementV1SetPostUnauthorized creates a RewardRewardManagementV1SetPostUnauthorized with default headers values
func NewRewardRewardManagementV1SetPostUnauthorized() *RewardRewardManagementV1SetPostUnauthorized {
	return &RewardRewardManagementV1SetPostUnauthorized{}
}

/*RewardRewardManagementV1SetPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type RewardRewardManagementV1SetPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *RewardRewardManagementV1SetPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/reward/mine/use-reward][%d] rewardRewardManagementV1SetPostUnauthorized  %+v", 401, o.Payload)
}

func (o *RewardRewardManagementV1SetPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRewardRewardManagementV1SetPostDefault creates a RewardRewardManagementV1SetPostDefault with default headers values
func NewRewardRewardManagementV1SetPostDefault(code int) *RewardRewardManagementV1SetPostDefault {
	return &RewardRewardManagementV1SetPostDefault{
		_statusCode: code,
	}
}

/*RewardRewardManagementV1SetPostDefault handles this case with default header values.

Unexpected error
*/
type RewardRewardManagementV1SetPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the reward reward management v1 set post default response
func (o *RewardRewardManagementV1SetPostDefault) Code() int {
	return o._statusCode
}

func (o *RewardRewardManagementV1SetPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/reward/mine/use-reward][%d] rewardRewardManagementV1SetPost default  %+v", o._statusCode, o.Payload)
}

func (o *RewardRewardManagementV1SetPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
