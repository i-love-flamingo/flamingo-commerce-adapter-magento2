// Code generated by go-swagger; DO NOT EDIT.

package company_team_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCompanyTeamRepositoryV1CreatePostParams creates a new CompanyTeamRepositoryV1CreatePostParams object
// with the default values initialized.
func NewCompanyTeamRepositoryV1CreatePostParams() *CompanyTeamRepositoryV1CreatePostParams {
	var ()
	return &CompanyTeamRepositoryV1CreatePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCompanyTeamRepositoryV1CreatePostParamsWithTimeout creates a new CompanyTeamRepositoryV1CreatePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCompanyTeamRepositoryV1CreatePostParamsWithTimeout(timeout time.Duration) *CompanyTeamRepositoryV1CreatePostParams {
	var ()
	return &CompanyTeamRepositoryV1CreatePostParams{

		timeout: timeout,
	}
}

// NewCompanyTeamRepositoryV1CreatePostParamsWithContext creates a new CompanyTeamRepositoryV1CreatePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewCompanyTeamRepositoryV1CreatePostParamsWithContext(ctx context.Context) *CompanyTeamRepositoryV1CreatePostParams {
	var ()
	return &CompanyTeamRepositoryV1CreatePostParams{

		Context: ctx,
	}
}

// NewCompanyTeamRepositoryV1CreatePostParamsWithHTTPClient creates a new CompanyTeamRepositoryV1CreatePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCompanyTeamRepositoryV1CreatePostParamsWithHTTPClient(client *http.Client) *CompanyTeamRepositoryV1CreatePostParams {
	var ()
	return &CompanyTeamRepositoryV1CreatePostParams{
		HTTPClient: client,
	}
}

/*CompanyTeamRepositoryV1CreatePostParams contains all the parameters to send to the API endpoint
for the company team repository v1 create post operation typically these are written to a http.Request
*/
type CompanyTeamRepositoryV1CreatePostParams struct {

	/*CompanyID*/
	CompanyID int64
	/*CompanyTeamRepositoryV1CreatePostBody*/
	CompanyTeamRepositoryV1CreatePostBody CompanyTeamRepositoryV1CreatePostBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) WithTimeout(timeout time.Duration) *CompanyTeamRepositoryV1CreatePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) WithContext(ctx context.Context) *CompanyTeamRepositoryV1CreatePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) WithHTTPClient(client *http.Client) *CompanyTeamRepositoryV1CreatePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompanyID adds the companyID to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) WithCompanyID(companyID int64) *CompanyTeamRepositoryV1CreatePostParams {
	o.SetCompanyID(companyID)
	return o
}

// SetCompanyID adds the companyId to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) SetCompanyID(companyID int64) {
	o.CompanyID = companyID
}

// WithCompanyTeamRepositoryV1CreatePostBody adds the companyTeamRepositoryV1CreatePostBody to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) WithCompanyTeamRepositoryV1CreatePostBody(companyTeamRepositoryV1CreatePostBody CompanyTeamRepositoryV1CreatePostBody) *CompanyTeamRepositoryV1CreatePostParams {
	o.SetCompanyTeamRepositoryV1CreatePostBody(companyTeamRepositoryV1CreatePostBody)
	return o
}

// SetCompanyTeamRepositoryV1CreatePostBody adds the companyTeamRepositoryV1CreatePostBody to the company team repository v1 create post params
func (o *CompanyTeamRepositoryV1CreatePostParams) SetCompanyTeamRepositoryV1CreatePostBody(companyTeamRepositoryV1CreatePostBody CompanyTeamRepositoryV1CreatePostBody) {
	o.CompanyTeamRepositoryV1CreatePostBody = companyTeamRepositoryV1CreatePostBody
}

// WriteToRequest writes these params to a swagger request
func (o *CompanyTeamRepositoryV1CreatePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param companyId
	if err := r.SetPathParam("companyId", swag.FormatInt64(o.CompanyID)); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.CompanyTeamRepositoryV1CreatePostBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
