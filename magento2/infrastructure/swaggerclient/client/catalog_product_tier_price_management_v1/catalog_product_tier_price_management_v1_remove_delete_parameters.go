// Code generated by go-swagger; DO NOT EDIT.

package catalog_product_tier_price_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCatalogProductTierPriceManagementV1RemoveDeleteParams creates a new CatalogProductTierPriceManagementV1RemoveDeleteParams object
// with the default values initialized.
func NewCatalogProductTierPriceManagementV1RemoveDeleteParams() *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	var ()
	return &CatalogProductTierPriceManagementV1RemoveDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCatalogProductTierPriceManagementV1RemoveDeleteParamsWithTimeout creates a new CatalogProductTierPriceManagementV1RemoveDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCatalogProductTierPriceManagementV1RemoveDeleteParamsWithTimeout(timeout time.Duration) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	var ()
	return &CatalogProductTierPriceManagementV1RemoveDeleteParams{

		timeout: timeout,
	}
}

// NewCatalogProductTierPriceManagementV1RemoveDeleteParamsWithContext creates a new CatalogProductTierPriceManagementV1RemoveDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewCatalogProductTierPriceManagementV1RemoveDeleteParamsWithContext(ctx context.Context) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	var ()
	return &CatalogProductTierPriceManagementV1RemoveDeleteParams{

		Context: ctx,
	}
}

// NewCatalogProductTierPriceManagementV1RemoveDeleteParamsWithHTTPClient creates a new CatalogProductTierPriceManagementV1RemoveDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCatalogProductTierPriceManagementV1RemoveDeleteParamsWithHTTPClient(client *http.Client) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	var ()
	return &CatalogProductTierPriceManagementV1RemoveDeleteParams{
		HTTPClient: client,
	}
}

/*CatalogProductTierPriceManagementV1RemoveDeleteParams contains all the parameters to send to the API endpoint
for the catalog product tier price management v1 remove delete operation typically these are written to a http.Request
*/
type CatalogProductTierPriceManagementV1RemoveDeleteParams struct {

	/*CustomerGroupID
	  'all' can be used to specify 'ALL GROUPS'

	*/
	CustomerGroupID string
	/*Qty*/
	Qty float64
	/*Sku*/
	Sku string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WithTimeout(timeout time.Duration) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WithContext(ctx context.Context) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WithHTTPClient(client *http.Client) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerGroupID adds the customerGroupID to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WithCustomerGroupID(customerGroupID string) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	o.SetCustomerGroupID(customerGroupID)
	return o
}

// SetCustomerGroupID adds the customerGroupId to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) SetCustomerGroupID(customerGroupID string) {
	o.CustomerGroupID = customerGroupID
}

// WithQty adds the qty to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WithQty(qty float64) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	o.SetQty(qty)
	return o
}

// SetQty adds the qty to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) SetQty(qty float64) {
	o.Qty = qty
}

// WithSku adds the sku to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WithSku(sku string) *CatalogProductTierPriceManagementV1RemoveDeleteParams {
	o.SetSku(sku)
	return o
}

// SetSku adds the sku to the catalog product tier price management v1 remove delete params
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) SetSku(sku string) {
	o.Sku = sku
}

// WriteToRequest writes these params to a swagger request
func (o *CatalogProductTierPriceManagementV1RemoveDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param customerGroupId
	if err := r.SetPathParam("customerGroupId", o.CustomerGroupID); err != nil {
		return err
	}

	// path param qty
	if err := r.SetPathParam("qty", swag.FormatFloat64(o.Qty)); err != nil {
		return err
	}

	// path param sku
	if err := r.SetPathParam("sku", o.Sku); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
