// Code generated by go-swagger; DO NOT EDIT.

package quote_cart_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// QuoteCartManagementV1AssignCustomerPutReader is a Reader for the QuoteCartManagementV1AssignCustomerPut structure.
type QuoteCartManagementV1AssignCustomerPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuoteCartManagementV1AssignCustomerPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewQuoteCartManagementV1AssignCustomerPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewQuoteCartManagementV1AssignCustomerPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewQuoteCartManagementV1AssignCustomerPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQuoteCartManagementV1AssignCustomerPutOK creates a QuoteCartManagementV1AssignCustomerPutOK with default headers values
func NewQuoteCartManagementV1AssignCustomerPutOK() *QuoteCartManagementV1AssignCustomerPutOK {
	return &QuoteCartManagementV1AssignCustomerPutOK{}
}

/*QuoteCartManagementV1AssignCustomerPutOK handles this case with default header values.

200 Success.
*/
type QuoteCartManagementV1AssignCustomerPutOK struct {
	Payload bool
}

func (o *QuoteCartManagementV1AssignCustomerPutOK) Error() string {
	return fmt.Sprintf("[PUT /V1/carts/{cartId}][%d] quoteCartManagementV1AssignCustomerPutOK  %+v", 200, o.Payload)
}

func (o *QuoteCartManagementV1AssignCustomerPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteCartManagementV1AssignCustomerPutUnauthorized creates a QuoteCartManagementV1AssignCustomerPutUnauthorized with default headers values
func NewQuoteCartManagementV1AssignCustomerPutUnauthorized() *QuoteCartManagementV1AssignCustomerPutUnauthorized {
	return &QuoteCartManagementV1AssignCustomerPutUnauthorized{}
}

/*QuoteCartManagementV1AssignCustomerPutUnauthorized handles this case with default header values.

401 Unauthorized
*/
type QuoteCartManagementV1AssignCustomerPutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *QuoteCartManagementV1AssignCustomerPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /V1/carts/{cartId}][%d] quoteCartManagementV1AssignCustomerPutUnauthorized  %+v", 401, o.Payload)
}

func (o *QuoteCartManagementV1AssignCustomerPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteCartManagementV1AssignCustomerPutDefault creates a QuoteCartManagementV1AssignCustomerPutDefault with default headers values
func NewQuoteCartManagementV1AssignCustomerPutDefault(code int) *QuoteCartManagementV1AssignCustomerPutDefault {
	return &QuoteCartManagementV1AssignCustomerPutDefault{
		_statusCode: code,
	}
}

/*QuoteCartManagementV1AssignCustomerPutDefault handles this case with default header values.

Unexpected error
*/
type QuoteCartManagementV1AssignCustomerPutDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the quote cart management v1 assign customer put default response
func (o *QuoteCartManagementV1AssignCustomerPutDefault) Code() int {
	return o._statusCode
}

func (o *QuoteCartManagementV1AssignCustomerPutDefault) Error() string {
	return fmt.Sprintf("[PUT /V1/carts/{cartId}][%d] quoteCartManagementV1AssignCustomerPut default  %+v", o._statusCode, o.Payload)
}

func (o *QuoteCartManagementV1AssignCustomerPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*QuoteCartManagementV1AssignCustomerPutBody quote cart management v1 assign customer put body
swagger:model QuoteCartManagementV1AssignCustomerPutBody
*/
type QuoteCartManagementV1AssignCustomerPutBody struct {

	// The customer ID.
	// Required: true
	CustomerID *int64 `json:"customerId"`

	// store Id
	// Required: true
	StoreID *int64 `json:"storeId"`
}

// Validate validates this quote cart management v1 assign customer put body
func (o *QuoteCartManagementV1AssignCustomerPutBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomerID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStoreID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *QuoteCartManagementV1AssignCustomerPutBody) validateCustomerID(formats strfmt.Registry) error {

	if err := validate.Required("quoteCartManagementV1AssignCustomerPutBody"+"."+"customerId", "body", o.CustomerID); err != nil {
		return err
	}

	return nil
}

func (o *QuoteCartManagementV1AssignCustomerPutBody) validateStoreID(formats strfmt.Registry) error {

	if err := validate.Required("quoteCartManagementV1AssignCustomerPutBody"+"."+"storeId", "body", o.StoreID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *QuoteCartManagementV1AssignCustomerPutBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *QuoteCartManagementV1AssignCustomerPutBody) UnmarshalBinary(b []byte) error {
	var res QuoteCartManagementV1AssignCustomerPutBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
