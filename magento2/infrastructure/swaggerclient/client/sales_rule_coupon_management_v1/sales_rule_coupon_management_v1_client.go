// Code generated by go-swagger; DO NOT EDIT.

package sales_rule_coupon_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new sales rule coupon management v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for sales rule coupon management v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
SalesRuleCouponManagementV1DeleteByCodesPost Delete coupon by coupon codes.
*/
func (a *Client) SalesRuleCouponManagementV1DeleteByCodesPost(params *SalesRuleCouponManagementV1DeleteByCodesPostParams) (*SalesRuleCouponManagementV1DeleteByCodesPostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponManagementV1DeleteByCodesPostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponManagementV1DeleteByCodesPost",
		Method:             "POST",
		PathPattern:        "/V1/coupons/deleteByCodes",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponManagementV1DeleteByCodesPostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponManagementV1DeleteByCodesPostOK), nil

}

/*
SalesRuleCouponManagementV1DeleteByIdsPost Delete coupon by coupon ids.
*/
func (a *Client) SalesRuleCouponManagementV1DeleteByIdsPost(params *SalesRuleCouponManagementV1DeleteByIdsPostParams) (*SalesRuleCouponManagementV1DeleteByIdsPostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponManagementV1DeleteByIdsPostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponManagementV1DeleteByIdsPost",
		Method:             "POST",
		PathPattern:        "/V1/coupons/deleteByIds",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponManagementV1DeleteByIdsPostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponManagementV1DeleteByIdsPostOK), nil

}

/*
SalesRuleCouponManagementV1GeneratePost Generate coupon for a rule
*/
func (a *Client) SalesRuleCouponManagementV1GeneratePost(params *SalesRuleCouponManagementV1GeneratePostParams) (*SalesRuleCouponManagementV1GeneratePostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponManagementV1GeneratePostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponManagementV1GeneratePost",
		Method:             "POST",
		PathPattern:        "/V1/coupons/generate",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponManagementV1GeneratePostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponManagementV1GeneratePostOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
