// Code generated by go-swagger; DO NOT EDIT.

package sales_refund_invoice_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSalesRefundInvoiceV1ExecutePostParams creates a new SalesRefundInvoiceV1ExecutePostParams object
// with the default values initialized.
func NewSalesRefundInvoiceV1ExecutePostParams() *SalesRefundInvoiceV1ExecutePostParams {
	var ()
	return &SalesRefundInvoiceV1ExecutePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSalesRefundInvoiceV1ExecutePostParamsWithTimeout creates a new SalesRefundInvoiceV1ExecutePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSalesRefundInvoiceV1ExecutePostParamsWithTimeout(timeout time.Duration) *SalesRefundInvoiceV1ExecutePostParams {
	var ()
	return &SalesRefundInvoiceV1ExecutePostParams{

		timeout: timeout,
	}
}

// NewSalesRefundInvoiceV1ExecutePostParamsWithContext creates a new SalesRefundInvoiceV1ExecutePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewSalesRefundInvoiceV1ExecutePostParamsWithContext(ctx context.Context) *SalesRefundInvoiceV1ExecutePostParams {
	var ()
	return &SalesRefundInvoiceV1ExecutePostParams{

		Context: ctx,
	}
}

// NewSalesRefundInvoiceV1ExecutePostParamsWithHTTPClient creates a new SalesRefundInvoiceV1ExecutePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSalesRefundInvoiceV1ExecutePostParamsWithHTTPClient(client *http.Client) *SalesRefundInvoiceV1ExecutePostParams {
	var ()
	return &SalesRefundInvoiceV1ExecutePostParams{
		HTTPClient: client,
	}
}

/*SalesRefundInvoiceV1ExecutePostParams contains all the parameters to send to the API endpoint
for the sales refund invoice v1 execute post operation typically these are written to a http.Request
*/
type SalesRefundInvoiceV1ExecutePostParams struct {

	/*InvoiceID*/
	InvoiceID int64
	/*SalesRefundInvoiceV1ExecutePostBody*/
	SalesRefundInvoiceV1ExecutePostBody SalesRefundInvoiceV1ExecutePostBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) WithTimeout(timeout time.Duration) *SalesRefundInvoiceV1ExecutePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) WithContext(ctx context.Context) *SalesRefundInvoiceV1ExecutePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) WithHTTPClient(client *http.Client) *SalesRefundInvoiceV1ExecutePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInvoiceID adds the invoiceID to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) WithInvoiceID(invoiceID int64) *SalesRefundInvoiceV1ExecutePostParams {
	o.SetInvoiceID(invoiceID)
	return o
}

// SetInvoiceID adds the invoiceId to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) SetInvoiceID(invoiceID int64) {
	o.InvoiceID = invoiceID
}

// WithSalesRefundInvoiceV1ExecutePostBody adds the salesRefundInvoiceV1ExecutePostBody to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) WithSalesRefundInvoiceV1ExecutePostBody(salesRefundInvoiceV1ExecutePostBody SalesRefundInvoiceV1ExecutePostBody) *SalesRefundInvoiceV1ExecutePostParams {
	o.SetSalesRefundInvoiceV1ExecutePostBody(salesRefundInvoiceV1ExecutePostBody)
	return o
}

// SetSalesRefundInvoiceV1ExecutePostBody adds the salesRefundInvoiceV1ExecutePostBody to the sales refund invoice v1 execute post params
func (o *SalesRefundInvoiceV1ExecutePostParams) SetSalesRefundInvoiceV1ExecutePostBody(salesRefundInvoiceV1ExecutePostBody SalesRefundInvoiceV1ExecutePostBody) {
	o.SalesRefundInvoiceV1ExecutePostBody = salesRefundInvoiceV1ExecutePostBody
}

// WriteToRequest writes these params to a swagger request
func (o *SalesRefundInvoiceV1ExecutePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param invoiceId
	if err := r.SetPathParam("invoiceId", swag.FormatInt64(o.InvoiceID)); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.SalesRefundInvoiceV1ExecutePostBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
