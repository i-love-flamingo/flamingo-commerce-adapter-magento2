// Code generated by go-swagger; DO NOT EDIT.

package bundle_product_option_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewBundleProductOptionManagementV1SavePutParams creates a new BundleProductOptionManagementV1SavePutParams object
// with the default values initialized.
func NewBundleProductOptionManagementV1SavePutParams() *BundleProductOptionManagementV1SavePutParams {
	var ()
	return &BundleProductOptionManagementV1SavePutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewBundleProductOptionManagementV1SavePutParamsWithTimeout creates a new BundleProductOptionManagementV1SavePutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewBundleProductOptionManagementV1SavePutParamsWithTimeout(timeout time.Duration) *BundleProductOptionManagementV1SavePutParams {
	var ()
	return &BundleProductOptionManagementV1SavePutParams{

		timeout: timeout,
	}
}

// NewBundleProductOptionManagementV1SavePutParamsWithContext creates a new BundleProductOptionManagementV1SavePutParams object
// with the default values initialized, and the ability to set a context for a request
func NewBundleProductOptionManagementV1SavePutParamsWithContext(ctx context.Context) *BundleProductOptionManagementV1SavePutParams {
	var ()
	return &BundleProductOptionManagementV1SavePutParams{

		Context: ctx,
	}
}

// NewBundleProductOptionManagementV1SavePutParamsWithHTTPClient creates a new BundleProductOptionManagementV1SavePutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewBundleProductOptionManagementV1SavePutParamsWithHTTPClient(client *http.Client) *BundleProductOptionManagementV1SavePutParams {
	var ()
	return &BundleProductOptionManagementV1SavePutParams{
		HTTPClient: client,
	}
}

/*BundleProductOptionManagementV1SavePutParams contains all the parameters to send to the API endpoint
for the bundle product option management v1 save put operation typically these are written to a http.Request
*/
type BundleProductOptionManagementV1SavePutParams struct {

	/*BundleProductOptionManagementV1SavePutBody*/
	BundleProductOptionManagementV1SavePutBody BundleProductOptionManagementV1SavePutBody
	/*OptionID*/
	OptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) WithTimeout(timeout time.Duration) *BundleProductOptionManagementV1SavePutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) WithContext(ctx context.Context) *BundleProductOptionManagementV1SavePutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) WithHTTPClient(client *http.Client) *BundleProductOptionManagementV1SavePutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBundleProductOptionManagementV1SavePutBody adds the bundleProductOptionManagementV1SavePutBody to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) WithBundleProductOptionManagementV1SavePutBody(bundleProductOptionManagementV1SavePutBody BundleProductOptionManagementV1SavePutBody) *BundleProductOptionManagementV1SavePutParams {
	o.SetBundleProductOptionManagementV1SavePutBody(bundleProductOptionManagementV1SavePutBody)
	return o
}

// SetBundleProductOptionManagementV1SavePutBody adds the bundleProductOptionManagementV1SavePutBody to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) SetBundleProductOptionManagementV1SavePutBody(bundleProductOptionManagementV1SavePutBody BundleProductOptionManagementV1SavePutBody) {
	o.BundleProductOptionManagementV1SavePutBody = bundleProductOptionManagementV1SavePutBody
}

// WithOptionID adds the optionID to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) WithOptionID(optionID string) *BundleProductOptionManagementV1SavePutParams {
	o.SetOptionID(optionID)
	return o
}

// SetOptionID adds the optionId to the bundle product option management v1 save put params
func (o *BundleProductOptionManagementV1SavePutParams) SetOptionID(optionID string) {
	o.OptionID = optionID
}

// WriteToRequest writes these params to a swagger request
func (o *BundleProductOptionManagementV1SavePutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.BundleProductOptionManagementV1SavePutBody); err != nil {
		return err
	}

	// path param optionId
	if err := r.SetPathParam("optionId", o.OptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
