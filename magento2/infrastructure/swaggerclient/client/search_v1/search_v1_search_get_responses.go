// Code generated by go-swagger; DO NOT EDIT.

package search_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SearchV1SearchGetReader is a Reader for the SearchV1SearchGet structure.
type SearchV1SearchGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchV1SearchGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchV1SearchGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewSearchV1SearchGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchV1SearchGetOK creates a SearchV1SearchGetOK with default headers values
func NewSearchV1SearchGetOK() *SearchV1SearchGetOK {
	return &SearchV1SearchGetOK{}
}

/*SearchV1SearchGetOK handles this case with default header values.

200 Success.
*/
type SearchV1SearchGetOK struct {
	Payload *models.FrameworkSearchSearchResultInterface
}

func (o *SearchV1SearchGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/search][%d] searchV1SearchGetOK  %+v", 200, o.Payload)
}

func (o *SearchV1SearchGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FrameworkSearchSearchResultInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchV1SearchGetDefault creates a SearchV1SearchGetDefault with default headers values
func NewSearchV1SearchGetDefault(code int) *SearchV1SearchGetDefault {
	return &SearchV1SearchGetDefault{
		_statusCode: code,
	}
}

/*SearchV1SearchGetDefault handles this case with default header values.

Unexpected error
*/
type SearchV1SearchGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the search v1 search get default response
func (o *SearchV1SearchGetDefault) Code() int {
	return o._statusCode
}

func (o *SearchV1SearchGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/search][%d] searchV1SearchGet default  %+v", o._statusCode, o.Payload)
}

func (o *SearchV1SearchGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
