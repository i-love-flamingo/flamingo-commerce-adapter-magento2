// Code generated by go-swagger; DO NOT EDIT.

package customer_account_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CustomerAccountManagementV1ChangePasswordByIDPutReader is a Reader for the CustomerAccountManagementV1ChangePasswordByIDPut structure.
type CustomerAccountManagementV1ChangePasswordByIDPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerAccountManagementV1ChangePasswordByIDPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCustomerAccountManagementV1ChangePasswordByIDPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCustomerAccountManagementV1ChangePasswordByIDPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCustomerAccountManagementV1ChangePasswordByIDPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCustomerAccountManagementV1ChangePasswordByIDPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerAccountManagementV1ChangePasswordByIDPutOK creates a CustomerAccountManagementV1ChangePasswordByIDPutOK with default headers values
func NewCustomerAccountManagementV1ChangePasswordByIDPutOK() *CustomerAccountManagementV1ChangePasswordByIDPutOK {
	return &CustomerAccountManagementV1ChangePasswordByIDPutOK{}
}

/*CustomerAccountManagementV1ChangePasswordByIDPutOK handles this case with default header values.

200 Success.
*/
type CustomerAccountManagementV1ChangePasswordByIDPutOK struct {
	Payload bool
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutOK) Error() string {
	return fmt.Sprintf("[PUT /V1/customers/me/password][%d] customerAccountManagementV1ChangePasswordByIdPutOK  %+v", 200, o.Payload)
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAccountManagementV1ChangePasswordByIDPutUnauthorized creates a CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized with default headers values
func NewCustomerAccountManagementV1ChangePasswordByIDPutUnauthorized() *CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized {
	return &CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized{}
}

/*CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /V1/customers/me/password][%d] customerAccountManagementV1ChangePasswordByIdPutUnauthorized  %+v", 401, o.Payload)
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAccountManagementV1ChangePasswordByIDPutInternalServerError creates a CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError with default headers values
func NewCustomerAccountManagementV1ChangePasswordByIDPutInternalServerError() *CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError {
	return &CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError{}
}

/*CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError handles this case with default header values.

Internal Server error
*/
type CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /V1/customers/me/password][%d] customerAccountManagementV1ChangePasswordByIdPutInternalServerError  %+v", 500, o.Payload)
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAccountManagementV1ChangePasswordByIDPutDefault creates a CustomerAccountManagementV1ChangePasswordByIDPutDefault with default headers values
func NewCustomerAccountManagementV1ChangePasswordByIDPutDefault(code int) *CustomerAccountManagementV1ChangePasswordByIDPutDefault {
	return &CustomerAccountManagementV1ChangePasswordByIDPutDefault{
		_statusCode: code,
	}
}

/*CustomerAccountManagementV1ChangePasswordByIDPutDefault handles this case with default header values.

Unexpected error
*/
type CustomerAccountManagementV1ChangePasswordByIDPutDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the customer account management v1 change password by Id put default response
func (o *CustomerAccountManagementV1ChangePasswordByIDPutDefault) Code() int {
	return o._statusCode
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutDefault) Error() string {
	return fmt.Sprintf("[PUT /V1/customers/me/password][%d] customerAccountManagementV1ChangePasswordByIdPut default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CustomerAccountManagementV1ChangePasswordByIDPutBody customer account management v1 change password by ID put body
swagger:model CustomerAccountManagementV1ChangePasswordByIDPutBody
*/
type CustomerAccountManagementV1ChangePasswordByIDPutBody struct {

	// current password
	// Required: true
	CurrentPassword *string `json:"currentPassword"`

	// new password
	// Required: true
	NewPassword *string `json:"newPassword"`
}

// Validate validates this customer account management v1 change password by ID put body
func (o *CustomerAccountManagementV1ChangePasswordByIDPutBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCurrentPassword(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNewPassword(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutBody) validateCurrentPassword(formats strfmt.Registry) error {

	if err := validate.Required("customerAccountManagementV1ChangePasswordByIdPutBody"+"."+"currentPassword", "body", o.CurrentPassword); err != nil {
		return err
	}

	return nil
}

func (o *CustomerAccountManagementV1ChangePasswordByIDPutBody) validateNewPassword(formats strfmt.Registry) error {

	if err := validate.Required("customerAccountManagementV1ChangePasswordByIdPutBody"+"."+"newPassword", "body", o.NewPassword); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CustomerAccountManagementV1ChangePasswordByIDPutBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CustomerAccountManagementV1ChangePasswordByIDPutBody) UnmarshalBinary(b []byte) error {
	var res CustomerAccountManagementV1ChangePasswordByIDPutBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
