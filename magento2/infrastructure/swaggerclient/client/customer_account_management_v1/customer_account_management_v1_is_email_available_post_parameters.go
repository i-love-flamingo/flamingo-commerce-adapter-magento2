// Code generated by go-swagger; DO NOT EDIT.

package customer_account_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCustomerAccountManagementV1IsEmailAvailablePostParams creates a new CustomerAccountManagementV1IsEmailAvailablePostParams object
// with the default values initialized.
func NewCustomerAccountManagementV1IsEmailAvailablePostParams() *CustomerAccountManagementV1IsEmailAvailablePostParams {
	var ()
	return &CustomerAccountManagementV1IsEmailAvailablePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerAccountManagementV1IsEmailAvailablePostParamsWithTimeout creates a new CustomerAccountManagementV1IsEmailAvailablePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCustomerAccountManagementV1IsEmailAvailablePostParamsWithTimeout(timeout time.Duration) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	var ()
	return &CustomerAccountManagementV1IsEmailAvailablePostParams{

		timeout: timeout,
	}
}

// NewCustomerAccountManagementV1IsEmailAvailablePostParamsWithContext creates a new CustomerAccountManagementV1IsEmailAvailablePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewCustomerAccountManagementV1IsEmailAvailablePostParamsWithContext(ctx context.Context) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	var ()
	return &CustomerAccountManagementV1IsEmailAvailablePostParams{

		Context: ctx,
	}
}

// NewCustomerAccountManagementV1IsEmailAvailablePostParamsWithHTTPClient creates a new CustomerAccountManagementV1IsEmailAvailablePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCustomerAccountManagementV1IsEmailAvailablePostParamsWithHTTPClient(client *http.Client) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	var ()
	return &CustomerAccountManagementV1IsEmailAvailablePostParams{
		HTTPClient: client,
	}
}

/*CustomerAccountManagementV1IsEmailAvailablePostParams contains all the parameters to send to the API endpoint
for the customer account management v1 is email available post operation typically these are written to a http.Request
*/
type CustomerAccountManagementV1IsEmailAvailablePostParams struct {

	/*CustomerAccountManagementV1IsEmailAvailablePostBody*/
	CustomerAccountManagementV1IsEmailAvailablePostBody CustomerAccountManagementV1IsEmailAvailablePostBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) WithTimeout(timeout time.Duration) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) WithContext(ctx context.Context) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) WithHTTPClient(client *http.Client) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerAccountManagementV1IsEmailAvailablePostBody adds the customerAccountManagementV1IsEmailAvailablePostBody to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) WithCustomerAccountManagementV1IsEmailAvailablePostBody(customerAccountManagementV1IsEmailAvailablePostBody CustomerAccountManagementV1IsEmailAvailablePostBody) *CustomerAccountManagementV1IsEmailAvailablePostParams {
	o.SetCustomerAccountManagementV1IsEmailAvailablePostBody(customerAccountManagementV1IsEmailAvailablePostBody)
	return o
}

// SetCustomerAccountManagementV1IsEmailAvailablePostBody adds the customerAccountManagementV1IsEmailAvailablePostBody to the customer account management v1 is email available post params
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) SetCustomerAccountManagementV1IsEmailAvailablePostBody(customerAccountManagementV1IsEmailAvailablePostBody CustomerAccountManagementV1IsEmailAvailablePostBody) {
	o.CustomerAccountManagementV1IsEmailAvailablePostBody = customerAccountManagementV1IsEmailAvailablePostBody
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerAccountManagementV1IsEmailAvailablePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.CustomerAccountManagementV1IsEmailAvailablePostBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
