// Code generated by go-swagger; DO NOT EDIT.

package rma_comment_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRmaCommentManagementV1CommentsListGetParams creates a new RmaCommentManagementV1CommentsListGetParams object
// with the default values initialized.
func NewRmaCommentManagementV1CommentsListGetParams() *RmaCommentManagementV1CommentsListGetParams {
	var ()
	return &RmaCommentManagementV1CommentsListGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRmaCommentManagementV1CommentsListGetParamsWithTimeout creates a new RmaCommentManagementV1CommentsListGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRmaCommentManagementV1CommentsListGetParamsWithTimeout(timeout time.Duration) *RmaCommentManagementV1CommentsListGetParams {
	var ()
	return &RmaCommentManagementV1CommentsListGetParams{

		timeout: timeout,
	}
}

// NewRmaCommentManagementV1CommentsListGetParamsWithContext creates a new RmaCommentManagementV1CommentsListGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewRmaCommentManagementV1CommentsListGetParamsWithContext(ctx context.Context) *RmaCommentManagementV1CommentsListGetParams {
	var ()
	return &RmaCommentManagementV1CommentsListGetParams{

		Context: ctx,
	}
}

// NewRmaCommentManagementV1CommentsListGetParamsWithHTTPClient creates a new RmaCommentManagementV1CommentsListGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRmaCommentManagementV1CommentsListGetParamsWithHTTPClient(client *http.Client) *RmaCommentManagementV1CommentsListGetParams {
	var ()
	return &RmaCommentManagementV1CommentsListGetParams{
		HTTPClient: client,
	}
}

/*RmaCommentManagementV1CommentsListGetParams contains all the parameters to send to the API endpoint
for the rma comment management v1 comments list get operation typically these are written to a http.Request
*/
type RmaCommentManagementV1CommentsListGetParams struct {

	/*ID*/
	ID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) WithTimeout(timeout time.Duration) *RmaCommentManagementV1CommentsListGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) WithContext(ctx context.Context) *RmaCommentManagementV1CommentsListGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) WithHTTPClient(client *http.Client) *RmaCommentManagementV1CommentsListGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) WithID(id int64) *RmaCommentManagementV1CommentsListGetParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the rma comment management v1 comments list get params
func (o *RmaCommentManagementV1CommentsListGetParams) SetID(id int64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *RmaCommentManagementV1CommentsListGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
