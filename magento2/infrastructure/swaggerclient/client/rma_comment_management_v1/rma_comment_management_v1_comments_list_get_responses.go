// Code generated by go-swagger; DO NOT EDIT.

package rma_comment_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// RmaCommentManagementV1CommentsListGetReader is a Reader for the RmaCommentManagementV1CommentsListGet structure.
type RmaCommentManagementV1CommentsListGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RmaCommentManagementV1CommentsListGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRmaCommentManagementV1CommentsListGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewRmaCommentManagementV1CommentsListGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewRmaCommentManagementV1CommentsListGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRmaCommentManagementV1CommentsListGetOK creates a RmaCommentManagementV1CommentsListGetOK with default headers values
func NewRmaCommentManagementV1CommentsListGetOK() *RmaCommentManagementV1CommentsListGetOK {
	return &RmaCommentManagementV1CommentsListGetOK{}
}

/*RmaCommentManagementV1CommentsListGetOK handles this case with default header values.

200 Success.
*/
type RmaCommentManagementV1CommentsListGetOK struct {
	Payload *models.RmaDataCommentSearchResultInterface
}

func (o *RmaCommentManagementV1CommentsListGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/returns/{id}/comments][%d] rmaCommentManagementV1CommentsListGetOK  %+v", 200, o.Payload)
}

func (o *RmaCommentManagementV1CommentsListGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RmaDataCommentSearchResultInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRmaCommentManagementV1CommentsListGetUnauthorized creates a RmaCommentManagementV1CommentsListGetUnauthorized with default headers values
func NewRmaCommentManagementV1CommentsListGetUnauthorized() *RmaCommentManagementV1CommentsListGetUnauthorized {
	return &RmaCommentManagementV1CommentsListGetUnauthorized{}
}

/*RmaCommentManagementV1CommentsListGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type RmaCommentManagementV1CommentsListGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *RmaCommentManagementV1CommentsListGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/returns/{id}/comments][%d] rmaCommentManagementV1CommentsListGetUnauthorized  %+v", 401, o.Payload)
}

func (o *RmaCommentManagementV1CommentsListGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRmaCommentManagementV1CommentsListGetDefault creates a RmaCommentManagementV1CommentsListGetDefault with default headers values
func NewRmaCommentManagementV1CommentsListGetDefault(code int) *RmaCommentManagementV1CommentsListGetDefault {
	return &RmaCommentManagementV1CommentsListGetDefault{
		_statusCode: code,
	}
}

/*RmaCommentManagementV1CommentsListGetDefault handles this case with default header values.

Unexpected error
*/
type RmaCommentManagementV1CommentsListGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the rma comment management v1 comments list get default response
func (o *RmaCommentManagementV1CommentsListGetDefault) Code() int {
	return o._statusCode
}

func (o *RmaCommentManagementV1CommentsListGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/returns/{id}/comments][%d] rmaCommentManagementV1CommentsListGet default  %+v", o._statusCode, o.Payload)
}

func (o *RmaCommentManagementV1CommentsListGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
