// Code generated by go-swagger; DO NOT EDIT.

package checkout_guest_payment_information_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostReader is a Reader for the CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost structure.
type CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK creates a CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK with default headers values
func NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK() *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK {
	return &CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK{}
}

/*CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK handles this case with default header values.

200 Success.
*/
type CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK struct {
	Payload int64
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/guest-carts/{cartId}/payment-information][%d] checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK  %+v", 200, o.Payload)
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest creates a CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest with default headers values
func NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest() *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest {
	return &CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest{}
}

/*CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest handles this case with default header values.

400 Bad Request
*/
type CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/guest-carts/{cartId}/payment-information][%d] checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest  %+v", 400, o.Payload)
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault creates a CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault with default headers values
func NewCheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault(code int) *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault {
	return &CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault{
		_statusCode: code,
	}
}

/*CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault handles this case with default header values.

Unexpected error
*/
type CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the checkout guest payment information management v1 save payment information and place order post default response
func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault) Code() int {
	return o._statusCode
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/guest-carts/{cartId}/payment-information][%d] checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost default  %+v", o._statusCode, o.Payload)
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody checkout guest payment information management v1 save payment information and place order post body
swagger:model CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody
*/
type CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody struct {

	// billing address
	BillingAddress *models.QuoteDataAddressInterface `json:"billingAddress,omitempty"`

	// email
	// Required: true
	Email *string `json:"email"`

	// payment method
	// Required: true
	PaymentMethod *models.QuoteDataPaymentInterface `json:"paymentMethod"`
}

// Validate validates this checkout guest payment information management v1 save payment information and place order post body
func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBillingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePaymentMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) validateBillingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.BillingAddress) { // not required
		return nil
	}

	if o.BillingAddress != nil {
		if err := o.BillingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody" + "." + "billingAddress")
			}
			return err
		}
	}

	return nil
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody"+"."+"email", "body", o.Email); err != nil {
		return err
	}

	return nil
}

func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) validatePaymentMethod(formats strfmt.Registry) error {

	if err := validate.Required("checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody"+"."+"paymentMethod", "body", o.PaymentMethod); err != nil {
		return err
	}

	if o.PaymentMethod != nil {
		if err := o.PaymentMethod.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("checkoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody" + "." + "paymentMethod")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) UnmarshalBinary(b []byte) error {
	var res CheckoutGuestPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
