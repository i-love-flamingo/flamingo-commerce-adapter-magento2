// Code generated by go-swagger; DO NOT EDIT.

package shared_catalog_shared_catalog_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SharedCatalogSharedCatalogRepositoryV1GetListGetReader is a Reader for the SharedCatalogSharedCatalogRepositoryV1GetListGet structure.
type SharedCatalogSharedCatalogRepositoryV1GetListGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSharedCatalogSharedCatalogRepositoryV1GetListGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSharedCatalogSharedCatalogRepositoryV1GetListGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSharedCatalogSharedCatalogRepositoryV1GetListGetOK creates a SharedCatalogSharedCatalogRepositoryV1GetListGetOK with default headers values
func NewSharedCatalogSharedCatalogRepositoryV1GetListGetOK() *SharedCatalogSharedCatalogRepositoryV1GetListGetOK {
	return &SharedCatalogSharedCatalogRepositoryV1GetListGetOK{}
}

/*SharedCatalogSharedCatalogRepositoryV1GetListGetOK handles this case with default header values.

200 Success.
*/
type SharedCatalogSharedCatalogRepositoryV1GetListGetOK struct {
	Payload *models.SharedCatalogDataSearchResultsInterface
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/sharedCatalog/][%d] sharedCatalogSharedCatalogRepositoryV1GetListGetOK  %+v", 200, o.Payload)
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SharedCatalogDataSearchResultsInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized creates a SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized with default headers values
func NewSharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized() *SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized {
	return &SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized{}
}

/*SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/sharedCatalog/][%d] sharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized  %+v", 401, o.Payload)
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError creates a SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError with default headers values
func NewSharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError() *SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError {
	return &SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError{}
}

/*SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError handles this case with default header values.

Internal Server error
*/
type SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /V1/sharedCatalog/][%d] sharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError  %+v", 500, o.Payload)
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogSharedCatalogRepositoryV1GetListGetDefault creates a SharedCatalogSharedCatalogRepositoryV1GetListGetDefault with default headers values
func NewSharedCatalogSharedCatalogRepositoryV1GetListGetDefault(code int) *SharedCatalogSharedCatalogRepositoryV1GetListGetDefault {
	return &SharedCatalogSharedCatalogRepositoryV1GetListGetDefault{
		_statusCode: code,
	}
}

/*SharedCatalogSharedCatalogRepositoryV1GetListGetDefault handles this case with default header values.

Unexpected error
*/
type SharedCatalogSharedCatalogRepositoryV1GetListGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the shared catalog shared catalog repository v1 get list get default response
func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetDefault) Code() int {
	return o._statusCode
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/sharedCatalog/][%d] sharedCatalogSharedCatalogRepositoryV1GetListGet default  %+v", o._statusCode, o.Payload)
}

func (o *SharedCatalogSharedCatalogRepositoryV1GetListGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
