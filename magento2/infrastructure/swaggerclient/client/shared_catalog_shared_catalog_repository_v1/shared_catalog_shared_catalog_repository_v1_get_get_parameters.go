// Code generated by go-swagger; DO NOT EDIT.

package shared_catalog_shared_catalog_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSharedCatalogSharedCatalogRepositoryV1GetGetParams creates a new SharedCatalogSharedCatalogRepositoryV1GetGetParams object
// with the default values initialized.
func NewSharedCatalogSharedCatalogRepositoryV1GetGetParams() *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	var ()
	return &SharedCatalogSharedCatalogRepositoryV1GetGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSharedCatalogSharedCatalogRepositoryV1GetGetParamsWithTimeout creates a new SharedCatalogSharedCatalogRepositoryV1GetGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSharedCatalogSharedCatalogRepositoryV1GetGetParamsWithTimeout(timeout time.Duration) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	var ()
	return &SharedCatalogSharedCatalogRepositoryV1GetGetParams{

		timeout: timeout,
	}
}

// NewSharedCatalogSharedCatalogRepositoryV1GetGetParamsWithContext creates a new SharedCatalogSharedCatalogRepositoryV1GetGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewSharedCatalogSharedCatalogRepositoryV1GetGetParamsWithContext(ctx context.Context) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	var ()
	return &SharedCatalogSharedCatalogRepositoryV1GetGetParams{

		Context: ctx,
	}
}

// NewSharedCatalogSharedCatalogRepositoryV1GetGetParamsWithHTTPClient creates a new SharedCatalogSharedCatalogRepositoryV1GetGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSharedCatalogSharedCatalogRepositoryV1GetGetParamsWithHTTPClient(client *http.Client) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	var ()
	return &SharedCatalogSharedCatalogRepositoryV1GetGetParams{
		HTTPClient: client,
	}
}

/*SharedCatalogSharedCatalogRepositoryV1GetGetParams contains all the parameters to send to the API endpoint
for the shared catalog shared catalog repository v1 get get operation typically these are written to a http.Request
*/
type SharedCatalogSharedCatalogRepositoryV1GetGetParams struct {

	/*SharedCatalogID*/
	SharedCatalogID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) WithTimeout(timeout time.Duration) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) WithContext(ctx context.Context) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) WithHTTPClient(client *http.Client) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSharedCatalogID adds the sharedCatalogID to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) WithSharedCatalogID(sharedCatalogID int64) *SharedCatalogSharedCatalogRepositoryV1GetGetParams {
	o.SetSharedCatalogID(sharedCatalogID)
	return o
}

// SetSharedCatalogID adds the sharedCatalogId to the shared catalog shared catalog repository v1 get get params
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) SetSharedCatalogID(sharedCatalogID int64) {
	o.SharedCatalogID = sharedCatalogID
}

// WriteToRequest writes these params to a swagger request
func (o *SharedCatalogSharedCatalogRepositoryV1GetGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param sharedCatalogId
	if err := r.SetPathParam("sharedCatalogId", swag.FormatInt64(o.SharedCatalogID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
