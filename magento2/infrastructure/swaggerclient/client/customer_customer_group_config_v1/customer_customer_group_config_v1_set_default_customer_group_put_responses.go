// Code generated by go-swagger; DO NOT EDIT.

package customer_customer_group_config_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutReader is a Reader for the CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPut structure.
type CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK creates a CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK with default headers values
func NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK() *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK {
	return &CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK{}
}

/*CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK handles this case with default header values.

200 Success.
*/
type CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK struct {
	Payload int64
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK) Error() string {
	return fmt.Sprintf("[PUT /V1/customerGroups/default/{id}][%d] customerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK  %+v", 200, o.Payload)
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest creates a CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest with default headers values
func NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest() *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest {
	return &CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest{}
}

/*CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest handles this case with default header values.

400 Bad Request
*/
type CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /V1/customerGroups/default/{id}][%d] customerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest  %+v", 400, o.Payload)
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized creates a CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized with default headers values
func NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized() *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized {
	return &CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized{}
}

/*CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /V1/customerGroups/default/{id}][%d] customerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized  %+v", 401, o.Payload)
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError creates a CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError with default headers values
func NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError() *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError {
	return &CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError{}
}

/*CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError handles this case with default header values.

Internal Server error
*/
type CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /V1/customerGroups/default/{id}][%d] customerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError  %+v", 500, o.Payload)
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault creates a CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault with default headers values
func NewCustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault(code int) *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault {
	return &CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault{
		_statusCode: code,
	}
}

/*CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault handles this case with default header values.

Unexpected error
*/
type CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the customer customer group config v1 set default customer group put default response
func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault) Code() int {
	return o._statusCode
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault) Error() string {
	return fmt.Sprintf("[PUT /V1/customerGroups/default/{id}][%d] customerCustomerGroupConfigV1SetDefaultCustomerGroupPut default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerCustomerGroupConfigV1SetDefaultCustomerGroupPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
