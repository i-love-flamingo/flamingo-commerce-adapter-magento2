// Code generated by go-swagger; DO NOT EDIT.

package directory_country_information_acquirer_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// DirectoryCountryInformationAcquirerV1GetCountriesInfoGetReader is a Reader for the DirectoryCountryInformationAcquirerV1GetCountriesInfoGet structure.
type DirectoryCountryInformationAcquirerV1GetCountriesInfoGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK creates a DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK with default headers values
func NewDirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK() *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK {
	return &DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK{}
}

/*DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK handles this case with default header values.

200 Success.
*/
type DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK struct {
	Payload []*models.DirectoryDataCountryInformationInterface
}

func (o *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/directory/countries][%d] directoryCountryInformationAcquirerV1GetCountriesInfoGetOK  %+v", 200, o.Payload)
}

func (o *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault creates a DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault with default headers values
func NewDirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault(code int) *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault {
	return &DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault{
		_statusCode: code,
	}
}

/*DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault handles this case with default header values.

Unexpected error
*/
type DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the directory country information acquirer v1 get countries info get default response
func (o *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault) Code() int {
	return o._statusCode
}

func (o *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/directory/countries][%d] directoryCountryInformationAcquirerV1GetCountriesInfoGet default  %+v", o._statusCode, o.Payload)
}

func (o *DirectoryCountryInformationAcquirerV1GetCountriesInfoGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
