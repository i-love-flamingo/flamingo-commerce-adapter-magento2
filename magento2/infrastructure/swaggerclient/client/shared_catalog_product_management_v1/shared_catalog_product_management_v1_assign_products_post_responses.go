// Code generated by go-swagger; DO NOT EDIT.

package shared_catalog_product_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SharedCatalogProductManagementV1AssignProductsPostReader is a Reader for the SharedCatalogProductManagementV1AssignProductsPost structure.
type SharedCatalogProductManagementV1AssignProductsPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SharedCatalogProductManagementV1AssignProductsPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSharedCatalogProductManagementV1AssignProductsPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSharedCatalogProductManagementV1AssignProductsPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSharedCatalogProductManagementV1AssignProductsPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSharedCatalogProductManagementV1AssignProductsPostOK creates a SharedCatalogProductManagementV1AssignProductsPostOK with default headers values
func NewSharedCatalogProductManagementV1AssignProductsPostOK() *SharedCatalogProductManagementV1AssignProductsPostOK {
	return &SharedCatalogProductManagementV1AssignProductsPostOK{}
}

/*SharedCatalogProductManagementV1AssignProductsPostOK handles this case with default header values.

200 Success.
*/
type SharedCatalogProductManagementV1AssignProductsPostOK struct {
	Payload bool
}

func (o *SharedCatalogProductManagementV1AssignProductsPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/assignProducts][%d] sharedCatalogProductManagementV1AssignProductsPostOK  %+v", 200, o.Payload)
}

func (o *SharedCatalogProductManagementV1AssignProductsPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogProductManagementV1AssignProductsPostUnauthorized creates a SharedCatalogProductManagementV1AssignProductsPostUnauthorized with default headers values
func NewSharedCatalogProductManagementV1AssignProductsPostUnauthorized() *SharedCatalogProductManagementV1AssignProductsPostUnauthorized {
	return &SharedCatalogProductManagementV1AssignProductsPostUnauthorized{}
}

/*SharedCatalogProductManagementV1AssignProductsPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SharedCatalogProductManagementV1AssignProductsPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogProductManagementV1AssignProductsPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/assignProducts][%d] sharedCatalogProductManagementV1AssignProductsPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SharedCatalogProductManagementV1AssignProductsPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogProductManagementV1AssignProductsPostDefault creates a SharedCatalogProductManagementV1AssignProductsPostDefault with default headers values
func NewSharedCatalogProductManagementV1AssignProductsPostDefault(code int) *SharedCatalogProductManagementV1AssignProductsPostDefault {
	return &SharedCatalogProductManagementV1AssignProductsPostDefault{
		_statusCode: code,
	}
}

/*SharedCatalogProductManagementV1AssignProductsPostDefault handles this case with default header values.

Unexpected error
*/
type SharedCatalogProductManagementV1AssignProductsPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the shared catalog product management v1 assign products post default response
func (o *SharedCatalogProductManagementV1AssignProductsPostDefault) Code() int {
	return o._statusCode
}

func (o *SharedCatalogProductManagementV1AssignProductsPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/assignProducts][%d] sharedCatalogProductManagementV1AssignProductsPost default  %+v", o._statusCode, o.Payload)
}

func (o *SharedCatalogProductManagementV1AssignProductsPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SharedCatalogProductManagementV1AssignProductsPostBody shared catalog product management v1 assign products post body
swagger:model SharedCatalogProductManagementV1AssignProductsPostBody
*/
type SharedCatalogProductManagementV1AssignProductsPostBody struct {

	// products
	// Required: true
	Products []*models.CatalogDataProductInterface `json:"products"`
}

// Validate validates this shared catalog product management v1 assign products post body
func (o *SharedCatalogProductManagementV1AssignProductsPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProducts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SharedCatalogProductManagementV1AssignProductsPostBody) validateProducts(formats strfmt.Registry) error {

	if err := validate.Required("sharedCatalogProductManagementV1AssignProductsPostBody"+"."+"products", "body", o.Products); err != nil {
		return err
	}

	for i := 0; i < len(o.Products); i++ {
		if swag.IsZero(o.Products[i]) { // not required
			continue
		}

		if o.Products[i] != nil {
			if err := o.Products[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sharedCatalogProductManagementV1AssignProductsPostBody" + "." + "products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SharedCatalogProductManagementV1AssignProductsPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SharedCatalogProductManagementV1AssignProductsPostBody) UnmarshalBinary(b []byte) error {
	var res SharedCatalogProductManagementV1AssignProductsPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
