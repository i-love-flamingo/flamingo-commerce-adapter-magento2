// Code generated by go-swagger; DO NOT EDIT.

package integration_customer_token_service_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostReader is a Reader for the IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPost structure.
type IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK creates a IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK with default headers values
func NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK() *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK {
	return &IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK{}
}

/*IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK handles this case with default header values.

200 Success.
*/
type IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK struct {
	Payload string
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/integration/customer/token][%d] integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK  %+v", 200, o.Payload)
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest creates a IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest with default headers values
func NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest() *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest {
	return &IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest{}
}

/*IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest handles this case with default header values.

400 Bad Request
*/
type IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/integration/customer/token][%d] integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest  %+v", 400, o.Payload)
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault creates a IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault with default headers values
func NewIntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault(code int) *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault {
	return &IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault{
		_statusCode: code,
	}
}

/*IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault handles this case with default header values.

Unexpected error
*/
type IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the integration customer token service v1 create customer access token post default response
func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault) Code() int {
	return o._statusCode
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/integration/customer/token][%d] integrationCustomerTokenServiceV1CreateCustomerAccessTokenPost default  %+v", o._statusCode, o.Payload)
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody integration customer token service v1 create customer access token post body
swagger:model IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody
*/
type IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody struct {

	// password
	// Required: true
	Password *string `json:"password"`

	// username
	// Required: true
	Username *string `json:"username"`
}

// Validate validates this integration customer token service v1 create customer access token post body
func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePassword(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody) validatePassword(formats strfmt.Registry) error {

	if err := validate.Required("integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody"+"."+"password", "body", o.Password); err != nil {
		return err
	}

	return nil
}

func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("integrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody"+"."+"username", "body", o.Username); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody) UnmarshalBinary(b []byte) error {
	var res IntegrationCustomerTokenServiceV1CreateCustomerAccessTokenPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
