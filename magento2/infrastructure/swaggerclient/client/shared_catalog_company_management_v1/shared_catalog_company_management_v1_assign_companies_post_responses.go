// Code generated by go-swagger; DO NOT EDIT.

package shared_catalog_company_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SharedCatalogCompanyManagementV1AssignCompaniesPostReader is a Reader for the SharedCatalogCompanyManagementV1AssignCompaniesPost structure.
type SharedCatalogCompanyManagementV1AssignCompaniesPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSharedCatalogCompanyManagementV1AssignCompaniesPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSharedCatalogCompanyManagementV1AssignCompaniesPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSharedCatalogCompanyManagementV1AssignCompaniesPostOK creates a SharedCatalogCompanyManagementV1AssignCompaniesPostOK with default headers values
func NewSharedCatalogCompanyManagementV1AssignCompaniesPostOK() *SharedCatalogCompanyManagementV1AssignCompaniesPostOK {
	return &SharedCatalogCompanyManagementV1AssignCompaniesPostOK{}
}

/*SharedCatalogCompanyManagementV1AssignCompaniesPostOK handles this case with default header values.

200 Success.
*/
type SharedCatalogCompanyManagementV1AssignCompaniesPostOK struct {
	Payload bool
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{sharedCatalogId}/assignCompanies][%d] sharedCatalogCompanyManagementV1AssignCompaniesPostOK  %+v", 200, o.Payload)
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized creates a SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized with default headers values
func NewSharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized() *SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized {
	return &SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized{}
}

/*SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{sharedCatalogId}/assignCompanies][%d] sharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError creates a SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError with default headers values
func NewSharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError() *SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError {
	return &SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError{}
}

/*SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError handles this case with default header values.

Internal Server error
*/
type SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{sharedCatalogId}/assignCompanies][%d] sharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError  %+v", 500, o.Payload)
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogCompanyManagementV1AssignCompaniesPostDefault creates a SharedCatalogCompanyManagementV1AssignCompaniesPostDefault with default headers values
func NewSharedCatalogCompanyManagementV1AssignCompaniesPostDefault(code int) *SharedCatalogCompanyManagementV1AssignCompaniesPostDefault {
	return &SharedCatalogCompanyManagementV1AssignCompaniesPostDefault{
		_statusCode: code,
	}
}

/*SharedCatalogCompanyManagementV1AssignCompaniesPostDefault handles this case with default header values.

Unexpected error
*/
type SharedCatalogCompanyManagementV1AssignCompaniesPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the shared catalog company management v1 assign companies post default response
func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostDefault) Code() int {
	return o._statusCode
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{sharedCatalogId}/assignCompanies][%d] sharedCatalogCompanyManagementV1AssignCompaniesPost default  %+v", o._statusCode, o.Payload)
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SharedCatalogCompanyManagementV1AssignCompaniesPostBody shared catalog company management v1 assign companies post body
swagger:model SharedCatalogCompanyManagementV1AssignCompaniesPostBody
*/
type SharedCatalogCompanyManagementV1AssignCompaniesPostBody struct {

	// companies
	// Required: true
	Companies []*models.CompanyDataCompanyInterface `json:"companies"`
}

// Validate validates this shared catalog company management v1 assign companies post body
func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCompanies(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostBody) validateCompanies(formats strfmt.Registry) error {

	if err := validate.Required("sharedCatalogCompanyManagementV1AssignCompaniesPostBody"+"."+"companies", "body", o.Companies); err != nil {
		return err
	}

	for i := 0; i < len(o.Companies); i++ {
		if swag.IsZero(o.Companies[i]) { // not required
			continue
		}

		if o.Companies[i] != nil {
			if err := o.Companies[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sharedCatalogCompanyManagementV1AssignCompaniesPostBody" + "." + "companies" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SharedCatalogCompanyManagementV1AssignCompaniesPostBody) UnmarshalBinary(b []byte) error {
	var res SharedCatalogCompanyManagementV1AssignCompaniesPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
