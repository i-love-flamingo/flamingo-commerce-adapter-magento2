// Code generated by go-swagger; DO NOT EDIT.

package sales_rule_rule_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new sales rule rule repository v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for sales rule rule repository v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
SalesRuleRuleRepositoryV1DeleteByIDDelete Delete rule by ID.
*/
func (a *Client) SalesRuleRuleRepositoryV1DeleteByIDDelete(params *SalesRuleRuleRepositoryV1DeleteByIDDeleteParams) (*SalesRuleRuleRepositoryV1DeleteByIDDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleRuleRepositoryV1DeleteByIDDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleRuleRepositoryV1DeleteByIdDelete",
		Method:             "DELETE",
		PathPattern:        "/V1/salesRules/{ruleId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleRuleRepositoryV1DeleteByIDDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleRuleRepositoryV1DeleteByIDDeleteOK), nil

}

/*
SalesRuleRuleRepositoryV1GetByIDGet Get rule by ID.
*/
func (a *Client) SalesRuleRuleRepositoryV1GetByIDGet(params *SalesRuleRuleRepositoryV1GetByIDGetParams) (*SalesRuleRuleRepositoryV1GetByIDGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleRuleRepositoryV1GetByIDGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleRuleRepositoryV1GetByIdGet",
		Method:             "GET",
		PathPattern:        "/V1/salesRules/{ruleId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleRuleRepositoryV1GetByIDGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleRuleRepositoryV1GetByIDGetOK), nil

}

/*
SalesRuleRuleRepositoryV1GetListGet Retrieve sales rules that match te specified criteria. This call returns an array of objects, but detailed information about each objectâ€™s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#RuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
*/
func (a *Client) SalesRuleRuleRepositoryV1GetListGet(params *SalesRuleRuleRepositoryV1GetListGetParams) (*SalesRuleRuleRepositoryV1GetListGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleRuleRepositoryV1GetListGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleRuleRepositoryV1GetListGet",
		Method:             "GET",
		PathPattern:        "/V1/salesRules/search",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleRuleRepositoryV1GetListGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleRuleRepositoryV1GetListGetOK), nil

}

/*
SalesRuleRuleRepositoryV1SavePost Save sales rule.
*/
func (a *Client) SalesRuleRuleRepositoryV1SavePost(params *SalesRuleRuleRepositoryV1SavePostParams) (*SalesRuleRuleRepositoryV1SavePostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleRuleRepositoryV1SavePostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleRuleRepositoryV1SavePost",
		Method:             "POST",
		PathPattern:        "/V1/salesRules",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleRuleRepositoryV1SavePostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleRuleRepositoryV1SavePostOK), nil

}

/*
SalesRuleRuleRepositoryV1SavePut Save sales rule.
*/
func (a *Client) SalesRuleRuleRepositoryV1SavePut(params *SalesRuleRuleRepositoryV1SavePutParams) (*SalesRuleRuleRepositoryV1SavePutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleRuleRepositoryV1SavePutParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleRuleRepositoryV1SavePut",
		Method:             "PUT",
		PathPattern:        "/V1/salesRules/{ruleId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleRuleRepositoryV1SavePutReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleRuleRepositoryV1SavePutOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
