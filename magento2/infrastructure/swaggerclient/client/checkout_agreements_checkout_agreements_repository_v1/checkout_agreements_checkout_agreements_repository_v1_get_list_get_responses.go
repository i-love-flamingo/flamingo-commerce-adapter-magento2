// Code generated by go-swagger; DO NOT EDIT.

package checkout_agreements_checkout_agreements_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetReader is a Reader for the CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGet structure.
type CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK creates a CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK with default headers values
func NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK() *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK {
	return &CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK{}
}

/*CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK handles this case with default header values.

200 Success.
*/
type CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK struct {
	Payload []*models.CheckoutAgreementsDataAgreementInterface
}

func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/carts/licence][%d] checkoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK  %+v", 200, o.Payload)
}

func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized creates a CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized with default headers values
func NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized() *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized {
	return &CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized{}
}

/*CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/carts/licence][%d] checkoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized  %+v", 401, o.Payload)
}

func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault creates a CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault with default headers values
func NewCheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault(code int) *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault {
	return &CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault{
		_statusCode: code,
	}
}

/*CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault handles this case with default header values.

Unexpected error
*/
type CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the checkout agreements checkout agreements repository v1 get list get default response
func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault) Code() int {
	return o._statusCode
}

func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/carts/licence][%d] checkoutAgreementsCheckoutAgreementsRepositoryV1GetListGet default  %+v", o._statusCode, o.Payload)
}

func (o *CheckoutAgreementsCheckoutAgreementsRepositoryV1GetListGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
