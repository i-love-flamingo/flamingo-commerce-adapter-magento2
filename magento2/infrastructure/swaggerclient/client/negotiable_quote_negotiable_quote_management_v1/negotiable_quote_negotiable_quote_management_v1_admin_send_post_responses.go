// Code generated by go-swagger; DO NOT EDIT.

package negotiable_quote_negotiable_quote_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostReader is a Reader for the NegotiableQuoteNegotiableQuoteManagementV1AdminSendPost structure.
type NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK creates a NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK with default headers values
func NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK() *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK {
	return &NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK{}
}

/*NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK handles this case with default header values.

200 Success.
*/
type NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK struct {
	Payload bool
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/negotiableQuote/submitToCustomer][%d] negotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK  %+v", 200, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized creates a NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized with default headers values
func NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized() *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized {
	return &NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized{}
}

/*NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/negotiableQuote/submitToCustomer][%d] negotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized  %+v", 401, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault creates a NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault with default headers values
func NewNegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault(code int) *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault {
	return &NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault{
		_statusCode: code,
	}
}

/*NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault handles this case with default header values.

Unexpected error
*/
type NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the negotiable quote negotiable quote management v1 admin send post default response
func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault) Code() int {
	return o._statusCode
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/negotiableQuote/submitToCustomer][%d] negotiableQuoteNegotiableQuoteManagementV1AdminSendPost default  %+v", o._statusCode, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody negotiable quote negotiable quote management v1 admin send post body
swagger:model NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody
*/
type NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody struct {

	// comment
	Comment string `json:"comment,omitempty"`

	// files
	Files []*models.NegotiableQuoteDataAttachmentContentInterface `json:"files"`

	// quote Id
	// Required: true
	QuoteID *int64 `json:"quoteId"`
}

// Validate validates this negotiable quote negotiable quote management v1 admin send post body
func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFiles(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateQuoteID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody) validateFiles(formats strfmt.Registry) error {

	if swag.IsZero(o.Files) { // not required
		return nil
	}

	for i := 0; i < len(o.Files); i++ {
		if swag.IsZero(o.Files[i]) { // not required
			continue
		}

		if o.Files[i] != nil {
			if err := o.Files[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("negotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody" + "." + "files" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody) validateQuoteID(formats strfmt.Registry) error {

	if err := validate.Required("negotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody"+"."+"quoteId", "body", o.QuoteID); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody) UnmarshalBinary(b []byte) error {
	var res NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
