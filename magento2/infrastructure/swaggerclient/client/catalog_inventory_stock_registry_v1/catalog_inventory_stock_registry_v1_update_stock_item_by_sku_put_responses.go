// Code generated by go-swagger; DO NOT EDIT.

package catalog_inventory_stock_registry_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutReader is a Reader for the CatalogInventoryStockRegistryV1UpdateStockItemBySkuPut structure.
type CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK creates a CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK with default headers values
func NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK() *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK {
	return &CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK{}
}

/*CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK handles this case with default header values.

200 Success.
*/
type CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK struct {
	Payload int64
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK) Error() string {
	return fmt.Sprintf("[PUT /V1/products/{productSku}/stockItems/{itemId}][%d] catalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK  %+v", 200, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest creates a CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest with default headers values
func NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest() *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest {
	return &CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest{}
}

/*CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest handles this case with default header values.

400 Bad Request
*/
type CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /V1/products/{productSku}/stockItems/{itemId}][%d] catalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized creates a CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized with default headers values
func NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized() *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized {
	return &CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized{}
}

/*CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /V1/products/{productSku}/stockItems/{itemId}][%d] catalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault creates a CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault with default headers values
func NewCatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault(code int) *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault {
	return &CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault{
		_statusCode: code,
	}
}

/*CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault handles this case with default header values.

Unexpected error
*/
type CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalog inventory stock registry v1 update stock item by sku put default response
func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault) Code() int {
	return o._statusCode
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault) Error() string {
	return fmt.Sprintf("[PUT /V1/products/{productSku}/stockItems/{itemId}][%d] catalogInventoryStockRegistryV1UpdateStockItemBySkuPut default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody catalog inventory stock registry v1 update stock item by sku put body
swagger:model CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody
*/
type CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody struct {

	// stock item
	// Required: true
	StockItem *models.CatalogInventoryDataStockItemInterface `json:"stockItem"`
}

// Validate validates this catalog inventory stock registry v1 update stock item by sku put body
func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStockItem(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody) validateStockItem(formats strfmt.Registry) error {

	if err := validate.Required("catalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody"+"."+"stockItem", "body", o.StockItem); err != nil {
		return err
	}

	if o.StockItem != nil {
		if err := o.StockItem.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("catalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody" + "." + "stockItem")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody) UnmarshalBinary(b []byte) error {
	var res CatalogInventoryStockRegistryV1UpdateStockItemBySkuPutBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
