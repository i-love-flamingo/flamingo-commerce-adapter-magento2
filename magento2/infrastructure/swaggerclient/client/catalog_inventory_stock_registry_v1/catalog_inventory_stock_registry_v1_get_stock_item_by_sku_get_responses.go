// Code generated by go-swagger; DO NOT EDIT.

package catalog_inventory_stock_registry_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CatalogInventoryStockRegistryV1GetStockItemBySkuGetReader is a Reader for the CatalogInventoryStockRegistryV1GetStockItemBySkuGet structure.
type CatalogInventoryStockRegistryV1GetStockItemBySkuGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetOK creates a CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK with default headers values
func NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetOK() *CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK {
	return &CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK{}
}

/*CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK handles this case with default header values.

200 Success.
*/
type CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK struct {
	Payload *models.CatalogInventoryDataStockItemInterface
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/stockItems/{productSku}][%d] catalogInventoryStockRegistryV1GetStockItemBySkuGetOK  %+v", 200, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CatalogInventoryDataStockItemInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest creates a CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest with default headers values
func NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest() *CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest {
	return &CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest{}
}

/*CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest handles this case with default header values.

400 Bad Request
*/
type CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /V1/stockItems/{productSku}][%d] catalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized creates a CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized with default headers values
func NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized() *CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized {
	return &CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized{}
}

/*CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/stockItems/{productSku}][%d] catalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault creates a CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault with default headers values
func NewCatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault(code int) *CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault {
	return &CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault{
		_statusCode: code,
	}
}

/*CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault handles this case with default header values.

Unexpected error
*/
type CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalog inventory stock registry v1 get stock item by sku get default response
func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault) Code() int {
	return o._statusCode
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/stockItems/{productSku}][%d] catalogInventoryStockRegistryV1GetStockItemBySkuGet default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogInventoryStockRegistryV1GetStockItemBySkuGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
