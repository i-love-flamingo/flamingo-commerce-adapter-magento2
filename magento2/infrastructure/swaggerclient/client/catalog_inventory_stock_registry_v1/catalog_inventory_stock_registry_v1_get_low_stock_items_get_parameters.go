// Code generated by go-swagger; DO NOT EDIT.

package catalog_inventory_stock_registry_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParams creates a new CatalogInventoryStockRegistryV1GetLowStockItemsGetParams object
// with the default values initialized.
func NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParams() *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	var ()
	return &CatalogInventoryStockRegistryV1GetLowStockItemsGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParamsWithTimeout creates a new CatalogInventoryStockRegistryV1GetLowStockItemsGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParamsWithTimeout(timeout time.Duration) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	var ()
	return &CatalogInventoryStockRegistryV1GetLowStockItemsGetParams{

		timeout: timeout,
	}
}

// NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParamsWithContext creates a new CatalogInventoryStockRegistryV1GetLowStockItemsGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParamsWithContext(ctx context.Context) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	var ()
	return &CatalogInventoryStockRegistryV1GetLowStockItemsGetParams{

		Context: ctx,
	}
}

// NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParamsWithHTTPClient creates a new CatalogInventoryStockRegistryV1GetLowStockItemsGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCatalogInventoryStockRegistryV1GetLowStockItemsGetParamsWithHTTPClient(client *http.Client) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	var ()
	return &CatalogInventoryStockRegistryV1GetLowStockItemsGetParams{
		HTTPClient: client,
	}
}

/*CatalogInventoryStockRegistryV1GetLowStockItemsGetParams contains all the parameters to send to the API endpoint
for the catalog inventory stock registry v1 get low stock items get operation typically these are written to a http.Request
*/
type CatalogInventoryStockRegistryV1GetLowStockItemsGetParams struct {

	/*CurrentPage*/
	CurrentPage *int64
	/*PageSize*/
	PageSize *int64
	/*Qty*/
	Qty float64
	/*ScopeID*/
	ScopeID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithTimeout(timeout time.Duration) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithContext(ctx context.Context) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithHTTPClient(client *http.Client) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCurrentPage adds the currentPage to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithCurrentPage(currentPage *int64) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetCurrentPage(currentPage)
	return o
}

// SetCurrentPage adds the currentPage to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetCurrentPage(currentPage *int64) {
	o.CurrentPage = currentPage
}

// WithPageSize adds the pageSize to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithPageSize(pageSize *int64) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithQty adds the qty to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithQty(qty float64) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetQty(qty)
	return o
}

// SetQty adds the qty to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetQty(qty float64) {
	o.Qty = qty
}

// WithScopeID adds the scopeID to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WithScopeID(scopeID int64) *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams {
	o.SetScopeID(scopeID)
	return o
}

// SetScopeID adds the scopeId to the catalog inventory stock registry v1 get low stock items get params
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) SetScopeID(scopeID int64) {
	o.ScopeID = scopeID
}

// WriteToRequest writes these params to a swagger request
func (o *CatalogInventoryStockRegistryV1GetLowStockItemsGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.CurrentPage != nil {

		// query param currentPage
		var qrCurrentPage int64
		if o.CurrentPage != nil {
			qrCurrentPage = *o.CurrentPage
		}
		qCurrentPage := swag.FormatInt64(qrCurrentPage)
		if qCurrentPage != "" {
			if err := r.SetQueryParam("currentPage", qCurrentPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}

	}

	// query param qty
	qrQty := o.Qty
	qQty := swag.FormatFloat64(qrQty)
	if qQty != "" {
		if err := r.SetQueryParam("qty", qQty); err != nil {
			return err
		}
	}

	// query param scopeId
	qrScopeID := o.ScopeID
	qScopeID := swag.FormatInt64(qrScopeID)
	if qScopeID != "" {
		if err := r.SetQueryParam("scopeId", qScopeID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
