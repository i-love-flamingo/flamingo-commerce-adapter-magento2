// Code generated by go-swagger; DO NOT EDIT.

package tax_tax_rule_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new tax tax rule repository v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for tax tax rule repository v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
TaxTaxRuleRepositoryV1DeleteByIDDelete Delete TaxRule
*/
func (a *Client) TaxTaxRuleRepositoryV1DeleteByIDDelete(params *TaxTaxRuleRepositoryV1DeleteByIDDeleteParams) (*TaxTaxRuleRepositoryV1DeleteByIDDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRuleRepositoryV1DeleteByIDDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRuleRepositoryV1DeleteByIdDelete",
		Method:             "DELETE",
		PathPattern:        "/V1/taxRules/{ruleId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRuleRepositoryV1DeleteByIDDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRuleRepositoryV1DeleteByIDDeleteOK), nil

}

/*
TaxTaxRuleRepositoryV1GetGet Get TaxRule
*/
func (a *Client) TaxTaxRuleRepositoryV1GetGet(params *TaxTaxRuleRepositoryV1GetGetParams) (*TaxTaxRuleRepositoryV1GetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRuleRepositoryV1GetGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRuleRepositoryV1GetGet",
		Method:             "GET",
		PathPattern:        "/V1/taxRules/{ruleId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRuleRepositoryV1GetGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRuleRepositoryV1GetGetOK), nil

}

/*
TaxTaxRuleRepositoryV1GetListGet Search TaxRules This call returns an array of objects, but detailed information about each objectâ€™s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxRuleRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
*/
func (a *Client) TaxTaxRuleRepositoryV1GetListGet(params *TaxTaxRuleRepositoryV1GetListGetParams) (*TaxTaxRuleRepositoryV1GetListGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRuleRepositoryV1GetListGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRuleRepositoryV1GetListGet",
		Method:             "GET",
		PathPattern:        "/V1/taxRules/search",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRuleRepositoryV1GetListGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRuleRepositoryV1GetListGetOK), nil

}

/*
TaxTaxRuleRepositoryV1SavePost Save TaxRule
*/
func (a *Client) TaxTaxRuleRepositoryV1SavePost(params *TaxTaxRuleRepositoryV1SavePostParams) (*TaxTaxRuleRepositoryV1SavePostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRuleRepositoryV1SavePostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRuleRepositoryV1SavePost",
		Method:             "POST",
		PathPattern:        "/V1/taxRules",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRuleRepositoryV1SavePostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRuleRepositoryV1SavePostOK), nil

}

/*
TaxTaxRuleRepositoryV1SavePut Save TaxRule
*/
func (a *Client) TaxTaxRuleRepositoryV1SavePut(params *TaxTaxRuleRepositoryV1SavePutParams) (*TaxTaxRuleRepositoryV1SavePutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRuleRepositoryV1SavePutParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRuleRepositoryV1SavePut",
		Method:             "PUT",
		PathPattern:        "/V1/taxRules",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRuleRepositoryV1SavePutReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRuleRepositoryV1SavePutOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
