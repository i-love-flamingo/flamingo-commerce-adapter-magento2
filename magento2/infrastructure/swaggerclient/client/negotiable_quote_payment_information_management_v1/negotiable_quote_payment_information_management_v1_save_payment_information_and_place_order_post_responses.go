// Code generated by go-swagger; DO NOT EDIT.

package negotiable_quote_payment_information_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostReader is a Reader for the NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost structure.
type NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK creates a NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK with default headers values
func NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK() *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK {
	return &NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK{}
}

/*NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK handles this case with default header values.

200 Success.
*/
type NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK struct {
	Payload int64
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/negotiable-carts/{cartId}/payment-information][%d] negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK  %+v", 200, o.Payload)
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest creates a NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest with default headers values
func NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest() *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest {
	return &NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest{}
}

/*NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest handles this case with default header values.

400 Bad Request
*/
type NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/negotiable-carts/{cartId}/payment-information][%d] negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest  %+v", 400, o.Payload)
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized creates a NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized with default headers values
func NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized() *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized {
	return &NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized{}
}

/*NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/negotiable-carts/{cartId}/payment-information][%d] negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized  %+v", 401, o.Payload)
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault creates a NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault with default headers values
func NewNegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault(code int) *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault {
	return &NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault{
		_statusCode: code,
	}
}

/*NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault handles this case with default header values.

Unexpected error
*/
type NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the negotiable quote payment information management v1 save payment information and place order post default response
func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault) Code() int {
	return o._statusCode
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/negotiable-carts/{cartId}/payment-information][%d] negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost default  %+v", o._statusCode, o.Payload)
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody negotiable quote payment information management v1 save payment information and place order post body
swagger:model NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody
*/
type NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody struct {

	// billing address
	BillingAddress *models.QuoteDataAddressInterface `json:"billingAddress,omitempty"`

	// payment method
	// Required: true
	PaymentMethod *models.QuoteDataPaymentInterface `json:"paymentMethod"`
}

// Validate validates this negotiable quote payment information management v1 save payment information and place order post body
func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBillingAddress(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePaymentMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) validateBillingAddress(formats strfmt.Registry) error {

	if swag.IsZero(o.BillingAddress) { // not required
		return nil
	}

	if o.BillingAddress != nil {
		if err := o.BillingAddress.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody" + "." + "billingAddress")
			}
			return err
		}
	}

	return nil
}

func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) validatePaymentMethod(formats strfmt.Registry) error {

	if err := validate.Required("negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody"+"."+"paymentMethod", "body", o.PaymentMethod); err != nil {
		return err
	}

	if o.PaymentMethod != nil {
		if err := o.PaymentMethod.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("negotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody" + "." + "paymentMethod")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody) UnmarshalBinary(b []byte) error {
	var res NegotiableQuotePaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
