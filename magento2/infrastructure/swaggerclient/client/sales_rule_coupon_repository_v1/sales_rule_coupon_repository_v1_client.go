// Code generated by go-swagger; DO NOT EDIT.

package sales_rule_coupon_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new sales rule coupon repository v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for sales rule coupon repository v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
SalesRuleCouponRepositoryV1DeleteByIDDelete Delete coupon by coupon id.
*/
func (a *Client) SalesRuleCouponRepositoryV1DeleteByIDDelete(params *SalesRuleCouponRepositoryV1DeleteByIDDeleteParams) (*SalesRuleCouponRepositoryV1DeleteByIDDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponRepositoryV1DeleteByIDDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponRepositoryV1DeleteByIdDelete",
		Method:             "DELETE",
		PathPattern:        "/V1/coupons/{couponId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponRepositoryV1DeleteByIDDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponRepositoryV1DeleteByIDDeleteOK), nil

}

/*
SalesRuleCouponRepositoryV1GetByIDGet Get coupon by coupon id.
*/
func (a *Client) SalesRuleCouponRepositoryV1GetByIDGet(params *SalesRuleCouponRepositoryV1GetByIDGetParams) (*SalesRuleCouponRepositoryV1GetByIDGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponRepositoryV1GetByIDGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponRepositoryV1GetByIdGet",
		Method:             "GET",
		PathPattern:        "/V1/coupons/{couponId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponRepositoryV1GetByIDGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponRepositoryV1GetByIDGetOK), nil

}

/*
SalesRuleCouponRepositoryV1GetListGet Retrieve a coupon using the specified search criteria. This call returns an array of objects, but detailed information about each objectâ€™s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#CouponRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
*/
func (a *Client) SalesRuleCouponRepositoryV1GetListGet(params *SalesRuleCouponRepositoryV1GetListGetParams) (*SalesRuleCouponRepositoryV1GetListGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponRepositoryV1GetListGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponRepositoryV1GetListGet",
		Method:             "GET",
		PathPattern:        "/V1/coupons/search",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponRepositoryV1GetListGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponRepositoryV1GetListGetOK), nil

}

/*
SalesRuleCouponRepositoryV1SavePost Save a coupon.
*/
func (a *Client) SalesRuleCouponRepositoryV1SavePost(params *SalesRuleCouponRepositoryV1SavePostParams) (*SalesRuleCouponRepositoryV1SavePostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponRepositoryV1SavePostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponRepositoryV1SavePost",
		Method:             "POST",
		PathPattern:        "/V1/coupons",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponRepositoryV1SavePostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponRepositoryV1SavePostOK), nil

}

/*
SalesRuleCouponRepositoryV1SavePut Save a coupon.
*/
func (a *Client) SalesRuleCouponRepositoryV1SavePut(params *SalesRuleCouponRepositoryV1SavePutParams) (*SalesRuleCouponRepositoryV1SavePutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSalesRuleCouponRepositoryV1SavePutParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "salesRuleCouponRepositoryV1SavePut",
		Method:             "PUT",
		PathPattern:        "/V1/coupons/{couponId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SalesRuleCouponRepositoryV1SavePutReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SalesRuleCouponRepositoryV1SavePutOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
