// Code generated by go-swagger; DO NOT EDIT.

package sales_invoice_comment_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSalesInvoiceCommentRepositoryV1SavePostParams creates a new SalesInvoiceCommentRepositoryV1SavePostParams object
// with the default values initialized.
func NewSalesInvoiceCommentRepositoryV1SavePostParams() *SalesInvoiceCommentRepositoryV1SavePostParams {
	var ()
	return &SalesInvoiceCommentRepositoryV1SavePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSalesInvoiceCommentRepositoryV1SavePostParamsWithTimeout creates a new SalesInvoiceCommentRepositoryV1SavePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSalesInvoiceCommentRepositoryV1SavePostParamsWithTimeout(timeout time.Duration) *SalesInvoiceCommentRepositoryV1SavePostParams {
	var ()
	return &SalesInvoiceCommentRepositoryV1SavePostParams{

		timeout: timeout,
	}
}

// NewSalesInvoiceCommentRepositoryV1SavePostParamsWithContext creates a new SalesInvoiceCommentRepositoryV1SavePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewSalesInvoiceCommentRepositoryV1SavePostParamsWithContext(ctx context.Context) *SalesInvoiceCommentRepositoryV1SavePostParams {
	var ()
	return &SalesInvoiceCommentRepositoryV1SavePostParams{

		Context: ctx,
	}
}

// NewSalesInvoiceCommentRepositoryV1SavePostParamsWithHTTPClient creates a new SalesInvoiceCommentRepositoryV1SavePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSalesInvoiceCommentRepositoryV1SavePostParamsWithHTTPClient(client *http.Client) *SalesInvoiceCommentRepositoryV1SavePostParams {
	var ()
	return &SalesInvoiceCommentRepositoryV1SavePostParams{
		HTTPClient: client,
	}
}

/*SalesInvoiceCommentRepositoryV1SavePostParams contains all the parameters to send to the API endpoint
for the sales invoice comment repository v1 save post operation typically these are written to a http.Request
*/
type SalesInvoiceCommentRepositoryV1SavePostParams struct {

	/*SalesInvoiceCommentRepositoryV1SavePostBody*/
	SalesInvoiceCommentRepositoryV1SavePostBody SalesInvoiceCommentRepositoryV1SavePostBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) WithTimeout(timeout time.Duration) *SalesInvoiceCommentRepositoryV1SavePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) WithContext(ctx context.Context) *SalesInvoiceCommentRepositoryV1SavePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) WithHTTPClient(client *http.Client) *SalesInvoiceCommentRepositoryV1SavePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSalesInvoiceCommentRepositoryV1SavePostBody adds the salesInvoiceCommentRepositoryV1SavePostBody to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) WithSalesInvoiceCommentRepositoryV1SavePostBody(salesInvoiceCommentRepositoryV1SavePostBody SalesInvoiceCommentRepositoryV1SavePostBody) *SalesInvoiceCommentRepositoryV1SavePostParams {
	o.SetSalesInvoiceCommentRepositoryV1SavePostBody(salesInvoiceCommentRepositoryV1SavePostBody)
	return o
}

// SetSalesInvoiceCommentRepositoryV1SavePostBody adds the salesInvoiceCommentRepositoryV1SavePostBody to the sales invoice comment repository v1 save post params
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) SetSalesInvoiceCommentRepositoryV1SavePostBody(salesInvoiceCommentRepositoryV1SavePostBody SalesInvoiceCommentRepositoryV1SavePostBody) {
	o.SalesInvoiceCommentRepositoryV1SavePostBody = salesInvoiceCommentRepositoryV1SavePostBody
}

// WriteToRequest writes these params to a swagger request
func (o *SalesInvoiceCommentRepositoryV1SavePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.SalesInvoiceCommentRepositoryV1SavePostBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
