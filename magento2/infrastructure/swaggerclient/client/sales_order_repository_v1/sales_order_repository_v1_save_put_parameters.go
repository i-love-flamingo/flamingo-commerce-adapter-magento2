// Code generated by go-swagger; DO NOT EDIT.

package sales_order_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSalesOrderRepositoryV1SavePutParams creates a new SalesOrderRepositoryV1SavePutParams object
// with the default values initialized.
func NewSalesOrderRepositoryV1SavePutParams() *SalesOrderRepositoryV1SavePutParams {
	var ()
	return &SalesOrderRepositoryV1SavePutParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSalesOrderRepositoryV1SavePutParamsWithTimeout creates a new SalesOrderRepositoryV1SavePutParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSalesOrderRepositoryV1SavePutParamsWithTimeout(timeout time.Duration) *SalesOrderRepositoryV1SavePutParams {
	var ()
	return &SalesOrderRepositoryV1SavePutParams{

		timeout: timeout,
	}
}

// NewSalesOrderRepositoryV1SavePutParamsWithContext creates a new SalesOrderRepositoryV1SavePutParams object
// with the default values initialized, and the ability to set a context for a request
func NewSalesOrderRepositoryV1SavePutParamsWithContext(ctx context.Context) *SalesOrderRepositoryV1SavePutParams {
	var ()
	return &SalesOrderRepositoryV1SavePutParams{

		Context: ctx,
	}
}

// NewSalesOrderRepositoryV1SavePutParamsWithHTTPClient creates a new SalesOrderRepositoryV1SavePutParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSalesOrderRepositoryV1SavePutParamsWithHTTPClient(client *http.Client) *SalesOrderRepositoryV1SavePutParams {
	var ()
	return &SalesOrderRepositoryV1SavePutParams{
		HTTPClient: client,
	}
}

/*SalesOrderRepositoryV1SavePutParams contains all the parameters to send to the API endpoint
for the sales order repository v1 save put operation typically these are written to a http.Request
*/
type SalesOrderRepositoryV1SavePutParams struct {

	/*SalesOrderRepositoryV1SavePutBody*/
	SalesOrderRepositoryV1SavePutBody SalesOrderRepositoryV1SavePutBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) WithTimeout(timeout time.Duration) *SalesOrderRepositoryV1SavePutParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) WithContext(ctx context.Context) *SalesOrderRepositoryV1SavePutParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) WithHTTPClient(client *http.Client) *SalesOrderRepositoryV1SavePutParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSalesOrderRepositoryV1SavePutBody adds the salesOrderRepositoryV1SavePutBody to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) WithSalesOrderRepositoryV1SavePutBody(salesOrderRepositoryV1SavePutBody SalesOrderRepositoryV1SavePutBody) *SalesOrderRepositoryV1SavePutParams {
	o.SetSalesOrderRepositoryV1SavePutBody(salesOrderRepositoryV1SavePutBody)
	return o
}

// SetSalesOrderRepositoryV1SavePutBody adds the salesOrderRepositoryV1SavePutBody to the sales order repository v1 save put params
func (o *SalesOrderRepositoryV1SavePutParams) SetSalesOrderRepositoryV1SavePutBody(salesOrderRepositoryV1SavePutBody SalesOrderRepositoryV1SavePutBody) {
	o.SalesOrderRepositoryV1SavePutBody = salesOrderRepositoryV1SavePutBody
}

// WriteToRequest writes these params to a swagger request
func (o *SalesOrderRepositoryV1SavePutParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.SalesOrderRepositoryV1SavePutBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
