// Code generated by go-swagger; DO NOT EDIT.

package catalog_special_price_storage_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CatalogSpecialPriceStorageV1UpdatePostReader is a Reader for the CatalogSpecialPriceStorageV1UpdatePost structure.
type CatalogSpecialPriceStorageV1UpdatePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogSpecialPriceStorageV1UpdatePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogSpecialPriceStorageV1UpdatePostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCatalogSpecialPriceStorageV1UpdatePostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCatalogSpecialPriceStorageV1UpdatePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCatalogSpecialPriceStorageV1UpdatePostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogSpecialPriceStorageV1UpdatePostOK creates a CatalogSpecialPriceStorageV1UpdatePostOK with default headers values
func NewCatalogSpecialPriceStorageV1UpdatePostOK() *CatalogSpecialPriceStorageV1UpdatePostOK {
	return &CatalogSpecialPriceStorageV1UpdatePostOK{}
}

/*CatalogSpecialPriceStorageV1UpdatePostOK handles this case with default header values.

200 Success.
*/
type CatalogSpecialPriceStorageV1UpdatePostOK struct {
	Payload []*models.CatalogDataPriceUpdateResultInterface
}

func (o *CatalogSpecialPriceStorageV1UpdatePostOK) Error() string {
	return fmt.Sprintf("[POST /V1/products/special-price][%d] catalogSpecialPriceStorageV1UpdatePostOK  %+v", 200, o.Payload)
}

func (o *CatalogSpecialPriceStorageV1UpdatePostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogSpecialPriceStorageV1UpdatePostBadRequest creates a CatalogSpecialPriceStorageV1UpdatePostBadRequest with default headers values
func NewCatalogSpecialPriceStorageV1UpdatePostBadRequest() *CatalogSpecialPriceStorageV1UpdatePostBadRequest {
	return &CatalogSpecialPriceStorageV1UpdatePostBadRequest{}
}

/*CatalogSpecialPriceStorageV1UpdatePostBadRequest handles this case with default header values.

400 Bad Request
*/
type CatalogSpecialPriceStorageV1UpdatePostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CatalogSpecialPriceStorageV1UpdatePostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/products/special-price][%d] catalogSpecialPriceStorageV1UpdatePostBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogSpecialPriceStorageV1UpdatePostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogSpecialPriceStorageV1UpdatePostUnauthorized creates a CatalogSpecialPriceStorageV1UpdatePostUnauthorized with default headers values
func NewCatalogSpecialPriceStorageV1UpdatePostUnauthorized() *CatalogSpecialPriceStorageV1UpdatePostUnauthorized {
	return &CatalogSpecialPriceStorageV1UpdatePostUnauthorized{}
}

/*CatalogSpecialPriceStorageV1UpdatePostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CatalogSpecialPriceStorageV1UpdatePostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CatalogSpecialPriceStorageV1UpdatePostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/products/special-price][%d] catalogSpecialPriceStorageV1UpdatePostUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogSpecialPriceStorageV1UpdatePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogSpecialPriceStorageV1UpdatePostDefault creates a CatalogSpecialPriceStorageV1UpdatePostDefault with default headers values
func NewCatalogSpecialPriceStorageV1UpdatePostDefault(code int) *CatalogSpecialPriceStorageV1UpdatePostDefault {
	return &CatalogSpecialPriceStorageV1UpdatePostDefault{
		_statusCode: code,
	}
}

/*CatalogSpecialPriceStorageV1UpdatePostDefault handles this case with default header values.

Unexpected error
*/
type CatalogSpecialPriceStorageV1UpdatePostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalog special price storage v1 update post default response
func (o *CatalogSpecialPriceStorageV1UpdatePostDefault) Code() int {
	return o._statusCode
}

func (o *CatalogSpecialPriceStorageV1UpdatePostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/products/special-price][%d] catalogSpecialPriceStorageV1UpdatePost default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogSpecialPriceStorageV1UpdatePostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CatalogSpecialPriceStorageV1UpdatePostBody catalog special price storage v1 update post body
swagger:model CatalogSpecialPriceStorageV1UpdatePostBody
*/
type CatalogSpecialPriceStorageV1UpdatePostBody struct {

	// prices
	// Required: true
	Prices []*models.CatalogDataSpecialPriceInterface `json:"prices"`
}

// Validate validates this catalog special price storage v1 update post body
func (o *CatalogSpecialPriceStorageV1UpdatePostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePrices(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogSpecialPriceStorageV1UpdatePostBody) validatePrices(formats strfmt.Registry) error {

	if err := validate.Required("catalogSpecialPriceStorageV1UpdatePostBody"+"."+"prices", "body", o.Prices); err != nil {
		return err
	}

	for i := 0; i < len(o.Prices); i++ {
		if swag.IsZero(o.Prices[i]) { // not required
			continue
		}

		if o.Prices[i] != nil {
			if err := o.Prices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("catalogSpecialPriceStorageV1UpdatePostBody" + "." + "prices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *CatalogSpecialPriceStorageV1UpdatePostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogSpecialPriceStorageV1UpdatePostBody) UnmarshalBinary(b []byte) error {
	var res CatalogSpecialPriceStorageV1UpdatePostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
