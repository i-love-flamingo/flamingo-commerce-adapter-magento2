// Code generated by go-swagger; DO NOT EDIT.

package rma_rma_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRmaRmaRepositoryV1DeleteDeleteParams creates a new RmaRmaRepositoryV1DeleteDeleteParams object
// with the default values initialized.
func NewRmaRmaRepositoryV1DeleteDeleteParams() *RmaRmaRepositoryV1DeleteDeleteParams {
	var ()
	return &RmaRmaRepositoryV1DeleteDeleteParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRmaRmaRepositoryV1DeleteDeleteParamsWithTimeout creates a new RmaRmaRepositoryV1DeleteDeleteParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRmaRmaRepositoryV1DeleteDeleteParamsWithTimeout(timeout time.Duration) *RmaRmaRepositoryV1DeleteDeleteParams {
	var ()
	return &RmaRmaRepositoryV1DeleteDeleteParams{

		timeout: timeout,
	}
}

// NewRmaRmaRepositoryV1DeleteDeleteParamsWithContext creates a new RmaRmaRepositoryV1DeleteDeleteParams object
// with the default values initialized, and the ability to set a context for a request
func NewRmaRmaRepositoryV1DeleteDeleteParamsWithContext(ctx context.Context) *RmaRmaRepositoryV1DeleteDeleteParams {
	var ()
	return &RmaRmaRepositoryV1DeleteDeleteParams{

		Context: ctx,
	}
}

// NewRmaRmaRepositoryV1DeleteDeleteParamsWithHTTPClient creates a new RmaRmaRepositoryV1DeleteDeleteParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRmaRmaRepositoryV1DeleteDeleteParamsWithHTTPClient(client *http.Client) *RmaRmaRepositoryV1DeleteDeleteParams {
	var ()
	return &RmaRmaRepositoryV1DeleteDeleteParams{
		HTTPClient: client,
	}
}

/*RmaRmaRepositoryV1DeleteDeleteParams contains all the parameters to send to the API endpoint
for the rma rma repository v1 delete delete operation typically these are written to a http.Request
*/
type RmaRmaRepositoryV1DeleteDeleteParams struct {

	/*ID*/
	ID string
	/*RmaRmaRepositoryV1DeleteDeleteBody*/
	RmaRmaRepositoryV1DeleteDeleteBody RmaRmaRepositoryV1DeleteDeleteBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) WithTimeout(timeout time.Duration) *RmaRmaRepositoryV1DeleteDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) WithContext(ctx context.Context) *RmaRmaRepositoryV1DeleteDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) WithHTTPClient(client *http.Client) *RmaRmaRepositoryV1DeleteDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) WithID(id string) *RmaRmaRepositoryV1DeleteDeleteParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) SetID(id string) {
	o.ID = id
}

// WithRmaRmaRepositoryV1DeleteDeleteBody adds the rmaRmaRepositoryV1DeleteDeleteBody to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) WithRmaRmaRepositoryV1DeleteDeleteBody(rmaRmaRepositoryV1DeleteDeleteBody RmaRmaRepositoryV1DeleteDeleteBody) *RmaRmaRepositoryV1DeleteDeleteParams {
	o.SetRmaRmaRepositoryV1DeleteDeleteBody(rmaRmaRepositoryV1DeleteDeleteBody)
	return o
}

// SetRmaRmaRepositoryV1DeleteDeleteBody adds the rmaRmaRepositoryV1DeleteDeleteBody to the rma rma repository v1 delete delete params
func (o *RmaRmaRepositoryV1DeleteDeleteParams) SetRmaRmaRepositoryV1DeleteDeleteBody(rmaRmaRepositoryV1DeleteDeleteBody RmaRmaRepositoryV1DeleteDeleteBody) {
	o.RmaRmaRepositoryV1DeleteDeleteBody = rmaRmaRepositoryV1DeleteDeleteBody
}

// WriteToRequest writes these params to a swagger request
func (o *RmaRmaRepositoryV1DeleteDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.RmaRmaRepositoryV1DeleteDeleteBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
