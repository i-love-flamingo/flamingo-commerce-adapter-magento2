// Code generated by go-swagger; DO NOT EDIT.

package negotiable_quote_negotiable_quote_shipping_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutReader is a Reader for the NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPut structure.
type NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK creates a NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK with default headers values
func NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK() *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK {
	return &NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK{}
}

/*NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK handles this case with default header values.

200 Success.
*/
type NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK struct {
	Payload bool
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK) Error() string {
	return fmt.Sprintf("[PUT /V1/negotiableQuote/{quoteId}/shippingMethod][%d] negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK  %+v", 200, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest creates a NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest with default headers values
func NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest() *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest {
	return &NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest{}
}

/*NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest handles this case with default header values.

400 Bad Request
*/
type NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /V1/negotiableQuote/{quoteId}/shippingMethod][%d] negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest  %+v", 400, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized creates a NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized with default headers values
func NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized() *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized {
	return &NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized{}
}

/*NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized handles this case with default header values.

401 Unauthorized
*/
type NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /V1/negotiableQuote/{quoteId}/shippingMethod][%d] negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized  %+v", 401, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault creates a NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault with default headers values
func NewNegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault(code int) *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault {
	return &NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault{
		_statusCode: code,
	}
}

/*NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault handles this case with default header values.

Unexpected error
*/
type NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the negotiable quote negotiable quote shipping management v1 set shipping method put default response
func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault) Code() int {
	return o._statusCode
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault) Error() string {
	return fmt.Sprintf("[PUT /V1/negotiableQuote/{quoteId}/shippingMethod][%d] negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPut default  %+v", o._statusCode, o.Payload)
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody negotiable quote negotiable quote shipping management v1 set shipping method put body
swagger:model NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody
*/
type NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody struct {

	// The shipping method code.
	// Required: true
	ShippingMethod *string `json:"shippingMethod"`
}

// Validate validates this negotiable quote negotiable quote shipping management v1 set shipping method put body
func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateShippingMethod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody) validateShippingMethod(formats strfmt.Registry) error {

	if err := validate.Required("negotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody"+"."+"shippingMethod", "body", o.ShippingMethod); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody) UnmarshalBinary(b []byte) error {
	var res NegotiableQuoteNegotiableQuoteShippingManagementV1SetShippingMethodPutBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
