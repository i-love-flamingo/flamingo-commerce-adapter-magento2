// Code generated by go-swagger; DO NOT EDIT.

package quote_payment_method_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// QuotePaymentMethodManagementV1GetGetReader is a Reader for the QuotePaymentMethodManagementV1GetGet structure.
type QuotePaymentMethodManagementV1GetGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuotePaymentMethodManagementV1GetGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewQuotePaymentMethodManagementV1GetGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewQuotePaymentMethodManagementV1GetGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewQuotePaymentMethodManagementV1GetGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewQuotePaymentMethodManagementV1GetGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQuotePaymentMethodManagementV1GetGetOK creates a QuotePaymentMethodManagementV1GetGetOK with default headers values
func NewQuotePaymentMethodManagementV1GetGetOK() *QuotePaymentMethodManagementV1GetGetOK {
	return &QuotePaymentMethodManagementV1GetGetOK{}
}

/*QuotePaymentMethodManagementV1GetGetOK handles this case with default header values.

200 Success.
*/
type QuotePaymentMethodManagementV1GetGetOK struct {
	Payload *models.QuoteDataPaymentInterface
}

func (o *QuotePaymentMethodManagementV1GetGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/carts/{cartId}/selected-payment-method][%d] quotePaymentMethodManagementV1GetGetOK  %+v", 200, o.Payload)
}

func (o *QuotePaymentMethodManagementV1GetGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.QuoteDataPaymentInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuotePaymentMethodManagementV1GetGetBadRequest creates a QuotePaymentMethodManagementV1GetGetBadRequest with default headers values
func NewQuotePaymentMethodManagementV1GetGetBadRequest() *QuotePaymentMethodManagementV1GetGetBadRequest {
	return &QuotePaymentMethodManagementV1GetGetBadRequest{}
}

/*QuotePaymentMethodManagementV1GetGetBadRequest handles this case with default header values.

400 Bad Request
*/
type QuotePaymentMethodManagementV1GetGetBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *QuotePaymentMethodManagementV1GetGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /V1/carts/{cartId}/selected-payment-method][%d] quotePaymentMethodManagementV1GetGetBadRequest  %+v", 400, o.Payload)
}

func (o *QuotePaymentMethodManagementV1GetGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuotePaymentMethodManagementV1GetGetUnauthorized creates a QuotePaymentMethodManagementV1GetGetUnauthorized with default headers values
func NewQuotePaymentMethodManagementV1GetGetUnauthorized() *QuotePaymentMethodManagementV1GetGetUnauthorized {
	return &QuotePaymentMethodManagementV1GetGetUnauthorized{}
}

/*QuotePaymentMethodManagementV1GetGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type QuotePaymentMethodManagementV1GetGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *QuotePaymentMethodManagementV1GetGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/carts/{cartId}/selected-payment-method][%d] quotePaymentMethodManagementV1GetGetUnauthorized  %+v", 401, o.Payload)
}

func (o *QuotePaymentMethodManagementV1GetGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuotePaymentMethodManagementV1GetGetDefault creates a QuotePaymentMethodManagementV1GetGetDefault with default headers values
func NewQuotePaymentMethodManagementV1GetGetDefault(code int) *QuotePaymentMethodManagementV1GetGetDefault {
	return &QuotePaymentMethodManagementV1GetGetDefault{
		_statusCode: code,
	}
}

/*QuotePaymentMethodManagementV1GetGetDefault handles this case with default header values.

Unexpected error
*/
type QuotePaymentMethodManagementV1GetGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the quote payment method management v1 get get default response
func (o *QuotePaymentMethodManagementV1GetGetDefault) Code() int {
	return o._statusCode
}

func (o *QuotePaymentMethodManagementV1GetGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/carts/{cartId}/selected-payment-method][%d] quotePaymentMethodManagementV1GetGet default  %+v", o._statusCode, o.Payload)
}

func (o *QuotePaymentMethodManagementV1GetGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
