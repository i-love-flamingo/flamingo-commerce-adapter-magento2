// Code generated by go-swagger; DO NOT EDIT.

package gift_message_cart_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new gift message cart repository v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for gift message cart repository v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GiftMessageCartRepositoryV1GetGet Return the gift message for a specified order.
*/
func (a *Client) GiftMessageCartRepositoryV1GetGet(params *GiftMessageCartRepositoryV1GetGetParams) (*GiftMessageCartRepositoryV1GetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGiftMessageCartRepositoryV1GetGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "giftMessageCartRepositoryV1GetGet",
		Method:             "GET",
		PathPattern:        "/V1/carts/{cartId}/gift-message",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GiftMessageCartRepositoryV1GetGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GiftMessageCartRepositoryV1GetGetOK), nil

}

/*
GiftMessageCartRepositoryV1GetGetMine Return the gift message for a specified order.
*/
func (a *Client) GiftMessageCartRepositoryV1GetGetMine(params *GiftMessageCartRepositoryV1GetGetMineParams) (*GiftMessageCartRepositoryV1GetGetMineOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGiftMessageCartRepositoryV1GetGetMineParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "giftMessageCartRepositoryV1GetGetMine",
		Method:             "GET",
		PathPattern:        "/V1/carts/mine/gift-message",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GiftMessageCartRepositoryV1GetGetMineReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GiftMessageCartRepositoryV1GetGetMineOK), nil

}

/*
GiftMessageCartRepositoryV1SavePost Set the gift message for an entire order.
*/
func (a *Client) GiftMessageCartRepositoryV1SavePost(params *GiftMessageCartRepositoryV1SavePostParams) (*GiftMessageCartRepositoryV1SavePostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGiftMessageCartRepositoryV1SavePostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "giftMessageCartRepositoryV1SavePost",
		Method:             "POST",
		PathPattern:        "/V1/carts/{cartId}/gift-message",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GiftMessageCartRepositoryV1SavePostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GiftMessageCartRepositoryV1SavePostOK), nil

}

/*
GiftMessageCartRepositoryV1SavePostMine Set the gift message for an entire order.
*/
func (a *Client) GiftMessageCartRepositoryV1SavePostMine(params *GiftMessageCartRepositoryV1SavePostMineParams) (*GiftMessageCartRepositoryV1SavePostMineOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGiftMessageCartRepositoryV1SavePostMineParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "giftMessageCartRepositoryV1SavePostMine",
		Method:             "POST",
		PathPattern:        "/V1/carts/mine/gift-message",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GiftMessageCartRepositoryV1SavePostMineReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GiftMessageCartRepositoryV1SavePostMineOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
