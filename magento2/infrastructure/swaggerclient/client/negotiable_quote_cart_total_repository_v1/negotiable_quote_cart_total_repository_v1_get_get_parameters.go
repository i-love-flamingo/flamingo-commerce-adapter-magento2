// Code generated by go-swagger; DO NOT EDIT.

package negotiable_quote_cart_total_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewNegotiableQuoteCartTotalRepositoryV1GetGetParams creates a new NegotiableQuoteCartTotalRepositoryV1GetGetParams object
// with the default values initialized.
func NewNegotiableQuoteCartTotalRepositoryV1GetGetParams() *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	var ()
	return &NegotiableQuoteCartTotalRepositoryV1GetGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewNegotiableQuoteCartTotalRepositoryV1GetGetParamsWithTimeout creates a new NegotiableQuoteCartTotalRepositoryV1GetGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewNegotiableQuoteCartTotalRepositoryV1GetGetParamsWithTimeout(timeout time.Duration) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	var ()
	return &NegotiableQuoteCartTotalRepositoryV1GetGetParams{

		timeout: timeout,
	}
}

// NewNegotiableQuoteCartTotalRepositoryV1GetGetParamsWithContext creates a new NegotiableQuoteCartTotalRepositoryV1GetGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewNegotiableQuoteCartTotalRepositoryV1GetGetParamsWithContext(ctx context.Context) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	var ()
	return &NegotiableQuoteCartTotalRepositoryV1GetGetParams{

		Context: ctx,
	}
}

// NewNegotiableQuoteCartTotalRepositoryV1GetGetParamsWithHTTPClient creates a new NegotiableQuoteCartTotalRepositoryV1GetGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewNegotiableQuoteCartTotalRepositoryV1GetGetParamsWithHTTPClient(client *http.Client) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	var ()
	return &NegotiableQuoteCartTotalRepositoryV1GetGetParams{
		HTTPClient: client,
	}
}

/*NegotiableQuoteCartTotalRepositoryV1GetGetParams contains all the parameters to send to the API endpoint
for the negotiable quote cart total repository v1 get get operation typically these are written to a http.Request
*/
type NegotiableQuoteCartTotalRepositoryV1GetGetParams struct {

	/*CartID
	  The cart ID.

	*/
	CartID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) WithTimeout(timeout time.Duration) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) WithContext(ctx context.Context) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) WithHTTPClient(client *http.Client) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCartID adds the cartID to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) WithCartID(cartID int64) *NegotiableQuoteCartTotalRepositoryV1GetGetParams {
	o.SetCartID(cartID)
	return o
}

// SetCartID adds the cartId to the negotiable quote cart total repository v1 get get params
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) SetCartID(cartID int64) {
	o.CartID = cartID
}

// WriteToRequest writes these params to a swagger request
func (o *NegotiableQuoteCartTotalRepositoryV1GetGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cartId
	if err := r.SetPathParam("cartId", swag.FormatInt64(o.CartID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
