// Code generated by go-swagger; DO NOT EDIT.

package customer_customer_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCustomerCustomerRepositoryV1GetByIDGetMineParams creates a new CustomerCustomerRepositoryV1GetByIDGetMineParams object
// with the default values initialized.
func NewCustomerCustomerRepositoryV1GetByIDGetMineParams() *CustomerCustomerRepositoryV1GetByIDGetMineParams {

	return &CustomerCustomerRepositoryV1GetByIDGetMineParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerCustomerRepositoryV1GetByIDGetMineParamsWithTimeout creates a new CustomerCustomerRepositoryV1GetByIDGetMineParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCustomerCustomerRepositoryV1GetByIDGetMineParamsWithTimeout(timeout time.Duration) *CustomerCustomerRepositoryV1GetByIDGetMineParams {

	return &CustomerCustomerRepositoryV1GetByIDGetMineParams{

		timeout: timeout,
	}
}

// NewCustomerCustomerRepositoryV1GetByIDGetMineParamsWithContext creates a new CustomerCustomerRepositoryV1GetByIDGetMineParams object
// with the default values initialized, and the ability to set a context for a request
func NewCustomerCustomerRepositoryV1GetByIDGetMineParamsWithContext(ctx context.Context) *CustomerCustomerRepositoryV1GetByIDGetMineParams {

	return &CustomerCustomerRepositoryV1GetByIDGetMineParams{

		Context: ctx,
	}
}

// NewCustomerCustomerRepositoryV1GetByIDGetMineParamsWithHTTPClient creates a new CustomerCustomerRepositoryV1GetByIDGetMineParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCustomerCustomerRepositoryV1GetByIDGetMineParamsWithHTTPClient(client *http.Client) *CustomerCustomerRepositoryV1GetByIDGetMineParams {

	return &CustomerCustomerRepositoryV1GetByIDGetMineParams{
		HTTPClient: client,
	}
}

/*CustomerCustomerRepositoryV1GetByIDGetMineParams contains all the parameters to send to the API endpoint
for the customer customer repository v1 get by Id get mine operation typically these are written to a http.Request
*/
type CustomerCustomerRepositoryV1GetByIDGetMineParams struct {
	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the customer customer repository v1 get by Id get mine params
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) WithTimeout(timeout time.Duration) *CustomerCustomerRepositoryV1GetByIDGetMineParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer customer repository v1 get by Id get mine params
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer customer repository v1 get by Id get mine params
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) WithContext(ctx context.Context) *CustomerCustomerRepositoryV1GetByIDGetMineParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer customer repository v1 get by Id get mine params
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer customer repository v1 get by Id get mine params
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) WithHTTPClient(client *http.Client) *CustomerCustomerRepositoryV1GetByIDGetMineParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer customer repository v1 get by Id get mine params
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerCustomerRepositoryV1GetByIDGetMineParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
