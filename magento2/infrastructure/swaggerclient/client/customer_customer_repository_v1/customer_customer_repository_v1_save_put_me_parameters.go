// Code generated by go-swagger; DO NOT EDIT.

package customer_customer_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewCustomerCustomerRepositoryV1SavePutMeParams creates a new CustomerCustomerRepositoryV1SavePutMeParams object
// with the default values initialized.
func NewCustomerCustomerRepositoryV1SavePutMeParams() *CustomerCustomerRepositoryV1SavePutMeParams {
	var ()
	return &CustomerCustomerRepositoryV1SavePutMeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCustomerCustomerRepositoryV1SavePutMeParamsWithTimeout creates a new CustomerCustomerRepositoryV1SavePutMeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCustomerCustomerRepositoryV1SavePutMeParamsWithTimeout(timeout time.Duration) *CustomerCustomerRepositoryV1SavePutMeParams {
	var ()
	return &CustomerCustomerRepositoryV1SavePutMeParams{

		timeout: timeout,
	}
}

// NewCustomerCustomerRepositoryV1SavePutMeParamsWithContext creates a new CustomerCustomerRepositoryV1SavePutMeParams object
// with the default values initialized, and the ability to set a context for a request
func NewCustomerCustomerRepositoryV1SavePutMeParamsWithContext(ctx context.Context) *CustomerCustomerRepositoryV1SavePutMeParams {
	var ()
	return &CustomerCustomerRepositoryV1SavePutMeParams{

		Context: ctx,
	}
}

// NewCustomerCustomerRepositoryV1SavePutMeParamsWithHTTPClient creates a new CustomerCustomerRepositoryV1SavePutMeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCustomerCustomerRepositoryV1SavePutMeParamsWithHTTPClient(client *http.Client) *CustomerCustomerRepositoryV1SavePutMeParams {
	var ()
	return &CustomerCustomerRepositoryV1SavePutMeParams{
		HTTPClient: client,
	}
}

/*CustomerCustomerRepositoryV1SavePutMeParams contains all the parameters to send to the API endpoint
for the customer customer repository v1 save put me operation typically these are written to a http.Request
*/
type CustomerCustomerRepositoryV1SavePutMeParams struct {

	/*CustomerCustomerRepositoryV1SavePutBody*/
	CustomerCustomerRepositoryV1SavePutBody CustomerCustomerRepositoryV1SavePutMeBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) WithTimeout(timeout time.Duration) *CustomerCustomerRepositoryV1SavePutMeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) WithContext(ctx context.Context) *CustomerCustomerRepositoryV1SavePutMeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) WithHTTPClient(client *http.Client) *CustomerCustomerRepositoryV1SavePutMeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCustomerCustomerRepositoryV1SavePutBody adds the customerCustomerRepositoryV1SavePutBody to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) WithCustomerCustomerRepositoryV1SavePutBody(customerCustomerRepositoryV1SavePutBody CustomerCustomerRepositoryV1SavePutMeBody) *CustomerCustomerRepositoryV1SavePutMeParams {
	o.SetCustomerCustomerRepositoryV1SavePutBody(customerCustomerRepositoryV1SavePutBody)
	return o
}

// SetCustomerCustomerRepositoryV1SavePutBody adds the customerCustomerRepositoryV1SavePutBody to the customer customer repository v1 save put me params
func (o *CustomerCustomerRepositoryV1SavePutMeParams) SetCustomerCustomerRepositoryV1SavePutBody(customerCustomerRepositoryV1SavePutBody CustomerCustomerRepositoryV1SavePutMeBody) {
	o.CustomerCustomerRepositoryV1SavePutBody = customerCustomerRepositoryV1SavePutBody
}

// WriteToRequest writes these params to a swagger request
func (o *CustomerCustomerRepositoryV1SavePutMeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.CustomerCustomerRepositoryV1SavePutBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
