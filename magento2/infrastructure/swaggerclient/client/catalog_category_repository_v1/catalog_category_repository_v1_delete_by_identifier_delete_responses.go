// Code generated by go-swagger; DO NOT EDIT.

package catalog_category_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CatalogCategoryRepositoryV1DeleteByIdentifierDeleteReader is a Reader for the CatalogCategoryRepositoryV1DeleteByIdentifierDelete structure.
type CatalogCategoryRepositoryV1DeleteByIdentifierDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK creates a CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK with default headers values
func NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK() *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK {
	return &CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK{}
}

/*CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK handles this case with default header values.

200 Success.
*/
type CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK struct {
	Payload bool
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /V1/categories/{categoryId}][%d] catalogCategoryRepositoryV1DeleteByIdentifierDeleteOK  %+v", 200, o.Payload)
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest creates a CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest with default headers values
func NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest() *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest {
	return &CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest{}
}

/*CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest handles this case with default header values.

400 Bad Request
*/
type CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /V1/categories/{categoryId}][%d] catalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized creates a CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized with default headers values
func NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized() *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized {
	return &CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized{}
}

/*CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /V1/categories/{categoryId}][%d] catalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault creates a CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault with default headers values
func NewCatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault(code int) *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault {
	return &CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault{
		_statusCode: code,
	}
}

/*CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault handles this case with default header values.

Unexpected error
*/
type CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalog category repository v1 delete by identifier delete default response
func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault) Code() int {
	return o._statusCode
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /V1/categories/{categoryId}][%d] catalogCategoryRepositoryV1DeleteByIdentifierDelete default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogCategoryRepositoryV1DeleteByIdentifierDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
