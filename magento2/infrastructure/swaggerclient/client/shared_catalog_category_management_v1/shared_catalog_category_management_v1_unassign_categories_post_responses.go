// Code generated by go-swagger; DO NOT EDIT.

package shared_catalog_category_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SharedCatalogCategoryManagementV1UnassignCategoriesPostReader is a Reader for the SharedCatalogCategoryManagementV1UnassignCategoriesPost structure.
type SharedCatalogCategoryManagementV1UnassignCategoriesPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSharedCatalogCategoryManagementV1UnassignCategoriesPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSharedCatalogCategoryManagementV1UnassignCategoriesPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSharedCatalogCategoryManagementV1UnassignCategoriesPostOK creates a SharedCatalogCategoryManagementV1UnassignCategoriesPostOK with default headers values
func NewSharedCatalogCategoryManagementV1UnassignCategoriesPostOK() *SharedCatalogCategoryManagementV1UnassignCategoriesPostOK {
	return &SharedCatalogCategoryManagementV1UnassignCategoriesPostOK{}
}

/*SharedCatalogCategoryManagementV1UnassignCategoriesPostOK handles this case with default header values.

200 Success.
*/
type SharedCatalogCategoryManagementV1UnassignCategoriesPostOK struct {
	Payload bool
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/unassignCategories][%d] sharedCatalogCategoryManagementV1UnassignCategoriesPostOK  %+v", 200, o.Payload)
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest creates a SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest with default headers values
func NewSharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest() *SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest {
	return &SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest{}
}

/*SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest handles this case with default header values.

400 Bad Request
*/
type SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/unassignCategories][%d] sharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest  %+v", 400, o.Payload)
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized creates a SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized with default headers values
func NewSharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized() *SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized {
	return &SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized{}
}

/*SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/unassignCategories][%d] sharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSharedCatalogCategoryManagementV1UnassignCategoriesPostDefault creates a SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault with default headers values
func NewSharedCatalogCategoryManagementV1UnassignCategoriesPostDefault(code int) *SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault {
	return &SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault{
		_statusCode: code,
	}
}

/*SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault handles this case with default header values.

Unexpected error
*/
type SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the shared catalog category management v1 unassign categories post default response
func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault) Code() int {
	return o._statusCode
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/sharedCatalog/{id}/unassignCategories][%d] sharedCatalogCategoryManagementV1UnassignCategoriesPost default  %+v", o._statusCode, o.Payload)
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SharedCatalogCategoryManagementV1UnassignCategoriesPostBody shared catalog category management v1 unassign categories post body
swagger:model SharedCatalogCategoryManagementV1UnassignCategoriesPostBody
*/
type SharedCatalogCategoryManagementV1UnassignCategoriesPostBody struct {

	// categories
	// Required: true
	Categories []*models.CatalogDataCategoryInterface `json:"categories"`
}

// Validate validates this shared catalog category management v1 unassign categories post body
func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCategories(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostBody) validateCategories(formats strfmt.Registry) error {

	if err := validate.Required("sharedCatalogCategoryManagementV1UnassignCategoriesPostBody"+"."+"categories", "body", o.Categories); err != nil {
		return err
	}

	for i := 0; i < len(o.Categories); i++ {
		if swag.IsZero(o.Categories[i]) { // not required
			continue
		}

		if o.Categories[i] != nil {
			if err := o.Categories[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sharedCatalogCategoryManagementV1UnassignCategoriesPostBody" + "." + "categories" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SharedCatalogCategoryManagementV1UnassignCategoriesPostBody) UnmarshalBinary(b []byte) error {
	var res SharedCatalogCategoryManagementV1UnassignCategoriesPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
