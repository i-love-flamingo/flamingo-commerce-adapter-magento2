// Code generated by go-swagger; DO NOT EDIT.

package gift_message_item_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// GiftMessageItemRepositoryV1GetGetMineReader is a Reader for the GiftMessageItemRepositoryV1GetGetMine structure.
type GiftMessageItemRepositoryV1GetGetMineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GiftMessageItemRepositoryV1GetGetMineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGiftMessageItemRepositoryV1GetGetMineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGiftMessageItemRepositoryV1GetGetMineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGiftMessageItemRepositoryV1GetGetMineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGiftMessageItemRepositoryV1GetGetMineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGiftMessageItemRepositoryV1GetGetMineOK creates a GiftMessageItemRepositoryV1GetGetMineOK with default headers values
func NewGiftMessageItemRepositoryV1GetGetMineOK() *GiftMessageItemRepositoryV1GetGetMineOK {
	return &GiftMessageItemRepositoryV1GetGetMineOK{}
}

/*GiftMessageItemRepositoryV1GetGetMineOK handles this case with default header values.

200 Success.
*/
type GiftMessageItemRepositoryV1GetGetMineOK struct {
	Payload *models.GiftMessageDataMessageInterface
}

func (o *GiftMessageItemRepositoryV1GetGetMineOK) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/gift-message/{itemId}][%d] giftMessageItemRepositoryV1GetGetMineOK  %+v", 200, o.Payload)
}

func (o *GiftMessageItemRepositoryV1GetGetMineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GiftMessageDataMessageInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGiftMessageItemRepositoryV1GetGetMineBadRequest creates a GiftMessageItemRepositoryV1GetGetMineBadRequest with default headers values
func NewGiftMessageItemRepositoryV1GetGetMineBadRequest() *GiftMessageItemRepositoryV1GetGetMineBadRequest {
	return &GiftMessageItemRepositoryV1GetGetMineBadRequest{}
}

/*GiftMessageItemRepositoryV1GetGetMineBadRequest handles this case with default header values.

400 Bad Request
*/
type GiftMessageItemRepositoryV1GetGetMineBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GiftMessageItemRepositoryV1GetGetMineBadRequest) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/gift-message/{itemId}][%d] giftMessageItemRepositoryV1GetGetMineBadRequest  %+v", 400, o.Payload)
}

func (o *GiftMessageItemRepositoryV1GetGetMineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGiftMessageItemRepositoryV1GetGetMineUnauthorized creates a GiftMessageItemRepositoryV1GetGetMineUnauthorized with default headers values
func NewGiftMessageItemRepositoryV1GetGetMineUnauthorized() *GiftMessageItemRepositoryV1GetGetMineUnauthorized {
	return &GiftMessageItemRepositoryV1GetGetMineUnauthorized{}
}

/*GiftMessageItemRepositoryV1GetGetMineUnauthorized handles this case with default header values.

401 Unauthorized
*/
type GiftMessageItemRepositoryV1GetGetMineUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GiftMessageItemRepositoryV1GetGetMineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/gift-message/{itemId}][%d] giftMessageItemRepositoryV1GetGetMineUnauthorized  %+v", 401, o.Payload)
}

func (o *GiftMessageItemRepositoryV1GetGetMineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGiftMessageItemRepositoryV1GetGetMineDefault creates a GiftMessageItemRepositoryV1GetGetMineDefault with default headers values
func NewGiftMessageItemRepositoryV1GetGetMineDefault(code int) *GiftMessageItemRepositoryV1GetGetMineDefault {
	return &GiftMessageItemRepositoryV1GetGetMineDefault{
		_statusCode: code,
	}
}

/*GiftMessageItemRepositoryV1GetGetMineDefault handles this case with default header values.

Unexpected error
*/
type GiftMessageItemRepositoryV1GetGetMineDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the gift message item repository v1 get get mine default response
func (o *GiftMessageItemRepositoryV1GetGetMineDefault) Code() int {
	return o._statusCode
}

func (o *GiftMessageItemRepositoryV1GetGetMineDefault) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/gift-message/{itemId}][%d] giftMessageItemRepositoryV1GetGetMine default  %+v", o._statusCode, o.Payload)
}

func (o *GiftMessageItemRepositoryV1GetGetMineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
