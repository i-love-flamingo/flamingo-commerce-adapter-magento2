// Code generated by go-swagger; DO NOT EDIT.

package gift_message_item_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGiftMessageItemRepositoryV1SavePostParams creates a new GiftMessageItemRepositoryV1SavePostParams object
// with the default values initialized.
func NewGiftMessageItemRepositoryV1SavePostParams() *GiftMessageItemRepositoryV1SavePostParams {
	var ()
	return &GiftMessageItemRepositoryV1SavePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGiftMessageItemRepositoryV1SavePostParamsWithTimeout creates a new GiftMessageItemRepositoryV1SavePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGiftMessageItemRepositoryV1SavePostParamsWithTimeout(timeout time.Duration) *GiftMessageItemRepositoryV1SavePostParams {
	var ()
	return &GiftMessageItemRepositoryV1SavePostParams{

		timeout: timeout,
	}
}

// NewGiftMessageItemRepositoryV1SavePostParamsWithContext creates a new GiftMessageItemRepositoryV1SavePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewGiftMessageItemRepositoryV1SavePostParamsWithContext(ctx context.Context) *GiftMessageItemRepositoryV1SavePostParams {
	var ()
	return &GiftMessageItemRepositoryV1SavePostParams{

		Context: ctx,
	}
}

// NewGiftMessageItemRepositoryV1SavePostParamsWithHTTPClient creates a new GiftMessageItemRepositoryV1SavePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGiftMessageItemRepositoryV1SavePostParamsWithHTTPClient(client *http.Client) *GiftMessageItemRepositoryV1SavePostParams {
	var ()
	return &GiftMessageItemRepositoryV1SavePostParams{
		HTTPClient: client,
	}
}

/*GiftMessageItemRepositoryV1SavePostParams contains all the parameters to send to the API endpoint
for the gift message item repository v1 save post operation typically these are written to a http.Request
*/
type GiftMessageItemRepositoryV1SavePostParams struct {

	/*CartID
	  The cart ID.

	*/
	CartID int64
	/*GiftMessageItemRepositoryV1SavePostBody*/
	GiftMessageItemRepositoryV1SavePostBody GiftMessageItemRepositoryV1SavePostBody
	/*ItemID
	  The item ID.

	*/
	ItemID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) WithTimeout(timeout time.Duration) *GiftMessageItemRepositoryV1SavePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) WithContext(ctx context.Context) *GiftMessageItemRepositoryV1SavePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) WithHTTPClient(client *http.Client) *GiftMessageItemRepositoryV1SavePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCartID adds the cartID to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) WithCartID(cartID int64) *GiftMessageItemRepositoryV1SavePostParams {
	o.SetCartID(cartID)
	return o
}

// SetCartID adds the cartId to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) SetCartID(cartID int64) {
	o.CartID = cartID
}

// WithGiftMessageItemRepositoryV1SavePostBody adds the giftMessageItemRepositoryV1SavePostBody to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) WithGiftMessageItemRepositoryV1SavePostBody(giftMessageItemRepositoryV1SavePostBody GiftMessageItemRepositoryV1SavePostBody) *GiftMessageItemRepositoryV1SavePostParams {
	o.SetGiftMessageItemRepositoryV1SavePostBody(giftMessageItemRepositoryV1SavePostBody)
	return o
}

// SetGiftMessageItemRepositoryV1SavePostBody adds the giftMessageItemRepositoryV1SavePostBody to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) SetGiftMessageItemRepositoryV1SavePostBody(giftMessageItemRepositoryV1SavePostBody GiftMessageItemRepositoryV1SavePostBody) {
	o.GiftMessageItemRepositoryV1SavePostBody = giftMessageItemRepositoryV1SavePostBody
}

// WithItemID adds the itemID to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) WithItemID(itemID int64) *GiftMessageItemRepositoryV1SavePostParams {
	o.SetItemID(itemID)
	return o
}

// SetItemID adds the itemId to the gift message item repository v1 save post params
func (o *GiftMessageItemRepositoryV1SavePostParams) SetItemID(itemID int64) {
	o.ItemID = itemID
}

// WriteToRequest writes these params to a swagger request
func (o *GiftMessageItemRepositoryV1SavePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cartId
	if err := r.SetPathParam("cartId", swag.FormatInt64(o.CartID)); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.GiftMessageItemRepositoryV1SavePostBody); err != nil {
		return err
	}

	// path param itemId
	if err := r.SetPathParam("itemId", swag.FormatInt64(o.ItemID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
