// Code generated by go-swagger; DO NOT EDIT.

package catalog_product_attribute_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CatalogProductAttributeManagementV1AssignPostReader is a Reader for the CatalogProductAttributeManagementV1AssignPost structure.
type CatalogProductAttributeManagementV1AssignPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogProductAttributeManagementV1AssignPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogProductAttributeManagementV1AssignPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCatalogProductAttributeManagementV1AssignPostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCatalogProductAttributeManagementV1AssignPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCatalogProductAttributeManagementV1AssignPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogProductAttributeManagementV1AssignPostOK creates a CatalogProductAttributeManagementV1AssignPostOK with default headers values
func NewCatalogProductAttributeManagementV1AssignPostOK() *CatalogProductAttributeManagementV1AssignPostOK {
	return &CatalogProductAttributeManagementV1AssignPostOK{}
}

/*CatalogProductAttributeManagementV1AssignPostOK handles this case with default header values.

200 Success.
*/
type CatalogProductAttributeManagementV1AssignPostOK struct {
	Payload int64
}

func (o *CatalogProductAttributeManagementV1AssignPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/products/attribute-sets/attributes][%d] catalogProductAttributeManagementV1AssignPostOK  %+v", 200, o.Payload)
}

func (o *CatalogProductAttributeManagementV1AssignPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogProductAttributeManagementV1AssignPostBadRequest creates a CatalogProductAttributeManagementV1AssignPostBadRequest with default headers values
func NewCatalogProductAttributeManagementV1AssignPostBadRequest() *CatalogProductAttributeManagementV1AssignPostBadRequest {
	return &CatalogProductAttributeManagementV1AssignPostBadRequest{}
}

/*CatalogProductAttributeManagementV1AssignPostBadRequest handles this case with default header values.

400 Bad Request
*/
type CatalogProductAttributeManagementV1AssignPostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CatalogProductAttributeManagementV1AssignPostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/products/attribute-sets/attributes][%d] catalogProductAttributeManagementV1AssignPostBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogProductAttributeManagementV1AssignPostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogProductAttributeManagementV1AssignPostUnauthorized creates a CatalogProductAttributeManagementV1AssignPostUnauthorized with default headers values
func NewCatalogProductAttributeManagementV1AssignPostUnauthorized() *CatalogProductAttributeManagementV1AssignPostUnauthorized {
	return &CatalogProductAttributeManagementV1AssignPostUnauthorized{}
}

/*CatalogProductAttributeManagementV1AssignPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CatalogProductAttributeManagementV1AssignPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CatalogProductAttributeManagementV1AssignPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/products/attribute-sets/attributes][%d] catalogProductAttributeManagementV1AssignPostUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogProductAttributeManagementV1AssignPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogProductAttributeManagementV1AssignPostDefault creates a CatalogProductAttributeManagementV1AssignPostDefault with default headers values
func NewCatalogProductAttributeManagementV1AssignPostDefault(code int) *CatalogProductAttributeManagementV1AssignPostDefault {
	return &CatalogProductAttributeManagementV1AssignPostDefault{
		_statusCode: code,
	}
}

/*CatalogProductAttributeManagementV1AssignPostDefault handles this case with default header values.

Unexpected error
*/
type CatalogProductAttributeManagementV1AssignPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalog product attribute management v1 assign post default response
func (o *CatalogProductAttributeManagementV1AssignPostDefault) Code() int {
	return o._statusCode
}

func (o *CatalogProductAttributeManagementV1AssignPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/products/attribute-sets/attributes][%d] catalogProductAttributeManagementV1AssignPost default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogProductAttributeManagementV1AssignPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CatalogProductAttributeManagementV1AssignPostBody catalog product attribute management v1 assign post body
swagger:model CatalogProductAttributeManagementV1AssignPostBody
*/
type CatalogProductAttributeManagementV1AssignPostBody struct {

	// attribute code
	// Required: true
	AttributeCode *string `json:"attributeCode"`

	// attribute group Id
	// Required: true
	AttributeGroupID *int64 `json:"attributeGroupId"`

	// attribute set Id
	// Required: true
	AttributeSetID *int64 `json:"attributeSetId"`

	// sort order
	// Required: true
	SortOrder *int64 `json:"sortOrder"`
}

// Validate validates this catalog product attribute management v1 assign post body
func (o *CatalogProductAttributeManagementV1AssignPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAttributeCode(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAttributeGroupID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateAttributeSetID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSortOrder(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogProductAttributeManagementV1AssignPostBody) validateAttributeCode(formats strfmt.Registry) error {

	if err := validate.Required("catalogProductAttributeManagementV1AssignPostBody"+"."+"attributeCode", "body", o.AttributeCode); err != nil {
		return err
	}

	return nil
}

func (o *CatalogProductAttributeManagementV1AssignPostBody) validateAttributeGroupID(formats strfmt.Registry) error {

	if err := validate.Required("catalogProductAttributeManagementV1AssignPostBody"+"."+"attributeGroupId", "body", o.AttributeGroupID); err != nil {
		return err
	}

	return nil
}

func (o *CatalogProductAttributeManagementV1AssignPostBody) validateAttributeSetID(formats strfmt.Registry) error {

	if err := validate.Required("catalogProductAttributeManagementV1AssignPostBody"+"."+"attributeSetId", "body", o.AttributeSetID); err != nil {
		return err
	}

	return nil
}

func (o *CatalogProductAttributeManagementV1AssignPostBody) validateSortOrder(formats strfmt.Registry) error {

	if err := validate.Required("catalogProductAttributeManagementV1AssignPostBody"+"."+"sortOrder", "body", o.SortOrder); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CatalogProductAttributeManagementV1AssignPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogProductAttributeManagementV1AssignPostBody) UnmarshalBinary(b []byte) error {
	var res CatalogProductAttributeManagementV1AssignPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
