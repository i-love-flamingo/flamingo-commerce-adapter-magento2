// Code generated by go-swagger; DO NOT EDIT.

package customer_group_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CustomerGroupManagementV1GetDefaultGroupGetStoreReader is a Reader for the CustomerGroupManagementV1GetDefaultGroupGetStore structure.
type CustomerGroupManagementV1GetDefaultGroupGetStoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCustomerGroupManagementV1GetDefaultGroupGetStoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCustomerGroupManagementV1GetDefaultGroupGetStoreDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerGroupManagementV1GetDefaultGroupGetStoreOK creates a CustomerGroupManagementV1GetDefaultGroupGetStoreOK with default headers values
func NewCustomerGroupManagementV1GetDefaultGroupGetStoreOK() *CustomerGroupManagementV1GetDefaultGroupGetStoreOK {
	return &CustomerGroupManagementV1GetDefaultGroupGetStoreOK{}
}

/*CustomerGroupManagementV1GetDefaultGroupGetStoreOK handles this case with default header values.

200 Success.
*/
type CustomerGroupManagementV1GetDefaultGroupGetStoreOK struct {
	Payload *models.CustomerDataGroupInterface
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreOK) Error() string {
	return fmt.Sprintf("[GET /V1/customerGroups/default/{storeId}][%d] customerGroupManagementV1GetDefaultGroupGetStoreOK  %+v", 200, o.Payload)
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerDataGroupInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest creates a CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest with default headers values
func NewCustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest() *CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest {
	return &CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest{}
}

/*CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest handles this case with default header values.

400 Bad Request
*/
type CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest) Error() string {
	return fmt.Sprintf("[GET /V1/customerGroups/default/{storeId}][%d] customerGroupManagementV1GetDefaultGroupGetStoreBadRequest  %+v", 400, o.Payload)
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized creates a CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized with default headers values
func NewCustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized() *CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized {
	return &CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized{}
}

/*CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/customerGroups/default/{storeId}][%d] customerGroupManagementV1GetDefaultGroupGetStoreUnauthorized  %+v", 401, o.Payload)
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError creates a CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError with default headers values
func NewCustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError() *CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError {
	return &CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError{}
}

/*CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError handles this case with default header values.

Internal Server error
*/
type CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError) Error() string {
	return fmt.Sprintf("[GET /V1/customerGroups/default/{storeId}][%d] customerGroupManagementV1GetDefaultGroupGetStoreInternalServerError  %+v", 500, o.Payload)
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerGroupManagementV1GetDefaultGroupGetStoreDefault creates a CustomerGroupManagementV1GetDefaultGroupGetStoreDefault with default headers values
func NewCustomerGroupManagementV1GetDefaultGroupGetStoreDefault(code int) *CustomerGroupManagementV1GetDefaultGroupGetStoreDefault {
	return &CustomerGroupManagementV1GetDefaultGroupGetStoreDefault{
		_statusCode: code,
	}
}

/*CustomerGroupManagementV1GetDefaultGroupGetStoreDefault handles this case with default header values.

Unexpected error
*/
type CustomerGroupManagementV1GetDefaultGroupGetStoreDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the customer group management v1 get default group get store default response
func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreDefault) Code() int {
	return o._statusCode
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreDefault) Error() string {
	return fmt.Sprintf("[GET /V1/customerGroups/default/{storeId}][%d] customerGroupManagementV1GetDefaultGroupGetStore default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerGroupManagementV1GetDefaultGroupGetStoreDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
