// Code generated by go-swagger; DO NOT EDIT.

package tax_tax_rate_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new tax tax rate repository v1 API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for tax tax rate repository v1 API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
TaxTaxRateRepositoryV1DeleteByIDDelete Delete tax rate
*/
func (a *Client) TaxTaxRateRepositoryV1DeleteByIDDelete(params *TaxTaxRateRepositoryV1DeleteByIDDeleteParams) (*TaxTaxRateRepositoryV1DeleteByIDDeleteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRateRepositoryV1DeleteByIDDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRateRepositoryV1DeleteByIdDelete",
		Method:             "DELETE",
		PathPattern:        "/V1/taxRates/{rateId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRateRepositoryV1DeleteByIDDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRateRepositoryV1DeleteByIDDeleteOK), nil

}

/*
TaxTaxRateRepositoryV1GetGet Get tax rate
*/
func (a *Client) TaxTaxRateRepositoryV1GetGet(params *TaxTaxRateRepositoryV1GetGetParams) (*TaxTaxRateRepositoryV1GetGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRateRepositoryV1GetGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRateRepositoryV1GetGet",
		Method:             "GET",
		PathPattern:        "/V1/taxRates/{rateId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRateRepositoryV1GetGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRateRepositoryV1GetGetOK), nil

}

/*
TaxTaxRateRepositoryV1GetListGet Search TaxRates This call returns an array of objects, but detailed information about each objectâ€™s attributes might not be included. See http://devdocs.magento.com/codelinks/attributes.html#TaxRateRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
*/
func (a *Client) TaxTaxRateRepositoryV1GetListGet(params *TaxTaxRateRepositoryV1GetListGetParams) (*TaxTaxRateRepositoryV1GetListGetOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRateRepositoryV1GetListGetParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRateRepositoryV1GetListGet",
		Method:             "GET",
		PathPattern:        "/V1/taxRates/search",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRateRepositoryV1GetListGetReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRateRepositoryV1GetListGetOK), nil

}

/*
TaxTaxRateRepositoryV1SavePost Create or update tax rate
*/
func (a *Client) TaxTaxRateRepositoryV1SavePost(params *TaxTaxRateRepositoryV1SavePostParams) (*TaxTaxRateRepositoryV1SavePostOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRateRepositoryV1SavePostParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRateRepositoryV1SavePost",
		Method:             "POST",
		PathPattern:        "/V1/taxRates",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRateRepositoryV1SavePostReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRateRepositoryV1SavePostOK), nil

}

/*
TaxTaxRateRepositoryV1SavePut Create or update tax rate
*/
func (a *Client) TaxTaxRateRepositoryV1SavePut(params *TaxTaxRateRepositoryV1SavePutParams) (*TaxTaxRateRepositoryV1SavePutOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewTaxTaxRateRepositoryV1SavePutParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "taxTaxRateRepositoryV1SavePut",
		Method:             "PUT",
		PathPattern:        "/V1/taxRates",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &TaxTaxRateRepositoryV1SavePutReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*TaxTaxRateRepositoryV1SavePutOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
