// Code generated by go-swagger; DO NOT EDIT.

package catalog_cost_storage_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CatalogCostStorageV1DeletePostReader is a Reader for the CatalogCostStorageV1DeletePost structure.
type CatalogCostStorageV1DeletePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CatalogCostStorageV1DeletePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCatalogCostStorageV1DeletePostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCatalogCostStorageV1DeletePostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCatalogCostStorageV1DeletePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCatalogCostStorageV1DeletePostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCatalogCostStorageV1DeletePostOK creates a CatalogCostStorageV1DeletePostOK with default headers values
func NewCatalogCostStorageV1DeletePostOK() *CatalogCostStorageV1DeletePostOK {
	return &CatalogCostStorageV1DeletePostOK{}
}

/*CatalogCostStorageV1DeletePostOK handles this case with default header values.

200 Success.
*/
type CatalogCostStorageV1DeletePostOK struct {
	Payload bool
}

func (o *CatalogCostStorageV1DeletePostOK) Error() string {
	return fmt.Sprintf("[POST /V1/products/cost-delete][%d] catalogCostStorageV1DeletePostOK  %+v", 200, o.Payload)
}

func (o *CatalogCostStorageV1DeletePostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCostStorageV1DeletePostBadRequest creates a CatalogCostStorageV1DeletePostBadRequest with default headers values
func NewCatalogCostStorageV1DeletePostBadRequest() *CatalogCostStorageV1DeletePostBadRequest {
	return &CatalogCostStorageV1DeletePostBadRequest{}
}

/*CatalogCostStorageV1DeletePostBadRequest handles this case with default header values.

400 Bad Request
*/
type CatalogCostStorageV1DeletePostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CatalogCostStorageV1DeletePostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/products/cost-delete][%d] catalogCostStorageV1DeletePostBadRequest  %+v", 400, o.Payload)
}

func (o *CatalogCostStorageV1DeletePostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCostStorageV1DeletePostUnauthorized creates a CatalogCostStorageV1DeletePostUnauthorized with default headers values
func NewCatalogCostStorageV1DeletePostUnauthorized() *CatalogCostStorageV1DeletePostUnauthorized {
	return &CatalogCostStorageV1DeletePostUnauthorized{}
}

/*CatalogCostStorageV1DeletePostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CatalogCostStorageV1DeletePostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CatalogCostStorageV1DeletePostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/products/cost-delete][%d] catalogCostStorageV1DeletePostUnauthorized  %+v", 401, o.Payload)
}

func (o *CatalogCostStorageV1DeletePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCatalogCostStorageV1DeletePostDefault creates a CatalogCostStorageV1DeletePostDefault with default headers values
func NewCatalogCostStorageV1DeletePostDefault(code int) *CatalogCostStorageV1DeletePostDefault {
	return &CatalogCostStorageV1DeletePostDefault{
		_statusCode: code,
	}
}

/*CatalogCostStorageV1DeletePostDefault handles this case with default header values.

Unexpected error
*/
type CatalogCostStorageV1DeletePostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the catalog cost storage v1 delete post default response
func (o *CatalogCostStorageV1DeletePostDefault) Code() int {
	return o._statusCode
}

func (o *CatalogCostStorageV1DeletePostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/products/cost-delete][%d] catalogCostStorageV1DeletePost default  %+v", o._statusCode, o.Payload)
}

func (o *CatalogCostStorageV1DeletePostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CatalogCostStorageV1DeletePostBody catalog cost storage v1 delete post body
swagger:model CatalogCostStorageV1DeletePostBody
*/
type CatalogCostStorageV1DeletePostBody struct {

	// skus
	// Required: true
	Skus []string `json:"skus"`
}

// Validate validates this catalog cost storage v1 delete post body
func (o *CatalogCostStorageV1DeletePostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSkus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CatalogCostStorageV1DeletePostBody) validateSkus(formats strfmt.Registry) error {

	if err := validate.Required("catalogCostStorageV1DeletePostBody"+"."+"skus", "body", o.Skus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CatalogCostStorageV1DeletePostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CatalogCostStorageV1DeletePostBody) UnmarshalBinary(b []byte) error {
	var res CatalogCostStorageV1DeletePostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
