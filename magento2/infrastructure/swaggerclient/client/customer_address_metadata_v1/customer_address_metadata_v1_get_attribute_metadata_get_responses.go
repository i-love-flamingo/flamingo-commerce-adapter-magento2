// Code generated by go-swagger; DO NOT EDIT.

package customer_address_metadata_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CustomerAddressMetadataV1GetAttributeMetadataGetReader is a Reader for the CustomerAddressMetadataV1GetAttributeMetadataGet structure.
type CustomerAddressMetadataV1GetAttributeMetadataGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerAddressMetadataV1GetAttributeMetadataGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCustomerAddressMetadataV1GetAttributeMetadataGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCustomerAddressMetadataV1GetAttributeMetadataGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewCustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCustomerAddressMetadataV1GetAttributeMetadataGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerAddressMetadataV1GetAttributeMetadataGetOK creates a CustomerAddressMetadataV1GetAttributeMetadataGetOK with default headers values
func NewCustomerAddressMetadataV1GetAttributeMetadataGetOK() *CustomerAddressMetadataV1GetAttributeMetadataGetOK {
	return &CustomerAddressMetadataV1GetAttributeMetadataGetOK{}
}

/*CustomerAddressMetadataV1GetAttributeMetadataGetOK handles this case with default header values.

200 Success.
*/
type CustomerAddressMetadataV1GetAttributeMetadataGetOK struct {
	Payload *models.CustomerDataAttributeMetadataInterface
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/attributeMetadata/customerAddress/attribute/{attributeCode}][%d] customerAddressMetadataV1GetAttributeMetadataGetOK  %+v", 200, o.Payload)
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerDataAttributeMetadataInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressMetadataV1GetAttributeMetadataGetBadRequest creates a CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest with default headers values
func NewCustomerAddressMetadataV1GetAttributeMetadataGetBadRequest() *CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest {
	return &CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest{}
}

/*CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest handles this case with default header values.

400 Bad Request
*/
type CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest) Error() string {
	return fmt.Sprintf("[GET /V1/attributeMetadata/customerAddress/attribute/{attributeCode}][%d] customerAddressMetadataV1GetAttributeMetadataGetBadRequest  %+v", 400, o.Payload)
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized creates a CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized with default headers values
func NewCustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized() *CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized {
	return &CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized{}
}

/*CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/attributeMetadata/customerAddress/attribute/{attributeCode}][%d] customerAddressMetadataV1GetAttributeMetadataGetUnauthorized  %+v", 401, o.Payload)
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError creates a CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError with default headers values
func NewCustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError() *CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError {
	return &CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError{}
}

/*CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError handles this case with default header values.

Internal Server error
*/
type CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /V1/attributeMetadata/customerAddress/attribute/{attributeCode}][%d] customerAddressMetadataV1GetAttributeMetadataGetInternalServerError  %+v", 500, o.Payload)
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressMetadataV1GetAttributeMetadataGetDefault creates a CustomerAddressMetadataV1GetAttributeMetadataGetDefault with default headers values
func NewCustomerAddressMetadataV1GetAttributeMetadataGetDefault(code int) *CustomerAddressMetadataV1GetAttributeMetadataGetDefault {
	return &CustomerAddressMetadataV1GetAttributeMetadataGetDefault{
		_statusCode: code,
	}
}

/*CustomerAddressMetadataV1GetAttributeMetadataGetDefault handles this case with default header values.

Unexpected error
*/
type CustomerAddressMetadataV1GetAttributeMetadataGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the customer address metadata v1 get attribute metadata get default response
func (o *CustomerAddressMetadataV1GetAttributeMetadataGetDefault) Code() int {
	return o._statusCode
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/attributeMetadata/customerAddress/attribute/{attributeCode}][%d] customerAddressMetadataV1GetAttributeMetadataGet default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerAddressMetadataV1GetAttributeMetadataGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
