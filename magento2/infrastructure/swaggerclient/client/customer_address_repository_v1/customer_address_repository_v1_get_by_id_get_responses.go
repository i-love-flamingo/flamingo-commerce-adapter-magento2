// Code generated by go-swagger; DO NOT EDIT.

package customer_address_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// CustomerAddressRepositoryV1GetByIDGetReader is a Reader for the CustomerAddressRepositoryV1GetByIDGet structure.
type CustomerAddressRepositoryV1GetByIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CustomerAddressRepositoryV1GetByIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCustomerAddressRepositoryV1GetByIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewCustomerAddressRepositoryV1GetByIDGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewCustomerAddressRepositoryV1GetByIDGetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewCustomerAddressRepositoryV1GetByIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCustomerAddressRepositoryV1GetByIDGetOK creates a CustomerAddressRepositoryV1GetByIDGetOK with default headers values
func NewCustomerAddressRepositoryV1GetByIDGetOK() *CustomerAddressRepositoryV1GetByIDGetOK {
	return &CustomerAddressRepositoryV1GetByIDGetOK{}
}

/*CustomerAddressRepositoryV1GetByIDGetOK handles this case with default header values.

200 Success.
*/
type CustomerAddressRepositoryV1GetByIDGetOK struct {
	Payload *models.CustomerDataAddressInterface
}

func (o *CustomerAddressRepositoryV1GetByIDGetOK) Error() string {
	return fmt.Sprintf("[GET /V1/customers/addresses/{addressId}][%d] customerAddressRepositoryV1GetByIdGetOK  %+v", 200, o.Payload)
}

func (o *CustomerAddressRepositoryV1GetByIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerDataAddressInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressRepositoryV1GetByIDGetUnauthorized creates a CustomerAddressRepositoryV1GetByIDGetUnauthorized with default headers values
func NewCustomerAddressRepositoryV1GetByIDGetUnauthorized() *CustomerAddressRepositoryV1GetByIDGetUnauthorized {
	return &CustomerAddressRepositoryV1GetByIDGetUnauthorized{}
}

/*CustomerAddressRepositoryV1GetByIDGetUnauthorized handles this case with default header values.

401 Unauthorized
*/
type CustomerAddressRepositoryV1GetByIDGetUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAddressRepositoryV1GetByIDGetUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/customers/addresses/{addressId}][%d] customerAddressRepositoryV1GetByIdGetUnauthorized  %+v", 401, o.Payload)
}

func (o *CustomerAddressRepositoryV1GetByIDGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressRepositoryV1GetByIDGetInternalServerError creates a CustomerAddressRepositoryV1GetByIDGetInternalServerError with default headers values
func NewCustomerAddressRepositoryV1GetByIDGetInternalServerError() *CustomerAddressRepositoryV1GetByIDGetInternalServerError {
	return &CustomerAddressRepositoryV1GetByIDGetInternalServerError{}
}

/*CustomerAddressRepositoryV1GetByIDGetInternalServerError handles this case with default header values.

Internal Server error
*/
type CustomerAddressRepositoryV1GetByIDGetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CustomerAddressRepositoryV1GetByIDGetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /V1/customers/addresses/{addressId}][%d] customerAddressRepositoryV1GetByIdGetInternalServerError  %+v", 500, o.Payload)
}

func (o *CustomerAddressRepositoryV1GetByIDGetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCustomerAddressRepositoryV1GetByIDGetDefault creates a CustomerAddressRepositoryV1GetByIDGetDefault with default headers values
func NewCustomerAddressRepositoryV1GetByIDGetDefault(code int) *CustomerAddressRepositoryV1GetByIDGetDefault {
	return &CustomerAddressRepositoryV1GetByIDGetDefault{
		_statusCode: code,
	}
}

/*CustomerAddressRepositoryV1GetByIDGetDefault handles this case with default header values.

Unexpected error
*/
type CustomerAddressRepositoryV1GetByIDGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the customer address repository v1 get by Id get default response
func (o *CustomerAddressRepositoryV1GetByIDGetDefault) Code() int {
	return o._statusCode
}

func (o *CustomerAddressRepositoryV1GetByIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /V1/customers/addresses/{addressId}][%d] customerAddressRepositoryV1GetByIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *CustomerAddressRepositoryV1GetByIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
