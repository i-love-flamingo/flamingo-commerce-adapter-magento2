// Code generated by go-swagger; DO NOT EDIT.

package sales_invoice_order_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSalesInvoiceOrderV1ExecutePostParams creates a new SalesInvoiceOrderV1ExecutePostParams object
// with the default values initialized.
func NewSalesInvoiceOrderV1ExecutePostParams() *SalesInvoiceOrderV1ExecutePostParams {
	var ()
	return &SalesInvoiceOrderV1ExecutePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSalesInvoiceOrderV1ExecutePostParamsWithTimeout creates a new SalesInvoiceOrderV1ExecutePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSalesInvoiceOrderV1ExecutePostParamsWithTimeout(timeout time.Duration) *SalesInvoiceOrderV1ExecutePostParams {
	var ()
	return &SalesInvoiceOrderV1ExecutePostParams{

		timeout: timeout,
	}
}

// NewSalesInvoiceOrderV1ExecutePostParamsWithContext creates a new SalesInvoiceOrderV1ExecutePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewSalesInvoiceOrderV1ExecutePostParamsWithContext(ctx context.Context) *SalesInvoiceOrderV1ExecutePostParams {
	var ()
	return &SalesInvoiceOrderV1ExecutePostParams{

		Context: ctx,
	}
}

// NewSalesInvoiceOrderV1ExecutePostParamsWithHTTPClient creates a new SalesInvoiceOrderV1ExecutePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSalesInvoiceOrderV1ExecutePostParamsWithHTTPClient(client *http.Client) *SalesInvoiceOrderV1ExecutePostParams {
	var ()
	return &SalesInvoiceOrderV1ExecutePostParams{
		HTTPClient: client,
	}
}

/*SalesInvoiceOrderV1ExecutePostParams contains all the parameters to send to the API endpoint
for the sales invoice order v1 execute post operation typically these are written to a http.Request
*/
type SalesInvoiceOrderV1ExecutePostParams struct {

	/*OrderID*/
	OrderID int64
	/*SalesInvoiceOrderV1ExecutePostBody*/
	SalesInvoiceOrderV1ExecutePostBody SalesInvoiceOrderV1ExecutePostBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) WithTimeout(timeout time.Duration) *SalesInvoiceOrderV1ExecutePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) WithContext(ctx context.Context) *SalesInvoiceOrderV1ExecutePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) WithHTTPClient(client *http.Client) *SalesInvoiceOrderV1ExecutePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrderID adds the orderID to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) WithOrderID(orderID int64) *SalesInvoiceOrderV1ExecutePostParams {
	o.SetOrderID(orderID)
	return o
}

// SetOrderID adds the orderId to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) SetOrderID(orderID int64) {
	o.OrderID = orderID
}

// WithSalesInvoiceOrderV1ExecutePostBody adds the salesInvoiceOrderV1ExecutePostBody to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) WithSalesInvoiceOrderV1ExecutePostBody(salesInvoiceOrderV1ExecutePostBody SalesInvoiceOrderV1ExecutePostBody) *SalesInvoiceOrderV1ExecutePostParams {
	o.SetSalesInvoiceOrderV1ExecutePostBody(salesInvoiceOrderV1ExecutePostBody)
	return o
}

// SetSalesInvoiceOrderV1ExecutePostBody adds the salesInvoiceOrderV1ExecutePostBody to the sales invoice order v1 execute post params
func (o *SalesInvoiceOrderV1ExecutePostParams) SetSalesInvoiceOrderV1ExecutePostBody(salesInvoiceOrderV1ExecutePostBody SalesInvoiceOrderV1ExecutePostBody) {
	o.SalesInvoiceOrderV1ExecutePostBody = salesInvoiceOrderV1ExecutePostBody
}

// WriteToRequest writes these params to a swagger request
func (o *SalesInvoiceOrderV1ExecutePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param orderId
	if err := r.SetPathParam("orderId", swag.FormatInt64(o.OrderID)); err != nil {
		return err
	}

	if err := r.SetBodyParam(o.SalesInvoiceOrderV1ExecutePostBody); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
