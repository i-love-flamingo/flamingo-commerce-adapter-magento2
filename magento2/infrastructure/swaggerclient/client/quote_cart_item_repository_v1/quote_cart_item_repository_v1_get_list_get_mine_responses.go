// Code generated by go-swagger; DO NOT EDIT.

package quote_cart_item_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// QuoteCartItemRepositoryV1GetListGetMineReader is a Reader for the QuoteCartItemRepositoryV1GetListGetMine structure.
type QuoteCartItemRepositoryV1GetListGetMineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuoteCartItemRepositoryV1GetListGetMineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewQuoteCartItemRepositoryV1GetListGetMineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewQuoteCartItemRepositoryV1GetListGetMineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewQuoteCartItemRepositoryV1GetListGetMineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewQuoteCartItemRepositoryV1GetListGetMineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewQuoteCartItemRepositoryV1GetListGetMineOK creates a QuoteCartItemRepositoryV1GetListGetMineOK with default headers values
func NewQuoteCartItemRepositoryV1GetListGetMineOK() *QuoteCartItemRepositoryV1GetListGetMineOK {
	return &QuoteCartItemRepositoryV1GetListGetMineOK{}
}

/*QuoteCartItemRepositoryV1GetListGetMineOK handles this case with default header values.

200 Success.
*/
type QuoteCartItemRepositoryV1GetListGetMineOK struct {
	Payload []*models.QuoteDataCartItemInterface
}

func (o *QuoteCartItemRepositoryV1GetListGetMineOK) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/items][%d] quoteCartItemRepositoryV1GetListGetMineOK  %+v", 200, o.Payload)
}

func (o *QuoteCartItemRepositoryV1GetListGetMineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteCartItemRepositoryV1GetListGetMineBadRequest creates a QuoteCartItemRepositoryV1GetListGetMineBadRequest with default headers values
func NewQuoteCartItemRepositoryV1GetListGetMineBadRequest() *QuoteCartItemRepositoryV1GetListGetMineBadRequest {
	return &QuoteCartItemRepositoryV1GetListGetMineBadRequest{}
}

/*QuoteCartItemRepositoryV1GetListGetMineBadRequest handles this case with default header values.

400 Bad Request
*/
type QuoteCartItemRepositoryV1GetListGetMineBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *QuoteCartItemRepositoryV1GetListGetMineBadRequest) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/items][%d] quoteCartItemRepositoryV1GetListGetMineBadRequest  %+v", 400, o.Payload)
}

func (o *QuoteCartItemRepositoryV1GetListGetMineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteCartItemRepositoryV1GetListGetMineUnauthorized creates a QuoteCartItemRepositoryV1GetListGetMineUnauthorized with default headers values
func NewQuoteCartItemRepositoryV1GetListGetMineUnauthorized() *QuoteCartItemRepositoryV1GetListGetMineUnauthorized {
	return &QuoteCartItemRepositoryV1GetListGetMineUnauthorized{}
}

/*QuoteCartItemRepositoryV1GetListGetMineUnauthorized handles this case with default header values.

401 Unauthorized
*/
type QuoteCartItemRepositoryV1GetListGetMineUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *QuoteCartItemRepositoryV1GetListGetMineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/items][%d] quoteCartItemRepositoryV1GetListGetMineUnauthorized  %+v", 401, o.Payload)
}

func (o *QuoteCartItemRepositoryV1GetListGetMineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteCartItemRepositoryV1GetListGetMineDefault creates a QuoteCartItemRepositoryV1GetListGetMineDefault with default headers values
func NewQuoteCartItemRepositoryV1GetListGetMineDefault(code int) *QuoteCartItemRepositoryV1GetListGetMineDefault {
	return &QuoteCartItemRepositoryV1GetListGetMineDefault{
		_statusCode: code,
	}
}

/*QuoteCartItemRepositoryV1GetListGetMineDefault handles this case with default header values.

Unexpected error
*/
type QuoteCartItemRepositoryV1GetListGetMineDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the quote cart item repository v1 get list get mine default response
func (o *QuoteCartItemRepositoryV1GetListGetMineDefault) Code() int {
	return o._statusCode
}

func (o *QuoteCartItemRepositoryV1GetListGetMineDefault) Error() string {
	return fmt.Sprintf("[GET /V1/carts/mine/items][%d] quoteCartItemRepositoryV1GetListGetMine default  %+v", o._statusCode, o.Payload)
}

func (o *QuoteCartItemRepositoryV1GetListGetMineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
