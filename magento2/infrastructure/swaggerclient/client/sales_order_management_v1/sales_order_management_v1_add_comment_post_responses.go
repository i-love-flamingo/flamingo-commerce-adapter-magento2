// Code generated by go-swagger; DO NOT EDIT.

package sales_order_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SalesOrderManagementV1AddCommentPostReader is a Reader for the SalesOrderManagementV1AddCommentPost structure.
type SalesOrderManagementV1AddCommentPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SalesOrderManagementV1AddCommentPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSalesOrderManagementV1AddCommentPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSalesOrderManagementV1AddCommentPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSalesOrderManagementV1AddCommentPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSalesOrderManagementV1AddCommentPostOK creates a SalesOrderManagementV1AddCommentPostOK with default headers values
func NewSalesOrderManagementV1AddCommentPostOK() *SalesOrderManagementV1AddCommentPostOK {
	return &SalesOrderManagementV1AddCommentPostOK{}
}

/*SalesOrderManagementV1AddCommentPostOK handles this case with default header values.

200 Success.
*/
type SalesOrderManagementV1AddCommentPostOK struct {
	Payload bool
}

func (o *SalesOrderManagementV1AddCommentPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/orders/{id}/comments][%d] salesOrderManagementV1AddCommentPostOK  %+v", 200, o.Payload)
}

func (o *SalesOrderManagementV1AddCommentPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesOrderManagementV1AddCommentPostUnauthorized creates a SalesOrderManagementV1AddCommentPostUnauthorized with default headers values
func NewSalesOrderManagementV1AddCommentPostUnauthorized() *SalesOrderManagementV1AddCommentPostUnauthorized {
	return &SalesOrderManagementV1AddCommentPostUnauthorized{}
}

/*SalesOrderManagementV1AddCommentPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SalesOrderManagementV1AddCommentPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SalesOrderManagementV1AddCommentPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/orders/{id}/comments][%d] salesOrderManagementV1AddCommentPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SalesOrderManagementV1AddCommentPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesOrderManagementV1AddCommentPostDefault creates a SalesOrderManagementV1AddCommentPostDefault with default headers values
func NewSalesOrderManagementV1AddCommentPostDefault(code int) *SalesOrderManagementV1AddCommentPostDefault {
	return &SalesOrderManagementV1AddCommentPostDefault{
		_statusCode: code,
	}
}

/*SalesOrderManagementV1AddCommentPostDefault handles this case with default header values.

Unexpected error
*/
type SalesOrderManagementV1AddCommentPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the sales order management v1 add comment post default response
func (o *SalesOrderManagementV1AddCommentPostDefault) Code() int {
	return o._statusCode
}

func (o *SalesOrderManagementV1AddCommentPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/orders/{id}/comments][%d] salesOrderManagementV1AddCommentPost default  %+v", o._statusCode, o.Payload)
}

func (o *SalesOrderManagementV1AddCommentPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SalesOrderManagementV1AddCommentPostBody sales order management v1 add comment post body
swagger:model SalesOrderManagementV1AddCommentPostBody
*/
type SalesOrderManagementV1AddCommentPostBody struct {

	// status history
	// Required: true
	StatusHistory *models.SalesDataOrderStatusHistoryInterface `json:"statusHistory"`
}

// Validate validates this sales order management v1 add comment post body
func (o *SalesOrderManagementV1AddCommentPostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatusHistory(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SalesOrderManagementV1AddCommentPostBody) validateStatusHistory(formats strfmt.Registry) error {

	if err := validate.Required("salesOrderManagementV1AddCommentPostBody"+"."+"statusHistory", "body", o.StatusHistory); err != nil {
		return err
	}

	if o.StatusHistory != nil {
		if err := o.StatusHistory.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("salesOrderManagementV1AddCommentPostBody" + "." + "statusHistory")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SalesOrderManagementV1AddCommentPostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SalesOrderManagementV1AddCommentPostBody) UnmarshalBinary(b []byte) error {
	var res SalesOrderManagementV1AddCommentPostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
