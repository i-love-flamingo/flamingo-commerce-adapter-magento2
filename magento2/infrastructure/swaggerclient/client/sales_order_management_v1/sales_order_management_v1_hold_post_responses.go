// Code generated by go-swagger; DO NOT EDIT.

package sales_order_management_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SalesOrderManagementV1HoldPostReader is a Reader for the SalesOrderManagementV1HoldPost structure.
type SalesOrderManagementV1HoldPostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SalesOrderManagementV1HoldPostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSalesOrderManagementV1HoldPostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewSalesOrderManagementV1HoldPostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSalesOrderManagementV1HoldPostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSalesOrderManagementV1HoldPostOK creates a SalesOrderManagementV1HoldPostOK with default headers values
func NewSalesOrderManagementV1HoldPostOK() *SalesOrderManagementV1HoldPostOK {
	return &SalesOrderManagementV1HoldPostOK{}
}

/*SalesOrderManagementV1HoldPostOK handles this case with default header values.

200 Success.
*/
type SalesOrderManagementV1HoldPostOK struct {
	Payload bool
}

func (o *SalesOrderManagementV1HoldPostOK) Error() string {
	return fmt.Sprintf("[POST /V1/orders/{id}/hold][%d] salesOrderManagementV1HoldPostOK  %+v", 200, o.Payload)
}

func (o *SalesOrderManagementV1HoldPostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesOrderManagementV1HoldPostUnauthorized creates a SalesOrderManagementV1HoldPostUnauthorized with default headers values
func NewSalesOrderManagementV1HoldPostUnauthorized() *SalesOrderManagementV1HoldPostUnauthorized {
	return &SalesOrderManagementV1HoldPostUnauthorized{}
}

/*SalesOrderManagementV1HoldPostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SalesOrderManagementV1HoldPostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SalesOrderManagementV1HoldPostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/orders/{id}/hold][%d] salesOrderManagementV1HoldPostUnauthorized  %+v", 401, o.Payload)
}

func (o *SalesOrderManagementV1HoldPostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesOrderManagementV1HoldPostDefault creates a SalesOrderManagementV1HoldPostDefault with default headers values
func NewSalesOrderManagementV1HoldPostDefault(code int) *SalesOrderManagementV1HoldPostDefault {
	return &SalesOrderManagementV1HoldPostDefault{
		_statusCode: code,
	}
}

/*SalesOrderManagementV1HoldPostDefault handles this case with default header values.

Unexpected error
*/
type SalesOrderManagementV1HoldPostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the sales order management v1 hold post default response
func (o *SalesOrderManagementV1HoldPostDefault) Code() int {
	return o._statusCode
}

func (o *SalesOrderManagementV1HoldPostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/orders/{id}/hold][%d] salesOrderManagementV1HoldPost default  %+v", o._statusCode, o.Payload)
}

func (o *SalesOrderManagementV1HoldPostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
