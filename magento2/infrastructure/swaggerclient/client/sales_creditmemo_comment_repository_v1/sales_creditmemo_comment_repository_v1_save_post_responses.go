// Code generated by go-swagger; DO NOT EDIT.

package sales_creditmemo_comment_repository_v1

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "flamingo.me/flamingo-commerce-adapter-magento2/magento2/infrastructure/swaggerclient/models"
)

// SalesCreditmemoCommentRepositoryV1SavePostReader is a Reader for the SalesCreditmemoCommentRepositoryV1SavePost structure.
type SalesCreditmemoCommentRepositoryV1SavePostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SalesCreditmemoCommentRepositoryV1SavePostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSalesCreditmemoCommentRepositoryV1SavePostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSalesCreditmemoCommentRepositoryV1SavePostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSalesCreditmemoCommentRepositoryV1SavePostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewSalesCreditmemoCommentRepositoryV1SavePostDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSalesCreditmemoCommentRepositoryV1SavePostOK creates a SalesCreditmemoCommentRepositoryV1SavePostOK with default headers values
func NewSalesCreditmemoCommentRepositoryV1SavePostOK() *SalesCreditmemoCommentRepositoryV1SavePostOK {
	return &SalesCreditmemoCommentRepositoryV1SavePostOK{}
}

/*SalesCreditmemoCommentRepositoryV1SavePostOK handles this case with default header values.

200 Success.
*/
type SalesCreditmemoCommentRepositoryV1SavePostOK struct {
	Payload *models.SalesDataCreditmemoCommentInterface
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostOK) Error() string {
	return fmt.Sprintf("[POST /V1/creditmemo/{id}/comments][%d] salesCreditmemoCommentRepositoryV1SavePostOK  %+v", 200, o.Payload)
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SalesDataCreditmemoCommentInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesCreditmemoCommentRepositoryV1SavePostBadRequest creates a SalesCreditmemoCommentRepositoryV1SavePostBadRequest with default headers values
func NewSalesCreditmemoCommentRepositoryV1SavePostBadRequest() *SalesCreditmemoCommentRepositoryV1SavePostBadRequest {
	return &SalesCreditmemoCommentRepositoryV1SavePostBadRequest{}
}

/*SalesCreditmemoCommentRepositoryV1SavePostBadRequest handles this case with default header values.

400 Bad Request
*/
type SalesCreditmemoCommentRepositoryV1SavePostBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostBadRequest) Error() string {
	return fmt.Sprintf("[POST /V1/creditmemo/{id}/comments][%d] salesCreditmemoCommentRepositoryV1SavePostBadRequest  %+v", 400, o.Payload)
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesCreditmemoCommentRepositoryV1SavePostUnauthorized creates a SalesCreditmemoCommentRepositoryV1SavePostUnauthorized with default headers values
func NewSalesCreditmemoCommentRepositoryV1SavePostUnauthorized() *SalesCreditmemoCommentRepositoryV1SavePostUnauthorized {
	return &SalesCreditmemoCommentRepositoryV1SavePostUnauthorized{}
}

/*SalesCreditmemoCommentRepositoryV1SavePostUnauthorized handles this case with default header values.

401 Unauthorized
*/
type SalesCreditmemoCommentRepositoryV1SavePostUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /V1/creditmemo/{id}/comments][%d] salesCreditmemoCommentRepositoryV1SavePostUnauthorized  %+v", 401, o.Payload)
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSalesCreditmemoCommentRepositoryV1SavePostDefault creates a SalesCreditmemoCommentRepositoryV1SavePostDefault with default headers values
func NewSalesCreditmemoCommentRepositoryV1SavePostDefault(code int) *SalesCreditmemoCommentRepositoryV1SavePostDefault {
	return &SalesCreditmemoCommentRepositoryV1SavePostDefault{
		_statusCode: code,
	}
}

/*SalesCreditmemoCommentRepositoryV1SavePostDefault handles this case with default header values.

Unexpected error
*/
type SalesCreditmemoCommentRepositoryV1SavePostDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the sales creditmemo comment repository v1 save post default response
func (o *SalesCreditmemoCommentRepositoryV1SavePostDefault) Code() int {
	return o._statusCode
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostDefault) Error() string {
	return fmt.Sprintf("[POST /V1/creditmemo/{id}/comments][%d] salesCreditmemoCommentRepositoryV1SavePost default  %+v", o._statusCode, o.Payload)
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SalesCreditmemoCommentRepositoryV1SavePostBody sales creditmemo comment repository v1 save post body
swagger:model SalesCreditmemoCommentRepositoryV1SavePostBody
*/
type SalesCreditmemoCommentRepositoryV1SavePostBody struct {

	// entity
	// Required: true
	Entity *models.SalesDataCreditmemoCommentInterface `json:"entity"`
}

// Validate validates this sales creditmemo comment repository v1 save post body
func (o *SalesCreditmemoCommentRepositoryV1SavePostBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEntity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SalesCreditmemoCommentRepositoryV1SavePostBody) validateEntity(formats strfmt.Registry) error {

	if err := validate.Required("salesCreditmemoCommentRepositoryV1SavePostBody"+"."+"entity", "body", o.Entity); err != nil {
		return err
	}

	if o.Entity != nil {
		if err := o.Entity.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("salesCreditmemoCommentRepositoryV1SavePostBody" + "." + "entity")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *SalesCreditmemoCommentRepositoryV1SavePostBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SalesCreditmemoCommentRepositoryV1SavePostBody) UnmarshalBinary(b []byte) error {
	var res SalesCreditmemoCommentRepositoryV1SavePostBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
